(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["testpackage"] = factory();
	else
		root["ALT1"] = factory();
})((typeof self!='undefined'?self:this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/@alt1/ability/actionbar.ts":
/*!**************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbar.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ActionbarReader; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @alt1/ocr */ \"../node_modules/@alt1/ocr/index.ts\");\n\r\n\r\nvar chatfont = __webpack_require__(/*! @alt1/ocr/fonts/aa_8px_new.fontmeta.json */ \"../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json\");\r\nvar imgs = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].webpackImages({\r\n    dren: __webpack_require__(/*! ./actionbarimgs/dren.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/dren.data.png\"),\r\n    drenretal: __webpack_require__(/*! ./actionbarimgs/drenretal.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png\"),\r\n    lifepoints: __webpack_require__(/*! ./actionbarimgs/lifepoints.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png\"),\r\n    lifepointspoison: __webpack_require__(/*! ./actionbarimgs/lifepointspoison.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png\"),\r\n    prayer: __webpack_require__(/*! ./actionbarimgs/prayer.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/prayer.data.png\"),\r\n    prayeron: __webpack_require__(/*! ./actionbarimgs/prayeron.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png\"),\r\n    sumpoints: __webpack_require__(/*! ./actionbarimgs/sumpoints.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png\"),\r\n});\r\nclass ActionbarReader {\r\n    constructor() {\r\n        this.pos = null;\r\n    }\r\n    find(img) {\r\n        if (!img) {\r\n            img = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"captureHoldFullRs\"]();\r\n        }\r\n        if (!img) {\r\n            return false;\r\n        }\r\n        var sumpos = img.findSubimage(imgs.sumpoints);\r\n        if (sumpos.length == 0) {\r\n            return false;\r\n        }\r\n        var hppos = img.findSubimage(imgs.lifepoints);\r\n        if (hppos.length == 0) {\r\n            hppos = img.findSubimage(imgs.lifepointspoison);\r\n        }\r\n        if (hppos.length == 0) {\r\n            return false;\r\n        }\r\n        var layout = null;\r\n        for (var a in ActionbarReader.layouts) {\r\n            var l = ActionbarReader.layouts[a];\r\n            if (sumpos[0].x - hppos[0].x == l.sum.x - l.hp.x && sumpos[0].y - hppos[0].y == l.sum.y - l.hp.y) {\r\n                layout = l;\r\n                break;\r\n            }\r\n        }\r\n        if (!layout) {\r\n            return false;\r\n        }\r\n        this.pos = {\r\n            x: hppos[0].x - layout.hp.x,\r\n            y: hppos[0].y - layout.hp.y,\r\n            layout: layout\r\n        };\r\n        return true;\r\n    }\r\n    read(buffer, bufx, bufy) {\r\n        if (!this.pos) {\r\n            throw new Error(\"interface is not found yet\");\r\n        }\r\n        if (!buffer) {\r\n            //TODO fix the capture dimensions!!!\r\n            let fixoffset = 10;\r\n            buffer = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"capture\"](this.pos.x, this.pos.y - fixoffset, this.pos.layout.width, this.pos.layout.height + fixoffset);\r\n            bufx = this.pos.x;\r\n            bufy = this.pos.y - fixoffset;\r\n        }\r\n        var dx = this.pos.x - bufx;\r\n        var dy = this.pos.y - bufy;\r\n        var hptext = this.readBarNumber(buffer, this.pos.layout.hp.x + dx, this.pos.layout.hp.y + dy, this.pos.layout.hor);\r\n        var drentext = this.readBarNumber(buffer, this.pos.layout.dren.x + dx, this.pos.layout.dren.y + dy, this.pos.layout.hor);\r\n        var sumtext = this.readBarNumber(buffer, this.pos.layout.sum.x + dx, this.pos.layout.sum.y + dy, this.pos.layout.hor);\r\n        var praytext = this.readBarNumber(buffer, this.pos.layout.pray.x + dx, this.pos.layout.pray.y + dy, this.pos.layout.hor);\r\n        var hpbar = this.readBar(buffer, this.pos.layout.hp.x + dx, this.pos.layout.hp.y + dy, this.pos.layout.hor);\r\n        var drenbar = this.readBar(buffer, this.pos.layout.dren.x + dx, this.pos.layout.dren.y + dy, this.pos.layout.hor);\r\n        var praybar = this.readBar(buffer, this.pos.layout.pray.x + dx, this.pos.layout.pray.y + dy, this.pos.layout.hor);\r\n        var sumbar = this.readBar(buffer, this.pos.layout.sum.x + dx, this.pos.layout.sum.y + dy, this.pos.layout.hor);\r\n        return {\r\n            hp: (hptext ? hptext.cur / hptext.max : hpbar),\r\n            dren: (drentext ? drentext.cur / drentext.max : drenbar),\r\n            sum: (sumtext ? sumtext.cur / sumtext.max : sumbar),\r\n            pray: (praytext ? praytext.cur / praytext.max : praybar),\r\n            exacthp: hptext,\r\n            exactdren: drentext,\r\n            exactpray: praytext,\r\n            exactsum: sumtext\r\n        };\r\n    }\r\n    readBarNumber(buffer, x, y, hor) {\r\n        if (hor) {\r\n            var line = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](buffer, chatfont, [255, 255, 255], x + 22, y + 5, true, false);\r\n            var m = line.text.match(/^(\\d+)(\\/(\\d+)|%)$/);\r\n            if (m) {\r\n                return { cur: +m[1], max: (m[2] == \"%\" ? 100 : +m[3]) };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    readBar(buffer, x, y, hor) {\r\n        if (!this.pos) {\r\n            throw new Error(\"interface not found yet\");\r\n        }\r\n        if (hor) {\r\n            x += 25;\r\n            y += 11;\r\n        }\r\n        else {\r\n            x += 7;\r\n            y += 26;\r\n        }\r\n        var width = this.pos.layout.barlength;\r\n        for (var b = 0; b < width; b++) {\r\n            var i = buffer.pixelOffset(x + (hor ? b : 0), y + (hor ? 0 : b));\r\n            if (_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].coldif(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], 25, 31, 34, 255) < 20) {\r\n                break;\r\n            }\r\n        }\r\n        return b / width;\r\n    }\r\n}\r\nActionbarReader.layouts = {\r\n    mainflat: { hp: { x: 0, y: 0 }, dren: { x: 118, y: 0 }, pray: { x: 236, y: 0 }, sum: { x: 354, y: 0 }, width: 465, height: 25, hor: true, barlength: 80, type: \"mainflat\" },\r\n    mainhor: { hp: { x: 0, y: 0 }, dren: { x: 100, y: 0 }, pray: { x: 16, y: 22 }, sum: { x: 116, y: 22 }, width: 210, height: 45, hor: true, barlength: 62, type: \"mainhor\" },\r\n    mainver: { hp: { x: 0, y: 0 }, dren: { x: 0, y: 100 }, pray: { x: 22, y: 16 }, sum: { x: 22, y: 116 }, width: 35, height: 210, hor: false, barlength: 62, type: \"mainver\" },\r\n    maintower: { hp: { x: 0, y: 0 }, dren: { x: 0, y: 119 }, pray: { x: 0, y: 238 }, sum: { x: 0, y: 357 }, width: 20, height: 465, hor: false, barlength: 80, type: \"maintower\" }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhci50cz8xODE3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW9DO0FBQ0g7QUFDakMsZUFBZSxtQkFBTyxDQUFDLDBHQUEwQztBQUNqRSxXQUFXLHNEQUFpQjtBQUM1QixVQUFVLG1CQUFPLENBQUMsZ0dBQStCO0FBQ2pELGVBQWUsbUJBQU8sQ0FBQywwR0FBb0M7QUFDM0QsZ0JBQWdCLG1CQUFPLENBQUMsNEdBQXFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLHdIQUEyQztBQUN6RSxZQUFZLG1CQUFPLENBQUMsb0dBQWlDO0FBQ3JELGNBQWMsbUJBQU8sQ0FBQyx3R0FBbUM7QUFDekQsZUFBZSxtQkFBTyxDQUFDLDBHQUFvQztBQUMzRCxDQUFDO0FBQ2M7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDREQUF1QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixrREFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtEQUFZO0FBQ25DO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixXQUFXO0FBQ2xDO0FBQ0EsZ0JBQWdCLHNEQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTSxhQUFhLFNBQVMsZUFBZSxTQUFTLGVBQWUsUUFBUSxlQUFlLHNFQUFzRTtBQUMvSyxjQUFjLE1BQU0sYUFBYSxTQUFTLGVBQWUsU0FBUyxlQUFlLFFBQVEsZ0JBQWdCLHFFQUFxRTtBQUM5SyxjQUFjLE1BQU0sYUFBYSxTQUFTLGVBQWUsU0FBUyxlQUFlLFFBQVEsZ0JBQWdCLHNFQUFzRTtBQUMvSyxnQkFBZ0IsTUFBTSxhQUFhLFNBQVMsZUFBZSxTQUFTLGVBQWUsUUFBUSxlQUFlO0FBQzFHIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGExbGliIGZyb20gXCJAYWx0MS9iYXNlXCI7XHJcbmltcG9ydCAqIGFzIE9DUiBmcm9tIFwiQGFsdDEvb2NyXCI7XHJcbnZhciBjaGF0Zm9udCA9IHJlcXVpcmUoXCJAYWx0MS9vY3IvZm9udHMvYWFfOHB4X25ldy5mb250bWV0YS5qc29uXCIpO1xyXG52YXIgaW1ncyA9IGExbGliLkltYWdlRGV0ZWN0LndlYnBhY2tJbWFnZXMoe1xyXG4gICAgZHJlbjogcmVxdWlyZShcIi4vYWN0aW9uYmFyaW1ncy9kcmVuLmRhdGEucG5nXCIpLFxyXG4gICAgZHJlbnJldGFsOiByZXF1aXJlKFwiLi9hY3Rpb25iYXJpbWdzL2RyZW5yZXRhbC5kYXRhLnBuZ1wiKSxcclxuICAgIGxpZmVwb2ludHM6IHJlcXVpcmUoXCIuL2FjdGlvbmJhcmltZ3MvbGlmZXBvaW50cy5kYXRhLnBuZ1wiKSxcclxuICAgIGxpZmVwb2ludHNwb2lzb246IHJlcXVpcmUoXCIuL2FjdGlvbmJhcmltZ3MvbGlmZXBvaW50c3BvaXNvbi5kYXRhLnBuZ1wiKSxcclxuICAgIHByYXllcjogcmVxdWlyZShcIi4vYWN0aW9uYmFyaW1ncy9wcmF5ZXIuZGF0YS5wbmdcIiksXHJcbiAgICBwcmF5ZXJvbjogcmVxdWlyZShcIi4vYWN0aW9uYmFyaW1ncy9wcmF5ZXJvbi5kYXRhLnBuZ1wiKSxcclxuICAgIHN1bXBvaW50czogcmVxdWlyZShcIi4vYWN0aW9uYmFyaW1ncy9zdW1wb2ludHMuZGF0YS5wbmdcIiksXHJcbn0pO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBY3Rpb25iYXJSZWFkZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5wb3MgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgZmluZChpbWcpIHtcclxuICAgICAgICBpZiAoIWltZykge1xyXG4gICAgICAgICAgICBpbWcgPSBhMWxpYi5jYXB0dXJlSG9sZEZ1bGxScygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWltZykge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBzdW1wb3MgPSBpbWcuZmluZFN1YmltYWdlKGltZ3Muc3VtcG9pbnRzKTtcclxuICAgICAgICBpZiAoc3VtcG9zLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGhwcG9zID0gaW1nLmZpbmRTdWJpbWFnZShpbWdzLmxpZmVwb2ludHMpO1xyXG4gICAgICAgIGlmIChocHBvcy5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICBocHBvcyA9IGltZy5maW5kU3ViaW1hZ2UoaW1ncy5saWZlcG9pbnRzcG9pc29uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGhwcG9zLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGxheW91dCA9IG51bGw7XHJcbiAgICAgICAgZm9yICh2YXIgYSBpbiBBY3Rpb25iYXJSZWFkZXIubGF5b3V0cykge1xyXG4gICAgICAgICAgICB2YXIgbCA9IEFjdGlvbmJhclJlYWRlci5sYXlvdXRzW2FdO1xyXG4gICAgICAgICAgICBpZiAoc3VtcG9zWzBdLnggLSBocHBvc1swXS54ID09IGwuc3VtLnggLSBsLmhwLnggJiYgc3VtcG9zWzBdLnkgLSBocHBvc1swXS55ID09IGwuc3VtLnkgLSBsLmhwLnkpIHtcclxuICAgICAgICAgICAgICAgIGxheW91dCA9IGw7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWxheW91dCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucG9zID0ge1xyXG4gICAgICAgICAgICB4OiBocHBvc1swXS54IC0gbGF5b3V0LmhwLngsXHJcbiAgICAgICAgICAgIHk6IGhwcG9zWzBdLnkgLSBsYXlvdXQuaHAueSxcclxuICAgICAgICAgICAgbGF5b3V0OiBsYXlvdXRcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmVhZChidWZmZXIsIGJ1ZngsIGJ1ZnkpIHtcclxuICAgICAgICBpZiAoIXRoaXMucG9zKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImludGVyZmFjZSBpcyBub3QgZm91bmQgeWV0XCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWJ1ZmZlcikge1xyXG4gICAgICAgICAgICAvL1RPRE8gZml4IHRoZSBjYXB0dXJlIGRpbWVuc2lvbnMhISFcclxuICAgICAgICAgICAgbGV0IGZpeG9mZnNldCA9IDEwO1xyXG4gICAgICAgICAgICBidWZmZXIgPSBhMWxpYi5jYXB0dXJlKHRoaXMucG9zLngsIHRoaXMucG9zLnkgLSBmaXhvZmZzZXQsIHRoaXMucG9zLmxheW91dC53aWR0aCwgdGhpcy5wb3MubGF5b3V0LmhlaWdodCArIGZpeG9mZnNldCk7XHJcbiAgICAgICAgICAgIGJ1ZnggPSB0aGlzLnBvcy54O1xyXG4gICAgICAgICAgICBidWZ5ID0gdGhpcy5wb3MueSAtIGZpeG9mZnNldDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGR4ID0gdGhpcy5wb3MueCAtIGJ1Zng7XHJcbiAgICAgICAgdmFyIGR5ID0gdGhpcy5wb3MueSAtIGJ1Znk7XHJcbiAgICAgICAgdmFyIGhwdGV4dCA9IHRoaXMucmVhZEJhck51bWJlcihidWZmZXIsIHRoaXMucG9zLmxheW91dC5ocC54ICsgZHgsIHRoaXMucG9zLmxheW91dC5ocC55ICsgZHksIHRoaXMucG9zLmxheW91dC5ob3IpO1xyXG4gICAgICAgIHZhciBkcmVudGV4dCA9IHRoaXMucmVhZEJhck51bWJlcihidWZmZXIsIHRoaXMucG9zLmxheW91dC5kcmVuLnggKyBkeCwgdGhpcy5wb3MubGF5b3V0LmRyZW4ueSArIGR5LCB0aGlzLnBvcy5sYXlvdXQuaG9yKTtcclxuICAgICAgICB2YXIgc3VtdGV4dCA9IHRoaXMucmVhZEJhck51bWJlcihidWZmZXIsIHRoaXMucG9zLmxheW91dC5zdW0ueCArIGR4LCB0aGlzLnBvcy5sYXlvdXQuc3VtLnkgKyBkeSwgdGhpcy5wb3MubGF5b3V0Lmhvcik7XHJcbiAgICAgICAgdmFyIHByYXl0ZXh0ID0gdGhpcy5yZWFkQmFyTnVtYmVyKGJ1ZmZlciwgdGhpcy5wb3MubGF5b3V0LnByYXkueCArIGR4LCB0aGlzLnBvcy5sYXlvdXQucHJheS55ICsgZHksIHRoaXMucG9zLmxheW91dC5ob3IpO1xyXG4gICAgICAgIHZhciBocGJhciA9IHRoaXMucmVhZEJhcihidWZmZXIsIHRoaXMucG9zLmxheW91dC5ocC54ICsgZHgsIHRoaXMucG9zLmxheW91dC5ocC55ICsgZHksIHRoaXMucG9zLmxheW91dC5ob3IpO1xyXG4gICAgICAgIHZhciBkcmVuYmFyID0gdGhpcy5yZWFkQmFyKGJ1ZmZlciwgdGhpcy5wb3MubGF5b3V0LmRyZW4ueCArIGR4LCB0aGlzLnBvcy5sYXlvdXQuZHJlbi55ICsgZHksIHRoaXMucG9zLmxheW91dC5ob3IpO1xyXG4gICAgICAgIHZhciBwcmF5YmFyID0gdGhpcy5yZWFkQmFyKGJ1ZmZlciwgdGhpcy5wb3MubGF5b3V0LnByYXkueCArIGR4LCB0aGlzLnBvcy5sYXlvdXQucHJheS55ICsgZHksIHRoaXMucG9zLmxheW91dC5ob3IpO1xyXG4gICAgICAgIHZhciBzdW1iYXIgPSB0aGlzLnJlYWRCYXIoYnVmZmVyLCB0aGlzLnBvcy5sYXlvdXQuc3VtLnggKyBkeCwgdGhpcy5wb3MubGF5b3V0LnN1bS55ICsgZHksIHRoaXMucG9zLmxheW91dC5ob3IpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGhwOiAoaHB0ZXh0ID8gaHB0ZXh0LmN1ciAvIGhwdGV4dC5tYXggOiBocGJhciksXHJcbiAgICAgICAgICAgIGRyZW46IChkcmVudGV4dCA/IGRyZW50ZXh0LmN1ciAvIGRyZW50ZXh0Lm1heCA6IGRyZW5iYXIpLFxyXG4gICAgICAgICAgICBzdW06IChzdW10ZXh0ID8gc3VtdGV4dC5jdXIgLyBzdW10ZXh0Lm1heCA6IHN1bWJhciksXHJcbiAgICAgICAgICAgIHByYXk6IChwcmF5dGV4dCA/IHByYXl0ZXh0LmN1ciAvIHByYXl0ZXh0Lm1heCA6IHByYXliYXIpLFxyXG4gICAgICAgICAgICBleGFjdGhwOiBocHRleHQsXHJcbiAgICAgICAgICAgIGV4YWN0ZHJlbjogZHJlbnRleHQsXHJcbiAgICAgICAgICAgIGV4YWN0cHJheTogcHJheXRleHQsXHJcbiAgICAgICAgICAgIGV4YWN0c3VtOiBzdW10ZXh0XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIHJlYWRCYXJOdW1iZXIoYnVmZmVyLCB4LCB5LCBob3IpIHtcclxuICAgICAgICBpZiAoaG9yKSB7XHJcbiAgICAgICAgICAgIHZhciBsaW5lID0gT0NSLnJlYWRMaW5lKGJ1ZmZlciwgY2hhdGZvbnQsIFsyNTUsIDI1NSwgMjU1XSwgeCArIDIyLCB5ICsgNSwgdHJ1ZSwgZmFsc2UpO1xyXG4gICAgICAgICAgICB2YXIgbSA9IGxpbmUudGV4dC5tYXRjaCgvXihcXGQrKShcXC8oXFxkKyl8JSkkLyk7XHJcbiAgICAgICAgICAgIGlmIChtKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBjdXI6ICttWzFdLCBtYXg6IChtWzJdID09IFwiJVwiID8gMTAwIDogK21bM10pIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICByZWFkQmFyKGJ1ZmZlciwgeCwgeSwgaG9yKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnBvcykge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnRlcmZhY2Ugbm90IGZvdW5kIHlldFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGhvcikge1xyXG4gICAgICAgICAgICB4ICs9IDI1O1xyXG4gICAgICAgICAgICB5ICs9IDExO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgeCArPSA3O1xyXG4gICAgICAgICAgICB5ICs9IDI2O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgd2lkdGggPSB0aGlzLnBvcy5sYXlvdXQuYmFybGVuZ3RoO1xyXG4gICAgICAgIGZvciAodmFyIGIgPSAwOyBiIDwgd2lkdGg7IGIrKykge1xyXG4gICAgICAgICAgICB2YXIgaSA9IGJ1ZmZlci5waXhlbE9mZnNldCh4ICsgKGhvciA/IGIgOiAwKSwgeSArIChob3IgPyAwIDogYikpO1xyXG4gICAgICAgICAgICBpZiAoYTFsaWIuSW1hZ2VEZXRlY3QuY29sZGlmKGJ1ZmZlci5kYXRhW2ldLCBidWZmZXIuZGF0YVtpICsgMV0sIGJ1ZmZlci5kYXRhW2kgKyAyXSwgMjUsIDMxLCAzNCwgMjU1KSA8IDIwKSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYiAvIHdpZHRoO1xyXG4gICAgfVxyXG59XHJcbkFjdGlvbmJhclJlYWRlci5sYXlvdXRzID0ge1xyXG4gICAgbWFpbmZsYXQ6IHsgaHA6IHsgeDogMCwgeTogMCB9LCBkcmVuOiB7IHg6IDExOCwgeTogMCB9LCBwcmF5OiB7IHg6IDIzNiwgeTogMCB9LCBzdW06IHsgeDogMzU0LCB5OiAwIH0sIHdpZHRoOiA0NjUsIGhlaWdodDogMjUsIGhvcjogdHJ1ZSwgYmFybGVuZ3RoOiA4MCwgdHlwZTogXCJtYWluZmxhdFwiIH0sXHJcbiAgICBtYWluaG9yOiB7IGhwOiB7IHg6IDAsIHk6IDAgfSwgZHJlbjogeyB4OiAxMDAsIHk6IDAgfSwgcHJheTogeyB4OiAxNiwgeTogMjIgfSwgc3VtOiB7IHg6IDExNiwgeTogMjIgfSwgd2lkdGg6IDIxMCwgaGVpZ2h0OiA0NSwgaG9yOiB0cnVlLCBiYXJsZW5ndGg6IDYyLCB0eXBlOiBcIm1haW5ob3JcIiB9LFxyXG4gICAgbWFpbnZlcjogeyBocDogeyB4OiAwLCB5OiAwIH0sIGRyZW46IHsgeDogMCwgeTogMTAwIH0sIHByYXk6IHsgeDogMjIsIHk6IDE2IH0sIHN1bTogeyB4OiAyMiwgeTogMTE2IH0sIHdpZHRoOiAzNSwgaGVpZ2h0OiAyMTAsIGhvcjogZmFsc2UsIGJhcmxlbmd0aDogNjIsIHR5cGU6IFwibWFpbnZlclwiIH0sXHJcbiAgICBtYWludG93ZXI6IHsgaHA6IHsgeDogMCwgeTogMCB9LCBkcmVuOiB7IHg6IDAsIHk6IDExOSB9LCBwcmF5OiB7IHg6IDAsIHk6IDIzOCB9LCBzdW06IHsgeDogMCwgeTogMzU3IH0sIHdpZHRoOiAyMCwgaGVpZ2h0OiA0NjUsIGhvcjogZmFsc2UsIGJhcmxlbmd0aDogODAsIHR5cGU6IFwibWFpbnRvd2VyXCIgfVxyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbar.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/dren.data.png":
/*!*****************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/dren.data.png ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAJJSURBVChTJZDfS1NRAMfPuefe3bO2ufmL6dzMpKY0nducMEYSVCZTCyKmSSyIIvojeuglEqlQevGhRyN68FHoFw3BJc3KrYlam6t0tB/ldre29st7bucSfDmch+/5fL/fA0OhsKmra/HJvCk/Z7cpGQag/0KAQTyE4MWauLBUKZRE5J32Rb9+uXBpMhjDws6q0cgyEDIMlE9E76D3KLKZUeAzQKmf+2dGPNQ9dvFyLK+LrLypQvxbgBqVhHkWyW+Avplp0THo3lRhcXnH7R6Oxr7Zzk6Hk7rHC/7ILn75niUStByTm9AaZhOD7lzTsDi9tLzbb3Nl9mL206NYrfsQ8Ct5bvs7AABajwM6QN5wa0Jj0gIgJJ++3uuzWA72492nzikR3gi+Uym5WAJ43ADzMhjdHFfToDLh3q5lgltx19BQOZU42TfA8qrwp3XKphMdPYA2Rjc8akkCB3+YeOpIKZsOhjZdLjchpMdizRM+tvnxR5J79gpSoeueBkrlFXA9qsI8Lgq5YCjidAxSt33AJhSymURCoeDKNYk5FOEhgSwCzhNVuqK1US3mU3Pzj9KlGqgXR8enCpXi30ppcHgM+c43SASI1bqhsUbxaYFVYr4oZAOra01tpm6TXtPW63A4LHYXfHC709pZIRIQCaQqVphkjqVRv3KSf6vc3OmcnZmhaVeu+pDEGjqaRDWm3QAhkH6KChOek5Q8JITTtvfrDcbnKxu5fBZ1tGrjaZWCAy0aUWZL1CHjMwVYb5+Y9Hrv3p/FiDwcMf8DoSn35z60AhIAAAAASUVORK5CYII=\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvZHJlbi5kYXRhLnBuZz9iNzgyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9hY3Rpb25iYXJpbWdzL2RyZW4uZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUE0QUFBQU9DQUlBQUFDUUtycUdBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBSkpTVVJCVkNoVEpaRGZTMU5SQU1mUHVlZmUzYk8ydWZtTDZkek1wS1kwbmR1Y01FWVNWQ1pUQ3lLbVNTeUlJdm9qZXVnbEVxbFFldkdoUnlONjhGSG9GdzNCSmMzS3JZbGFtNnQwdEIvbGRyZTI5c3Q3YnVjU2ZEbWNoKy81ZkwvZkEwT2hzS21yYS9ISnZDay9aN2NwR1FhZy8wS0FRVHlFNE1XYXVMQlVLWlJFNUozMlJiOSt1WEJwTWhqRHdzNnEwY2d5RURJTWxFOUU3NkQzS0xLWlVlQXpRS21mKzJkR1BOUTlkdkZ5TEsrTHJMeXBRdnhiZ0JxVmhIa1d5VytBdnBscDBUSG8zbFJoY1huSDdSNk94cjdaems2SGs3ckhDLzdJTG43NW5pVVN0QnlUbTlBYVpoT0Q3bHpUc0RpOXRMemJiM05sOW1MMjA2TllyZnNROEN0NWJ2czdBQUJhandNNlFONXdhMEpqMGdJZ0pKKyszdXV6V0E3MjQ5Mm56aWtSM2dpK1V5bTVXQUo0M0FEek1oamRIRmZUb0RMaDNxNWxnbHR4MTlCUU9aVTQyVGZBOHFyd3AzWEtwaE1kUFlBMlJqYzhha2tDQjMrWWVPcElLWnNPaGpaZExqY2hwTWRpelJNK3R2bnhSNUo3OWdwU29ldWVCa3JsRlhBOXFzSThMZ3E1WUNqaWRBeFN0MzNBSmhTeW1VUkNvZURLTllrNUZPRWhnU3dDemhOVnVxSzFVUzNtVTNQemo5S2xHcWdYUjhlbkNwWGkzMHBwY0hnTStjNDNTQVNJMWJxaHNVYnhhWUZWWXI0b1pBT3JhMDF0cG02VFh0UFc2M0E0TEhZWGZIQzcwOXBaSVJJUUNhUXFWcGhranFWUnYzS1NmNnZjM09tY25abWhhVmV1K3BERUdqcWFSRFdtM1FBaGtINktDaE9lazVROEpJVFR0dmZyRGNibkt4dTVmQloxdEdyamFaV0NBeTBhVVdaTDFDSGpNd1ZZYjUrWTlIcnYzcC9GaUR3Y01mOERvU24zNXo2MEFoSUFBQUFBU1VWT1JLNUNZSUk9XCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/dren.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png":
/*!**********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAJlSURBVChTAVoCpf0B0NDRHSAgrKGRI/WQNDIKAQEAAgIAAQEAAQEAAQIHyMz32wdpVF5u4+DgAu3x9MPCw1Rfb90Od8jH+gEBAAD/AAEAAAEAAMnK7tsKcVRebsPCw+3x9APv6+M/Q0nb2tlJTVPX7hDbxLwQEAb29gG+2Pn2HYFMU2LDwsMNDxGek30Dk1/xn7LYODk929zfMENZz+cQvbK9y9X9BCqBP1BnzMO+DQoFm5WGYk3QA4llDgcJ6Kez3SwvOOri3C49R+D5EuP2D1djb9vLwAAAAKGcj2g51T4uDQNxUwwgEAEG9OeiueIpKSvt494mO0T77u7Cwb8ZExChnphWPM9JOgwBAQAC/f0A/P0AJiAGHPzSlZqYAAAA7dDHNzU1FAkEh4eFHPzSHgcOAQEAAQEAA2tODP7+APP1AtHdAvkGGs7Q0jEwMP7+/iUoK/799fbl1fr3BcnNAMbK/wNSPQwMCAHn6QDkCkIoMj/p6uq6wcM1Ly3+/v4sLjTi6+75690KBgLw9vwDLjpS693awdsDQlV6DAgG9/j02NPT0dHMJDE5EggAGR4qtrWsAf79DCpTA2pyhvIGJgQbPyIdF9Tb4LewqzMU8Q//77i+yQ4WHiIdFwMTKh8pNSQtOgEvNjihmpkAAAB2eHgN8cVNNAwNCf79/gDm7QGx0PkFFzeKiIgAAABcXVwDIi0w5fYDFAkD6OXjMxbhKx77BwX/BAMACggAAP4FBhQvFhocqcHP8PHtA7h2WbvV3cW+umdnZubv9AHv4gkH/v3+AefvAuoSUFJUVYSIiQgD/YtFJyQrDVak1lyKAAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvZHJlbnJldGFsLmRhdGEucG5nPzg4YzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFZIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvZHJlbnJldGFsLmRhdGEucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIkBhbHQxL2Jhc2VcIikuSW1hZ2VEZXRlY3QuaW1hZ2VEYXRhRnJvbUJhc2U2NChcImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBNEFBQUFPQ0FJQUFBQ1FLcnFHQUFBQUFXNXZVRVVBWXRkTWxBQUFBQVJ1YjFCRkFBQUFBRUVnamlJQUFBQUpibTlRUlFBQUFBQUFBQUFBQUtHS2N0VUFBQUpsU1VSQlZDaFRBVm9DcGYwQjBORFJIU0FncktHUkkvV1FORElLQVFFQUFnSUFBUUVBQVFFQUFRSUh5TXozMndkcFZGNXU0K0RnQXUzeDlNUEN3MVJmYjkwT2Q4akgrZ0VCQUFEL0FBRUFBQUVBQU1uSzd0c0tjVlJlYnNQQ3crM3g5QVB2NitNL1EwbmIydGxKVFZQWDdoRGJ4THdRRUFiMjlnRysyUG4ySFlGTVUyTER3c01ORHhHZWszMERrMS94bjdMWU9EazkyOXpmTUVOWnorY1F2Yks5eTlYOUJDcUJQMUJuek1PK0RRb0ZtNVdHWWszUUE0bGxEZ2NKNktlejNTd3ZPT3JpM0M0OVIrRDVFdVAyRDFkamI5dkx3QUFBQUtHY2oyZzUxVDR1RFFOeFV3d2dFQUVHOU9laXVlSXBLU3Z0NDk0bU8wVDc3dTdDd2I4WkV4Q2hucGhXUE05Sk9nd0JBUUFDL2YwQS9QMEFKaUFHSFB6U2xacVlBQUFBN2RESE56VTFGQWtFaDRlRkhQelNIZ2NPQVFFQUFRRUFBMnRPRFA3K0FQUDFBdEhkQXZrR0dzN1EwakV3TVA3Ky9pVW9LLzc5OWZibDFmcjNCY25OQU1iSy93TlNQUXdNQ0FIbjZRRGtDa0lvTWovcDZ1cTZ3Y00xTHkzKy92NHNMalRpNis3NTY5MEtCZ0x3OXZ3RExqcFM2OTNhd2RzRFFsVjZEQWdHOS9qMDJOUFQwZEhNSkRFNUVnZ0FHUjRxdHJXc0FmNzlEQ3BUQTJweWh2SUdKZ1FiUHlJZEY5VGI0TGV3cXpNVThRLy83N2kreVE0V0hpSWRGd01US2g4cE5TUXRPZ0V2TmppaG1wa0FBQUIyZUhnTjhjVk5OQXdOQ2Y3OS9nRG03UUd4MFBrRkZ6ZUtpSWdBQUFCY1hWd0RJaTB3NWZZREZBa0Q2T1hqTXhiaEt4NzdCd1gvQkFNQUNnZ0FBUDRGQmhRdkZob2NxY0hQOFBIdEE3aDJXYnZWM2NXK3VtZG5adWJ2OUFIdjRna0gvdjMrQWVmdkF1b1NVRkpVVllTSWlRZ0QvWXRGSnlRckRWYWsxbHlLQUFBQUFFbEZUa1N1UW1DQ1wiKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png":
/*!***********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAFKSURBVChThZE9T8NADIZtX9I2AdokVEwIWoJYEEKMjCAx8A/4BaysLAjEwN9hQYhPMbMyI5aqHRCpQiu1iXq9w+mVqHyJV5Fj+318d8mhPNggBKPHSJ89tV+7xPncjDpcCzarY09pQLW/Cp2BqaFspwq2HyIf8HwrsHlkwkK1t8KJfh9gxTbNl1bSXQrWk54p2eLILg5367E0TfCsLJoZQ0xaGO3UOeul0i2OwB/KrREaJz3nd87I7UvwSmQ2/VfZAbKzviVcdKQ23W8qW+jjUM9OZb/Qq5ZM9y8xx5Eu2im/eI6nR/0vMktywph4pul5Wy4HrtNPNRFfQa5868t2ctoCUat4dx21wDRoB3VO5+tdJcPjJhTREou+R4A3saxXKPykizTmrpFOGrpANhGJMPD5ywXSfSxrHoU6o/lh7hbpqKEsURBEqOEDcNuAKOescgUAAAAASUVORK5CYII=\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvbGlmZXBvaW50cy5kYXRhLnBuZz9hYTgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9hY3Rpb25iYXJpbWdzL2xpZmVwb2ludHMuZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUE0QUFBQU9DQUlBQUFDUUtycUdBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBRktTVVJCVkNoVGhaRTlUOE5BREladFg5STJBZG9rVkV3SVdvSllFRUtNakNBeDhBLzRCYXlzTEFqRXdOOWhRWWhQTWJNeUk1YXFIUkNwUWl1MWlYcTl3K21WcUh5SlY1RmorMzE4ZDhtaFBOZ2dCS1BIU0o4OXRWKzd4UG5jakRwY0N6YXJZMDlwUUxXL0NwMkJxYUZzcHdxMkh5SWY4SHdyc0hsa3drSzF0OEtKZmg5Z3hUYk5sMWJTWFFyV2s1NHAyZUxJTGc1MzY3RTBUZkNzTEpvWlEweGFHTzNVT2V1bDBpMk93Qi9LclJFYUp6M25kODdJN1V2d1NtUTIvVmZaQWJLenZpVmNkS1EyM1c4cVcrampVTTlPWmIvUXE1Wk05eTh4eDVFdTJpbS9lSTZuUi8wdk1rdHl3cGg0cHVsNVd5NEhydE5QTlJGZlFhNTg2OHQyY3RvQ1VhdDRkeDIxd0RSb0IzVk81K3RkSmNQakpoVFJFb3UrUjRBM3NheFhLUHlraXpUbXJwRk9HcnBBTmhHSk1QRDV5d1hTZlN4ckhvVTZvL2xoN2hicHFLRXNVUkJFcU9FRGNOdUFLT2VzY2dVQUFBQUFTVVZPUks1Q1lJST1cIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png":
/*!*****************************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAEzSURBVChTjZI9SwNBEIbfyXnnXZJLIggKRjCFCHb5Hf4IO/+FINjbWmlhZWdhJVyhNtYiRKOIqMUhOcyHkPu+cZc9ziSF5GGK+Xhnd4ZdugsMIii87sLZsW+ZHKVIY9rZ1bbaJVViBl25hgoUaYKTgzjLsHeol7Q8qSDnpeKNIxUsl2Xb22csrtlY14U/WaLze308kBOUG6yyMxRVOr2ZGuAf6OhyXmm+4DzQ/sXfnsaPXGWSyI5zrzhViEYDeGk8YyJZ9Jc6T3JxkVWxwB9JK1AlIdOWDAQVNJsUBlKRhEogHWH6ImoNPHbZvWVts43+MwIbtSr1fA4Yk2ab9PrO7jWbNmutbdna6zCtEk2/pGA4xIeTVeriE0Bba4EJhoGvB8YKWVYuEnz34TpZtY6MkYT4BQQSkh1bM5DyAAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvbGlmZXBvaW50c3BvaXNvbi5kYXRhLnBuZz84ZDA2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9hY3Rpb25iYXJpbWdzL2xpZmVwb2ludHNwb2lzb24uZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUE0QUFBQU9DQUlBQUFDUUtycUdBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBRXpTVVJCVkNoVGpaSTlTd05CRUliZnlYbm5YWkpMSWdnS1JqQ0ZDSGI1SGY0SU8vK0ZJTmpiV21saFpXZGhKVnloTnRZaVJLT0lxTVVoT2N5SGtQdStjWmM5emlTRjVHR0srWGhuZDRaZHVnc01JaWk4N3NMWnNXK1pIS1ZJWTlyWjFiYmFKVlZpQmwyNWhnb1VhWUtUZ3pqTHNIZW9sN1E4cVNEbnBlS05JeFVzbDJYYjIyY3NydGxZMTRVL1dhTHplMzA4a0JPVUc2eXlNeFJWT3IyWkd1QWY2T2h5WG1tKzREelEvc1hmbnNhUFhHV1N5STV6cnpoVmlFWURlR2s4WXlKWjlKYzZUM0p4a1ZXeHdCOUpLMUFsSWRPV0RBUVZOSnNVQmxLUmhFb2dIV0g2SW1vTlBIYlp2V1Z0czQzK013SWJ0U3IxZkE0WWsyYWI5UHJPN2pXYk5tdXRiZG5hNnpDdEVrMi9wR0E0eEllVFZlcmlFMEJiYTRFSmhvR3ZCOFlLV1ZZdUVuejM0VHBadFk2TWtZVDRCUVFTa2gxYk01RHlBQUFBQUVsRlRrU3VRbUNDXCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/prayer.data.png":
/*!*******************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/prayer.data.png ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAHxSURBVChTXZFLaxNhFIa/28x8mYmxjc2NtM1giNhEam2zEnXhykjBjSCCuy78Af4Df4F0VbeCgiu1duFCFNRQFDeWoITaJG3SlF4cp2YymczV06YE8SwOh/d9OO93+PD8vYXd77sKG+NiWKDcdnvTNy4Xb81/fbWy9mZVZNzxLMs2uu4BPc3SwMl8NCRFEMJyIjxbup6IjGJFaq3XAgtLoowxxT4hA46LCqMiol72UkFNq8IpN5PO5OYugEIJAxcYIrIQTCjApnU4NpW4VirFotIIU+JRDjMovX4HXGDoOfUKQoHjm8np9O2F+/EzHCE0EiaWHSgyU6dmttpVfWc/CBAdT+ZDsXD+6tzNO3eHHHQu4iM6xDLnL5qeqWl7+MHDJ9nZGXVchcQhNyzd8KHvaVaj1cDP1w4jAYE74H3/cYMCWne7TofRTCqPFR6RopAFiZB7ghzXYGtH9+utBsW/hc1q1TCN+ERWkYV/6ZP0X713K8ufXr6mZyeKTtdqr29sbf/MForD3QNuX7OePV788eGLY/TpZKpACCOIHmy2mjsbR/Tx7sG+p0uP6p8r8OEIfiwVyxGMMaGYEG27bWMvOZlzhP4f3X+7/KLyvswYB9/zbOJSw3YsmALfCzxUWS3XmjW4t96sfSt/BAV0cG3H+gvHq+CsjxcGZQAAAABJRU5ErkJggg==\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvcHJheWVyLmRhdGEucG5nPzEzY2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFZIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvcHJheWVyLmRhdGEucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIkBhbHQxL2Jhc2VcIikuSW1hZ2VEZXRlY3QuaW1hZ2VEYXRhRnJvbUJhc2U2NChcImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBNEFBQUFPQ0FJQUFBQ1FLcnFHQUFBQUFXNXZVRVVBWXRkTWxBQUFBQVJ1YjFCRkFBQUFBRUVnamlJQUFBQUpibTlRUlFBQUFBQUFBQUFBQUtHS2N0VUFBQUh4U1VSQlZDaFRYWkZMYXhOaEZJYS8yOHg4bVlteGpjMk50TTFnaU5oRWFtMnpFblhoeWtqQmpTQ0N1eTc4QWY0RGY0RjBWYmVDZ2l1MWR1RkNGTlJRRkRlV29JVGFKRzNTbEY0Y3AyWXltY3pWMDZZRThTd09oL2Q5T085MytQRDh2WVhkNzdzS0crTmlXS0RjZG52VE55NFhiODEvZmJXeTltWlZaTnp4TE1zMnV1NEJQYzNTd01sOE5DUkZFTUp5SWp4YnVwNklqR0pGYXEzWEFndExvb3d4eFQ0aEE0NkxDcU1pb2w3MlVrRk5xOElwTjVQTzVPWXVnRUlKQXhjWUlySVFUQ2pBcG5VNE5wVzRWaXJGb3RJSVUrSlJEak1vdlg0SFhHRG9PZlVLUW9Iam04bnA5TzJGKy9FekhDRTBFaWFXSFNneVU2ZG10dHBWZldjL0NCQWRUK1pEc1hEKzZ0ek5PM2VISEhRdTRpTTZ4RExuTDVxZXFXbDcrTUhESjluWkdYVmNoY1FoTnl6ZDhLSHZhVmFqMWNEUDF3NGpBWUU3NEgzL2NZTUNXbmU3VG9mUlRDcVBGUjZSb3BBRmlaQjdnaHpYWUd0SDkrdXRCc1cvaGMxcTFUQ04rRVJXa1lWLzZaUDBYNzEzSzh1ZlhyNm1aeWVLVHRkcXIyOXNiZi9NRm9yRDNRTnVYN09lUFY3ODhlR0xZL1RwWktwQUNDT0lIbXkybWpzYlIvVHg3c0crcDB1UDZwOHI4T0VJZml3Vnl4R01NYUdZRUcyN2JXTXZPWmx6aFA0ZjNYKzcvS0x5dnN3WUI5L3piT0pTdzNZc21BTGZDenhVV1MzWG1qVzR0OTZzZlN0L0JBVjBjRzNIK2d2SHErQ3NqeGNHWlFBQUFBQkpSVTVFcmtKZ2dnPT1cIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/prayer.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png":
/*!*********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAHYSURBVChTXc9NaxNBGAfwnZnNzuxmd5OUbJNN0uiKCrah2EtVPLTQi+DNozc/ime/hHjTgwcPRQrtxR5EUVAEEdTQhrhtYvc1a/ctOz6aUkKfw7D8/z/mmUWPtnYy/tEyr9bKusQqYeSjHrK21vu778SviDEtjX03Cvr2d9KzVsBV1K6uGQTJkRIs3uoaqj5l2B14FdSkTBcEWaYENxrL4FSlSdDCJD0Vl2jbbJW0vN1sSZdk9zSGHFowWJcWETUEQXEmnlc/Wt1YM2q0KpaNBbq6cTNq2JBDCwYjXC0yNAp/uUb/zoO7IARBqKoYTviGBHJowZC16w8jeqLcSG/fX593TEJxysuyWLdaR5MD9yREj5/smb3OkmnOu/PxJgWcYycZ2DZ6/tnXOYb/gPddcLMB7eVRFopk+fIml4lGq7ALNsLeM/J/ZreGPj8cDskV6Z79w/bDca3VvqBnbuQkb3f2v+3+xIyqxFcO3xxvP3s5dpNzcfZKN4EcWjA4yQOOU0o090v86umLkRPP3fcvgRxaMORaZxNjxIVpqcSCYyfMvHqnm5WSwCv2t/fsDyNJVKDNpwnpNFYQwpgQgRdFwX3/t24ZOqsdDAefXr/HCRWxmBfpn9j9C/Fr4hM9D4PKAAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvcHJheWVyb24uZGF0YS5wbmc/ZDI5OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQVkiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvYWN0aW9uYmFyaW1ncy9wcmF5ZXJvbi5kYXRhLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCJAYWx0MS9iYXNlXCIpLkltYWdlRGV0ZWN0LmltYWdlRGF0YUZyb21CYXNlNjQoXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQTRBQUFBT0NBSUFBQUNRS3JxR0FBQUFBVzV2VUVVQVl0ZE1sQUFBQUFSdWIxQkZBQUFBQUVFZ2ppSUFBQUFKYm05UVJRQUFBQUFBQUFBQUFLR0tjdFVBQUFIWVNVUkJWQ2hUWGM5TmF4TkJHQWZ3blpuTnp1eG1kNU9VYkpOTjB1aUtDcmFoMkV0VlBMVFFpK0ROb3pjL2ltZS9oSGpUZ3djUFJRcnR4UjVFVVZBRUVkVFFocmh0WXZjMWEvY3RPejZhVWtLZnc3RDgvei9tbVVXUHRuWXkvdEV5cjliS3VzUXFZZVNqSHJLMjF2dTc3OFN2aURFdGpYMDNDdnIyZDlLelZzQlYxSzZ1R1FUSmtSSXMzdW9hcWo1bDJCMTRGZFNrVEJjRVdhWUVOeHJMNEZTbFNkRENKRDBWbDJqYmJKVzB2TjFzU1pkazl6U0dIRm93V0pjV0VUVUVRWEVtbmxjL1d0MVlNMnEwS3BhTkJicTZjVE5xMkpCREN3WWpYQzB5TkFwL3VVYi96b083SUFSQnFLb1lUdmlHQkhKb3daQzE2dzhqZXFMY1NHL2ZYNTkzVEVKeHlzdXlXTGRhUjVNRDl5UkVqNS9zbWIzT2ttbk91L1B4SmdXY1l5Y1oyRFo2L3RuWE9ZYi9nUGRkY0xNQjdlVlJGb3BrK2ZJbWw0bEdxN0FMTnNMZU0vSi9acmVHUGo4Y0Rza1Y2Wjc5dy9iRGNhM1Z2cUJuYnVRa2IzZjJ2KzMreEl5cXhGY08zeHh2UDNzNWRwTnpjZlpLTjRFY1dqQTR5UU9PVTBvMDkwdjg2dW1Ma1JQUDNmY3ZnUnhhTU9SYVp4Tmp4SVZwcWNTQ1l5Zk12SHFubTVXU3dDdjJ0L2ZzRHlOSlZLRE5wd25wTkZZUXdwZ1FnUmRGd1gzL3QyNFpPcXNkREFlZlhyL0hDUld4bUJmcG45ajlDL0ZyNGhNOUQ0UEtBQUFBQUVsRlRrU3VRbUNDXCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png":
/*!**********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAJfSURBVChTDZHda9NgFMaTN23TdUm7ds3SpG36tdaum7IxmQNl4gc4v7Z5OdCJt4J388YL8U/YbkQQREGGV0OFgUNwDJUJbk7xe3UptaySreva9CtN3uT1vTs85/dwznMOmTl+2mg1zkxOf1pb4YToifFx1QQeN+OnbY/uzxt624mshq5rmkYJsV4LGgflPaeLAQDZnEwx+7NUVhmpd3R4bH31lWZCRJA2QFLdQsjt8zf2d8OJjBRPRo4MLs3fW11cqO0Wfan00LlJPhQ121qzWiZHxicxd3X2Lp7bKCn7B6qUTMoba3wk3unnCYJo1dUOxp1OpyhRDE7N3I73Sh/evFZyslYpO2m7QTlbWttB2+0OujsUpTtZjhVs2Kfs5ZbuzDVbrWCqP31sTIwnsFhV6zhcTBrAdVC0B4CDCkZiRfk36WKbpd3RqemJS5eR3c6ybCiQ9Hp6MFSrWW6WqiMTYMgbjmNrlxQTeC4nKxvv3iYkvpuxNFjW1HZV2Vl8sTx7/Ro1MXOzXms065WglBwYGvzy+ePeTmE7K2dl2c8EvF7m5bPHywsPTYSokfNXPCz7r5Dri4Y2N78qBdnUTdOCv9bfP38yR9Adq0uLDpcLAECdvXGrh/PtK6VKo21alofjXXzY2+UpFQvqQXX7x3eCJJGFTAhBxMcghBJDw3hdKRYXDvVzAh+OSIdPXUCWRdlsJAC4ZUId5L5trjx9kEklIn0ZnosFRBEfnOx0D/YdpSkAdfxX3dI1aJhUuVrLbm2dvDghCIIBoN8tFpUCw7JdPd5K/k8+/5cgSAgNCxr/AZQMC0FN97E9AAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3Mvc3VtcG9pbnRzLmRhdGEucG5nPzk5NzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFZIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3Mvc3VtcG9pbnRzLmRhdGEucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIkBhbHQxL2Jhc2VcIikuSW1hZ2VEZXRlY3QuaW1hZ2VEYXRhRnJvbUJhc2U2NChcImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBNEFBQUFPQ0FJQUFBQ1FLcnFHQUFBQUFXNXZVRVVBWXRkTWxBQUFBQVJ1YjFCRkFBQUFBRUVnamlJQUFBQUpibTlRUlFBQUFBQUFBQUFBQUtHS2N0VUFBQUpmU1VSQlZDaFREWkhkYTlOZ0ZNYVROMjNUZFVtN2RzM1NwRzM2dGRhdW03SXhtUU5sNGdjNHY3WjVPZENKdDRKMzg4WUw4VS9ZYmtRUVJFR0dWME9GZ1VOd0RKVUpiazd4ZTNVcHRheVNyZXZhOUN0TjN1VDF2VHM4NS9kd3puTU9tVGwrMm1nMXpreE9mMXBiNFlUb2lmRngxUVFlTitPbmJZL3V6eHQ2MjRtc2hxNXJta1lKc1Y0TEdnZmxQYWVMQVFEWm5Fd3grN05VVmhtcGQzUjRiSDMxbFdaQ1JKQTJRRkxkUXNqdDh6ZjJkOE9KakJSUFJvNE1MczNmVzExY3FPMFdmYW4wMExsSlBoUTEyMXF6V2laSHhpY3hkM1gyTHA3YktDbjdCNnFVVE1vYmEzd2szdW5uQ1lKbzFkVU94cDFPcHloUkRFN04zSTczU2gvZXZGWnlzbFlwTzJtN1FUbGJXdHRCMiswT3Vqc1VwVHRaamhWczJLZnM1WmJ1ekRWYnJXQ3FQMzFzVEl3bnNGaFY2emhjVEJyQWRWQzBCNENEQ2taaVJmazM2V0ticGQzUnFlbUpTNWVSM2M2eWJDaVE5SHA2TUZTcldXNldxaU1UWU1nYmptTnJseFFUZUM0bkt4dnYzaVlrdnB1eE5GalcxSFpWMlZsOHNUeDcvUm8xTVhPelhtczA2NVdnbEJ3WUd2enkrZVBlVG1FN0syZGwyYzhFdkY3bTViUEh5d3NQVFlTb2tmTlhQQ3o3cjVEcmk0WTJONzhxQmRuVVRkT0N2OWJmUDM4eVI5QWRxMHVMRHBjTEFFQ2R2WEdyaC9QdEs2VktvMjFhbG9malhYelkyK1VwRlF2cVFYWDd4M2VDSkpHRlRBaEJ4TWNnaEJKRHczaGRLUllYRHZWekFoK09TSWRQWFVDV1JkbHNKQUM0WlVJZDVMNXRyang5a0VrbEluMFpub3NGUkJFZm5PeDBEL1lkcFNrQWRmeFgzZEkxYUpoVXVWckxibTJkdkRnaENJSUJvTjh0RnBVQ3c3SmRQZDVLL2s4Ky81Y2dTQWdOQ3hyL0FaUU1DMEZOOTdFOUFBQUFBRWxGVGtTdVFtQ0NcIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png":
/*!********************************************************************!*\
  !*** ../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAIIAAAAICAMAAAAC9tdxAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAMUExURQAAAA8UFrN6LwAAAMHCSL8AAAAEdFJOU////wBAKqn0AAAACW5vUEUAAAAAAAAAAAChinLVAAAA90lEQVQ4T4WS2xLDIBBCXf3/fy4se9POtD7EExSCSdY5x2ybGeDY3sCHMISQIErL1aERbsKV5p1kRa3tzQpwrAi0tRTYpG2euDhc47JWoXjIt1ex3Jrk49Gw12N4R7NhVuAgbMM6yD35kCCluFaOIMXSG4SpqDV3axvNkCIQkCQfiGeICkV0xPugdlXw2HHBVISR2lsBKRndr5Xr1PjSpRW1A3NqbPinwijzVGBeRFMlMQ/nuzXsErV3aijzuwIgtaeCNwiiSvKz+z/TGvfHapUeGgDBvHVHXijHLU1BXqGOOai/rFv1IVobxKBX4yMiDGaNgots7w/2HAa69Wye5gAAAABJRU5ErkJggg==\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2ltZ3MvYWN0aW9uYmFybnVtYmVycy5kYXRhLnBuZz84NWRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9pbWdzL2FjdGlvbmJhcm51bWJlcnMuZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUlJQUFBQUlDQU1BQUFBQzl0ZHhBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBTVVFeFVSUUFBQUE4VUZyTjZMd0FBQU1IQ1NMOEFBQUFFZEZKT1UvLy8vd0JBS3FuMEFBQUFDVzV2VUVVQUFBQUFBQUFBQUFDaGluTFZBQUFBOTBsRVFWUTRUNFdTMnhMRElCQkNYZjMvZnk0c2U5UE90RDdFRXhTQ1NkWTV4MnliR2VEWTNzQ0hNSVNRSUVyTDFhRVJic0tWNXAxa1JhM3R6UXB3ckFpMHRSVFlwRzJldURoYzQ3SldvWGpJdDFleDNKcms0OUd3MTJONFI3TmhWdUFnYk1NNnlEMzVrQ0NsdUZhT0lNWFNHNFNwcURWM2F4dk5rQ0lRa0NRZmlHZUlDa1YweFB1Z2RsWHcySEhCVklTUjJsc0JLUm5kcjVYcjFQalNwUlcxQTNOcWJQaW53aWp6VkdCZVJGTWxNUS9udXpYc0VyVjNhaWp6dXdJZ3RhZUNOd2lpU3ZLeit6L1RHdmZIYXBVZUdnREJ2SFZIWGlqSExVMUJYcUdPT2FpL3JGdjFJVm9ieEtCWDR5TWlER2FOZ290czd3LzJIQWE2OVd5ZTVnQUFBQUJKUlU1RXJrSmdnZz09XCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/imgs/settingscog.data.png":
/*!***************************************************************!*\
  !*** ../node_modules/@alt1/ability/imgs/settingscog.data.png ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAAcAAAAKCAYAAAB4zEQNAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAADHSURBVChTY7y2O+y/NAcjw7ajbxgMNYUZpIQZGUDgyct3DIxPNzj/Z+JhBQuAwJev/8A0DzcTA9OhCx8Z/n/9zfD+3WeGs1feMaj47WQE4XNANuPJ+Y7/JQW+M1x68I/Bu+AkxEwoYAJJ/PnCgCEBAkzf3nyCMjEB041nDAy/fnxiOD3D7D9UDA6YXr58DmbwsXxFUXBmpvl/xkuTlP9DLPsGxFxgFgywnL/7joGV5T/DjUcMDKoy3xnE+FkZBHkZGG4++c0AAHRPSyvaocp9AAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2ltZ3Mvc2V0dGluZ3Njb2cuZGF0YS5wbmc/MGNhYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQVkiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvaW1ncy9zZXR0aW5nc2NvZy5kYXRhLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCJAYWx0MS9iYXNlXCIpLkltYWdlRGV0ZWN0LmltYWdlRGF0YUZyb21CYXNlNjQoXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQWNBQUFBS0NBWUFBQUI0ekVRTkFBQUFBVzV2VUVVQVl0ZE1sQUFBQUFSdWIxQkZBQUFBQUVFZ2ppSUFBQUFKYm05UVJRQUFBQUFBQUFBQUFLR0tjdFVBQUFESFNVUkJWQ2hUWTd5Mk8reS9OQWNqdzdhamJ4Z01OWVVacElRWkdVRGd5Y3QzREl4UE56ai9aK0poQlF1QXdKZXYvOEEwRHpjVEE5T2hDeDhaL24vOXpmRCszV2VHczFmZU1hajQ3V1FFNFhOQU51UEorWTcvSlFXK00xeDY4SS9CdStBa3hFd29ZQUpKL1BuQ2dDRUJBa3pmM255Q01qRUIwNDFuREF5L2ZueGlPRDNEN0Q5VURBNllYcjU4RG1id3NYeEZVWEJtcHZsL3hrdVRsUDlETFBzR3hGeGdGZ3l3bkwvN2pvR1Y1VC9EalVjTURLb3kzeG5FK0ZrWkJIa1pHRzQrK2MwQUFIUlBTeXZhb2NwOUFBQUFBRWxGVGtTdVFtQ0NcIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/imgs/settingscog.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/imgs/smallbarnumber.data.png":
/*!******************************************************************!*\
  !*** ../node_modules/@alt1/ability/imgs/smallbarnumber.data.png ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAMAAAAVv241AAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAASUExURQ8UFqBnC8qCDkc1FAAAAAAAAGC4B/sAAAAGdFJOU///////ALO/pL8AAAAJbm9QRQAAAAAAAAAAAKGKctUAAAA+SURBVBhXlY4xEgAgCMNoOf7/ZalwiqNZSBmgJsANyl3DeT1TeRTTw+htifHsP8I8ALYletqq8NR5iyoJYgHlIAI/8NoYcAAAAABJRU5ErkJggg==\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2ltZ3Mvc21hbGxiYXJudW1iZXIuZGF0YS5wbmc/M2Y2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQVkiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvaW1ncy9zbWFsbGJhcm51bWJlci5kYXRhLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCJAYWx0MS9iYXNlXCIpLkltYWdlRGV0ZWN0LmltYWdlRGF0YUZyb21CYXNlNjQoXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQXdBQUFBUUNBTUFBQUFWdjI0MUFBQUFBVzV2VUVVQVl0ZE1sQUFBQUFSdWIxQkZBQUFBQUVFZ2ppSUFBQUFTVUV4VVJROFVGcUJuQzhxQ0RrYzFGQUFBQUFBQUFHQzRCL3NBQUFBR2RGSk9VLy8vLy8vL0FMTy9wTDhBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBQStTVVJCVkJoWGxZNHhFZ0FnQ01Ob09mNy9aYWx3aXFOWlNCbWdKc0FOeWwzRGVUMVRlUlRUdytodGlmSHNQOEk4QUxZbGV0cXE4TlI1aXlvSllnSGxJQUkvOE5vWWNBQUFBQUJKUlU1RXJrSmdnZz09XCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/imgs/smallbarnumber.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/index.ts":
/*!**********************************************!*\
  !*** ../node_modules/@alt1/ability/index.ts ***!
  \**********************************************/
/*! exports provided: ActionbarReader, default, AbilityState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AbilityReader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbilityState\", function() { return AbilityState; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @alt1/ocr */ \"../node_modules/@alt1/ocr/index.ts\");\n/* harmony import */ var _actionbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actionbar */ \"../node_modules/@alt1/ability/actionbar.ts\");\n/* harmony import */ var _alt1_base_imagedetect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @alt1/base/imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActionbarReader\", function() { return _actionbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n;\r\nvar cdfont = __webpack_require__(/*! @alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json */ \"../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json\");\r\nvar hotkeyfont = __webpack_require__(/*! @alt1/ocr/fonts/aa_8px_new.fontmeta.json */ \"../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json\");\r\nvar imgs = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].webpackImages({\r\n    settingscog: __webpack_require__(/*! ./imgs/settingscog.data.png */ \"../node_modules/@alt1/ability/imgs/settingscog.data.png\"),\r\n    smallbarnumber: __webpack_require__(/*! ./imgs/smallbarnumber.data.png */ \"../node_modules/@alt1/ability/imgs/smallbarnumber.data.png\"),\r\n    actionbarnumbers: __webpack_require__(/*! ./imgs/actionbarnumbers.data.png */ \"../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png\")\r\n});\r\nvar barnumimgs = null;\r\nvar barnummap = {};\r\nimgs.promise.then(() => {\r\n    barnumimgs = _alt1_base_imagedetect__WEBPACK_IMPORTED_MODULE_3__[\"ImageDataSet\"].fromFilmStrip(imgs.actionbarnumbers, 10);\r\n    for (let a = 0; a < 13; a++) {\r\n        barnummap[a] = (a + 1) + \"\";\r\n    }\r\n});\r\nclass AbilityReader {\r\n    constructor(abilityimgs) {\r\n        this.bars = [];\r\n        this.mainbar = null;\r\n        this.barstates = {};\r\n        this.captureRect = null;\r\n        this.actionbarReader = new _actionbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.abilityimgs = null;\r\n        this.lifestate = null;\r\n        //event when ocluded bar is visible again, before any further reading happens\r\n        this.hooks = {\r\n            onbarshown: null\r\n        };\r\n        this.abilityimgs = abilityimgs;\r\n    }\r\n    find(img) {\r\n        if (!img) {\r\n            img = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"captureHoldFullRs\"]();\r\n        }\r\n        this.bars = [];\r\n        var locs = img.findSubimage(imgs.smallbarnumber);\r\n        var cog = imgs.settingscog;\r\n        for (var loc of locs) {\r\n            for (var key in AbilityBar.types) {\r\n                var t = AbilityBar.types[key];\r\n                if (!t.cog) {\r\n                    continue;\r\n                }\r\n                var rect = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](loc.x - t.detect.x + t.cog.x, loc.y - t.detect.y + t.cog.y, cog.width, cog.height);\r\n                if (_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"].fromArgs(img).contains(rect)) {\r\n                    var buf = img.read(loc.x - t.detect.x + t.cog.x, loc.y - t.detect.y + t.cog.y, cog.width, cog.height);\r\n                    if (buf.pixelCompare(cog) < 10) {\r\n                        var bar = new AbilityBar(this, loc.x - t.detect.x, loc.y - t.detect.y, t, this.barstates);\r\n                        bar.overlay();\r\n                        this.bars.push(bar);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.actionbarReader.find(img);\r\n        if (this.actionbarReader.pos) {\r\n            var mainpos = this.actionbarReader.pos;\r\n            var t = AbilityBar.types[mainpos.layout.type];\r\n            var bar = new AbilityBar(this, mainpos.x - t.action.x, mainpos.y - t.action.y, AbilityBar.types[mainpos.layout.type], this.barstates);\r\n            bar.overlay();\r\n            this.bars.unshift(bar);\r\n            this.mainbar = bar;\r\n        }\r\n        if (this.bars.length == 0) {\r\n            return null;\r\n        }\r\n        this.captureRect = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"].fromArgs(this.bars[0].bounds);\r\n        for (var i = 1; i < this.bars.length; i++) {\r\n            this.captureRect.union(this.bars[i].bounds);\r\n        }\r\n        return this.bars.length;\r\n    }\r\n    getCaptAreas() {\r\n        var r = {};\r\n        for (var b in this.bars) {\r\n            r[\"bar\" + b] = this.bars[b].bounds;\r\n        }\r\n        return r;\r\n    }\r\n    /**\r\n     * @deprecated kinda needs rewrite to be efficient, use readallslotsinner manually instead\r\n     * @param img\r\n     */\r\n    readAllSlots(img) {\r\n        var data;\r\n        if (!this.captureRect) {\r\n            throw new Error(\"no capturerect set \");\r\n        }\r\n        if (img instanceof _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImgRef\"]) {\r\n            data = img.toData(this.captureRect.x, this.captureRect.y, this.captureRect.width, this.captureRect.height);\r\n        }\r\n        else {\r\n            data = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"capture\"](this.captureRect.x, this.captureRect.y, this.captureRect.width, this.captureRect.height);\r\n        }\r\n        var capts = {};\r\n        var captareas = {};\r\n        for (var a in this.bars) {\r\n            capts[\"bar\" + a] = data;\r\n            captareas[\"bar\" + a] = this.captureRect;\r\n        }\r\n        return this.readAllSlotsInner(capts, captareas);\r\n    }\r\n    readAllSlotsInner(capts, captareas) {\r\n        var visiblebars = [];\r\n        for (var b in this.bars) {\r\n            var bar = this.bars[b];\r\n            var capt = capts[\"bar\" + b];\r\n            var captarea = captareas[\"bar\" + b];\r\n            var nr = bar.readBarNr(capt, captarea.x, captarea.y);\r\n            if (!nr) {\r\n                continue;\r\n            }\r\n            var state = this.barstates[nr];\r\n            visiblebars.push(state);\r\n            if (!state.visible && this.hooks.onbarshown) {\r\n                this.hooks.onbarshown(state);\r\n            }\r\n            for (var a = 0; a < bar.slots.length; a++) {\r\n                state.slots[a].readAbility(capt, bar.slots[a].x - captarea.x, bar.slots[a].y - captarea.y);\r\n            }\r\n        }\r\n        for (var id in this.barstates) {\r\n            var barstate = this.barstates[id];\r\n            barstate.visible = visiblebars.indexOf(this.barstates[id]) != -1;\r\n        }\r\n    }\r\n    finishTick() {\r\n        for (var b in this.barstates) {\r\n            var bar = this.barstates[b];\r\n            for (var slot of bar.slots) {\r\n                slot.lastcooldown = slot.cooldown;\r\n                slot.lasttickcooldown = slot.tickcooldown;\r\n            }\r\n        }\r\n    }\r\n    readLife(buffer, bufx, bufy) {\r\n        if (this.actionbarReader.pos == null) {\r\n            return null;\r\n        }\r\n        this.lifestate = this.actionbarReader.read(buffer, bufx, bufy);\r\n        return this.lifestate;\r\n    }\r\n    overlayState() {\r\n        alt1.overLaySetGroup(\"abildebug\");\r\n        alt1.overLayFreezeGroup(\"abildebug\");\r\n        alt1.overLayClearGroup(\"abildebug\");\r\n        for (var bar of this.bars) {\r\n            var state = this.barstates[bar.barid];\r\n            if (state) {\r\n                for (var a = 0; a < bar.slots.length; a++) {\r\n                    state.slots[a].overlayState(bar.slots[a].x, bar.slots[a].y);\r\n                }\r\n            }\r\n        }\r\n        alt1.overLayRefreshGroup(\"abildebug\");\r\n    }\r\n    *visibleAbilities() {\r\n        for (var bar of this.bars) {\r\n            if (bar.barid) {\r\n                yield* this.barstates[bar.barid].slots;\r\n            }\r\n        }\r\n    }\r\n    *allAbilities() {\r\n        for (var barid in this.barstates) {\r\n            var bar = this.barstates[barid];\r\n            yield* bar.slots;\r\n        }\r\n    }\r\n    *mainbarAbilities() {\r\n        if (this.mainbar) {\r\n            var bar = this.barstates[this.mainbar.barid];\r\n            if (bar) {\r\n                yield* bar.slots;\r\n            }\r\n        }\r\n    }\r\n    *allslots() {\r\n        for (var bar of this.bars) {\r\n            yield* bar.slots;\r\n        }\r\n    }\r\n}\r\nAbilityReader.imgs = {\r\n    smallbarnumber: null,\r\n    settingscog: null\r\n};\r\n;\r\nclass AbilityBarSlot {\r\n    constructor(x, y, index, bar) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.index = index;\r\n        this.bar = bar;\r\n    }\r\n    getState() {\r\n        return this.bar.barstates[this.bar.barid].slots[this.index];\r\n    }\r\n}\r\nclass AbilityBar {\r\n    constructor(reader, x, y, layout, barstates) {\r\n        this.barid = \"\"; //TODO find out when and where this is assigned, currently no proper initialization\r\n        this.slots = [];\r\n        this.reader = reader;\r\n        this.layout = layout;\r\n        this.barstates = barstates;\r\n        this.x = x;\r\n        this.y = y;\r\n        var bounds = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](this.x + layout.num.x, this.y + layout.num.y, 10, 15);\r\n        var cx = x;\r\n        var cy = y;\r\n        for (var a = 0; a < layout.length; a++) {\r\n            this.slots.push(new AbilityBarSlot(cx, cy, a, this));\r\n            bounds.union(new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](cx, cy, AbilityState.iconwidth, AbilityState.iconheight));\r\n            cx += layout.step.x;\r\n            cy += layout.step.y;\r\n            if ((a + 1) % layout.rowlen == 0) {\r\n                cx += layout.rowstep.x - layout.rowlen * layout.step.x;\r\n                cy += layout.rowstep.y - layout.rowlen * layout.step.y;\r\n            }\r\n        }\r\n        if (layout.action) {\r\n            var mainlayout = _actionbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"].layouts[layout.id];\r\n            var mainrect = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](x + layout.action.x, y + layout.action.y, mainlayout.width, mainlayout.height);\r\n            mainrect.inflate(10, 10);\r\n            bounds.union(mainrect);\r\n        }\r\n        this.bounds = bounds;\r\n    }\r\n    readBarNr(buffer, bufx, bufy) {\r\n        let match = barnumimgs.matchBest(buffer, this.x + this.layout.num.x - bufx, this.y + this.layout.num.y - bufy);\r\n        //1st secondary ability bar has one pixel offset!!@#!@#\r\n        match = match || barnumimgs.matchBest(buffer, this.x + this.layout.num.x - bufx, this.y + this.layout.num.y - bufy - 1);\r\n        if (!match) {\r\n            return \"\";\r\n        }\r\n        this.barid = barnummap[match.index];\r\n        if (!this.barstates[this.barid]) {\r\n            this.barstates[this.barid] = { barid: this.barid, slots: [], visible: false };\r\n            for (var b = 0; b < this.layout.length; b++) {\r\n                this.barstates[this.barid].slots[b] = new AbilityState(this.reader);\r\n            }\r\n        }\r\n        return this.barid;\r\n    }\r\n    overlay() {\r\n        if (_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"hasAlt1\"]) {\r\n            alt1.overLayRect(_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 255, 255), this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 3000, 2);\r\n        }\r\n    }\r\n}\r\nAbilityBar.types = {\r\n    flat: { id: \"flat\", sec: true, step: { x: 36, y: 0 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, cog: { x: 504, y: 17 }, detect: { x: 501, y: -2 }, num: { x: 503, y: 2 } },\r\n    hor: { id: \"hor\", sec: true, step: { x: 35, y: 0 }, rowstep: { x: 0, y: 35 }, rowlen: 7, length: 14, cog: { x: 245, y: 54 }, detect: { x: 242, y: -1 }, num: { x: 244, y: 3 } },\r\n    ver: { id: \"ver\", sec: true, step: { x: 0, y: 35 }, rowstep: { x: 35, y: 0 }, rowlen: 7, length: 14, cog: { x: 56, y: 245 }, detect: { x: -3, y: 242 }, num: { x: -1, y: 246 } },\r\n    tower: { id: \"tower\", sec: true, step: { x: 0, y: 36 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, cog: { x: 20, y: 504 }, detect: { x: -3, y: 501 }, num: { x: -1, y: 505 } },\r\n    mainflat: { id: \"mainflat\", sec: false, step: { x: 36, y: 0 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, detect: { x: 12, y: -29 }, action: { x: 54, y: -31 }, num: { x: 14, y: -25 } },\r\n    mainhor: { id: \"mainhor\", sec: false, step: { x: 36, y: 0 }, rowstep: { x: 0, y: 36 }, rowlen: 7, length: 14, detect: { x: 10, y: -45 }, action: { x: 43, y: -47 }, num: { x: 12, y: -41 } },\r\n    mainver: { id: \"mainver\", sec: false, step: { x: 0, y: 35 }, rowstep: { x: 35, y: 0 }, rowlen: 7, length: 14, detect: { x: 84, y: 232 }, action: { x: 75, y: 10 }, num: { x: 86, y: 236 } },\r\n    maintower: { id: \"maintower\", sec: false, step: { x: 0, y: 36 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, detect: { x: 40, y: 15 }, action: { x: 43, y: 45 }, num: { x: 42, y: 19 } },\r\n};\r\nclass AbilityState {\r\n    constructor(reader) {\r\n        //internal\r\n        this.nextdetecttry = 0; //timestamp of next ability read attempt\r\n        //stateful\r\n        this.lastcooldown = -1; //cooldown at last confirmed tick\r\n        this.lasttickcooldown = -1; //number of ticks cooldown on last comfirmed read\r\n        this.tickcooldown = 0; //number of ticks left on cooldown\r\n        this.cdchange = 0; //cd change since last tick\r\n        this.gcd = true; //current cooldown is coused by global cooldown and is 1.8sec\r\n        this.donetime = 0; //timestamp of when cd will be done\r\n        this.hadcd = false; //has been on cooldown in the last minute\r\n        //only function of pixel\r\n        this.cooldown = 0; //current visible cooldown (whole sec)\r\n        this.available = false; //false if the ability can't be used even when off cd (wrong weapon)\r\n        this.cdfraction = -1; //fraction of cooldown completed as read by darker pixel clock\r\n        this.ability = null; //the detected ability \r\n        this.hotkey = \"\"; //hotkey text of ability\r\n        this.reader = null;\r\n        this.debug = null;\r\n        this.reader = reader;\r\n    }\r\n    readAbility(data, x, y) {\r\n        var res = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](data, cdfont, [206, 213, 135], x + 31, y + 8, false, true);\r\n        var t = 0;\r\n        if (res.text == \"\") {\r\n            //don't trust a failed read as \"0\", only read it as 0 if we have a pixel match on the icon in the cd area\r\n            var allow = this.cooldown <= 1 || this.ability && this.confirmCdArea(data, x, y);\r\n            t = (allow ? 0 : Math.ceil((this.lasttickcooldown - 1) * 0.6));\r\n        }\r\n        else if (res.text.endsWith(\"m\")) {\r\n            t = 60 * +res.text.slice(0, -1);\r\n        }\r\n        else {\r\n            t = +res.text;\r\n        }\r\n        var now = Date.now();\r\n        this.cdchange = (this.lastcooldown != -1 ? t - this.lastcooldown : 0);\r\n        this.cooldown = t;\r\n        if (this.cdchange >= 1) {\r\n            this.gcd = this.cooldown <= 2;\r\n        }\r\n        if (this.cooldown != Math.ceil((this.lasttickcooldown - 1) * 0.6)) {\r\n            var tickcd = Math.floor(this.cooldown / 0.6);\r\n            //detect 2nd tick in same second\r\n            if (this.cooldown != 0 && this.cdchange == 0 && Math.ceil(tickcd * 0.6) == Math.ceil((tickcd - 1) * 0.6)) {\r\n                tickcd--;\r\n            }\r\n            this.tickcooldown = tickcd;\r\n        }\r\n        else {\r\n            this.tickcooldown--;\r\n        }\r\n        if (this.cooldown != 0) {\r\n            this.donetime = now + this.cooldown * 1000;\r\n        }\r\n        this.hadcd = this.donetime - now > -60 * 1000;\r\n        this.cdfraction = -1;\r\n        this.debug = null;\r\n        if (!this.ability && this.nextdetecttry < now) {\r\n            this.ability = this.getAbility(data, x, y);\r\n            this.nextdetecttry = now + 1000 * 20 * (1 + Math.random()); //5-10 sec delay to spread load\r\n        }\r\n        if (this.ability) {\r\n            this.readClock(data, x, y);\r\n            if (!this.hotkey && this.available) {\r\n                this.readhotkey(data, x, y);\r\n            }\r\n        }\r\n        //if (this.ability && this.ability.id == \"immortality\") { console.log(this.tickcooldown, this.cooldown, this.cdchange); }\r\n    }\r\n    confirmCdArea(buffer, x, y) {\r\n        var icon = this.ability.icon;\r\n        for (var dy = 1; dy < 10; dy++) {\r\n            for (var dx = 24; dx < 30; dx++) {\r\n                var i1 = (x + dx) * 4 + (y + dy) * 4 * buffer.width;\r\n                var i2 = dx * 4 + dy * 4 * icon.width;\r\n                //calculate portion of icon color vs pure white per channel\r\n                var gradr = (255 - buffer.data[i1]) / (255 - icon.data[i2]);\r\n                var gradg = (255 - buffer.data[i1 + 1]) / (255 - icon.data[i2 + 1]);\r\n                var gradb = (255 - buffer.data[i1 + 2]) / (255 - icon.data[i2 + 2]);\r\n                //if it's a pure mix of white and the icon, all channels will have the same portion of white\r\n                var d = Math.max(gradr, gradg, gradb) - Math.min(gradr, gradg, gradb);\r\n                if (d > 0.25) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    readClock(buf, abilx, abily) {\r\n        var alpha = 0.20;\r\n        var size = 30;\r\n        var template = this.ability.icon;\r\n        var dirs = [\r\n            { n: size / 2, ox: size / 2, oy: 0, sx: 1, sy: 0 },\r\n            { n: size, ox: size - 1, oy: 1, sx: 0, sy: 1 },\r\n            { n: size, ox: size - 1, oy: size - 1, sx: -1, sy: 0 },\r\n            { n: size, ox: 0, oy: size - 1, sx: 0, sy: -1 },\r\n            { n: size / 2, ox: 0, oy: 0, sx: 1, sy: 0 }\r\n        ];\r\n        var pixels = 0;\r\n        var nbright = 0;\r\n        var nmatch = 0;\r\n        var lastbright = 0;\r\n        var streak = 10;\r\n        var lumpixels = 0;\r\n        var lummatch = 0;\r\n        var nwhite = 0;\r\n        if (AbilityState.overlayState) {\r\n            this.debug = new ImageData(30, 30);\r\n        }\r\n        for (var dir of dirs) {\r\n            for (var a = 0; a < dir.n; a++) {\r\n                var x = dir.ox + a * dir.sx;\r\n                var y = dir.oy + a * dir.sy;\r\n                var i1 = (abilx + x) * 4 + (abily + y) * buf.width * 4;\r\n                var i2 = x * 4 + y * template.width * 4;\r\n                var lum = template.data[i2] + template.data[i2 + 1] + template.data[i2 + 2];\r\n                var imglum = buf.data[i1] + buf.data[i1 + 1] + buf.data[i1 + 2];\r\n                var d1 = Math.abs(buf.data[i1] - template.data[i2]) + Math.abs(buf.data[i1 + 1] - template.data[i2 + 1]) + Math.abs(buf.data[i1 + 2] - template.data[i2 + 2]);\r\n                var d2 = Math.abs(buf.data[i1] - template.data[i2] * alpha) + Math.abs(buf.data[i1 + 1] - template.data[i2 + 1] * alpha) + Math.abs(buf.data[i1 + 2] - template.data[i2 + 2] * alpha);\r\n                var match = d1 < 5 || d2 < 5;\r\n                if (match) {\r\n                    if (d1 < d2) {\r\n                        if (d2 >= 5) {\r\n                            streak++;\r\n                            nbright++;\r\n                        }\r\n                        if (streak > 5) {\r\n                            lastbright = pixels;\r\n                        }\r\n                    }\r\n                    else {\r\n                        streak = 0;\r\n                    }\r\n                    nmatch++;\r\n                }\r\n                if (lum > 30) {\r\n                    if (match) {\r\n                        lummatch++;\r\n                    }\r\n                    lumpixels++;\r\n                }\r\n                if (imglum > 70 * 3) {\r\n                    nwhite++;\r\n                }\r\n                //this.debug.setPixel(x, y, [d1, d2, 0, 255]);\r\n                if (AbilityState.overlayState) {\r\n                    this.debug.setPixel(x, y, (d1 < 5 || d2 < 5 ? (d1 < d2 ? [255, 255, 255, 255] : [128, 128, 128, 255]) : [255, 0, 0, 255]));\r\n                }\r\n                pixels++;\r\n            }\r\n        }\r\n        lastbright = Math.max(lastbright, nbright);\r\n        this.cdfraction = -1;\r\n        outer: for (var dir of dirs) {\r\n            if (lastbright > dir.n) {\r\n                lastbright -= dir.n;\r\n            }\r\n            else {\r\n                var x = dir.ox + dir.sx * lastbright - size / 2;\r\n                var y = dir.oy + dir.sy * lastbright - size / 2;\r\n                if (AbilityState.overlayState) {\r\n                    this.debug.setPixel(x + size / 2, y + size / 2, [0, 255, 255, 255]);\r\n                }\r\n                var angle = Math.atan2(y, x);\r\n                this.cdfraction = (1.25 + angle / Math.PI / 2) % 1;\r\n                break outer;\r\n            }\r\n        }\r\n        var avail = false;\r\n        if (lummatch / lumpixels > 0.5) {\r\n            if (this.cooldown == 2 && this.cdchange != 0) {\r\n                avail = true;\r\n            }\r\n            else if (this.cdfraction > 0.2) {\r\n                avail = true;\r\n            }\r\n            else if (this.gcd && this.cooldown > 2) {\r\n                avail = true;\r\n            }\r\n            else if (!this.gcd && this.cooldown > this.ability.cooldown * 0.6) {\r\n                avail = true;\r\n            }\r\n        }\r\n        if (avail) {\r\n            this.available = true;\r\n        }\r\n        else if (nwhite / pixels < 0.7) {\r\n            this.available = false;\r\n        } //keep old value if the icon is flashed white\r\n    }\r\n    readhotkey(buf, abilx, abily) {\r\n        var col = [255, 255, 255];\r\n        var line1 = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](buf, hotkeyfont, col, abilx + 2, abily + 26, true, false);\r\n        if (line1.text) {\r\n            var line2 = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](buf, hotkeyfont, col, abilx + 2, abily + 15, true, false);\r\n            if (line2.text) {\r\n                this.hotkey = line2.text + \" \" + line1.text;\r\n            }\r\n            else {\r\n                this.hotkey = line1.text;\r\n            }\r\n        }\r\n    }\r\n    overlayState(x, y) {\r\n        if (this.available) {\r\n            var angle = (0.75 + this.cdfraction) * Math.PI * 2;\r\n            alt1.overLayLine(_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 0, 0), 1, x + 15, y + 15, x + 15 + Math.round(Math.cos(angle) * 15), y + 15 + Math.round(Math.sin(angle) * 15), 600);\r\n        }\r\n        if (!this.available) {\r\n            alt1.overLayRect((this.ability ? _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 0, 0) : _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](1, 1, 1)), x - 1, y - 1, 32, 32, 600, 1);\r\n        }\r\n        alt1.overLayText(this.tickcooldown + \"\", _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 255, 0), 7, x, y, 600);\r\n        //alt1.overLayText(this.matchpercent.toFixed(2), a1lib.mixColor(255, 255, 0), 7, x, y, 600);\r\n        //alt1.overLayText(this.cdfraction.toFixed(2), a1lib.mixColor(255, 255, 0), 7, x, y + 15, 600);\r\n        //if (this.cooldown != 0 && this.gcd) { alt1.overLayText(\"gcd\", a1lib.mixColor(255, 255, 0), 8, x, y, 600); }\r\n        //alt1.overLayText(this.hotkey || \"?\", a1lib.mixColor(255, 255, 255), 11, x + 12, y + 12, 600);\r\n        //if (this.debug) { alt1.overLayImage(x, y, a1lib.encodeImageString(this.debug), this.debug.width, 600); }\r\n    }\r\n    getAbility(buf, abilx, abily) {\r\n        var a = 0.20;\r\n        var best = null;\r\n        var bestscore = 30 * 30 * 10;\r\n        for (var abil of this.reader.abilityimgs) {\r\n            var icon = abil.icon;\r\n            var score = 0;\r\n            for (var x = 0; x < 30; x++) {\r\n                for (var y = 0; y < 30; y++) {\r\n                    var i1 = (x + abilx) * 4 + (y + abily) * 4 * buf.width;\r\n                    var i2 = x * 4 + y * 4 * icon.width;\r\n                    var d1 = Math.abs(buf.data[i1] - icon.data[i2]) + Math.abs(buf.data[i1 + 1] - icon.data[i2 + 1]) + Math.abs(buf.data[i1 + 2] - icon.data[i2 + 2]);\r\n                    var d2 = Math.abs(buf.data[i1] - icon.data[i2] * a) + Math.abs(buf.data[i1 + 1] - icon.data[i2 + 1] * a) + Math.abs(buf.data[i1 + 2] - icon.data[i2 + 2] * a);\r\n                    var d = Math.min(d1, d2, 20);\r\n                    score += d;\r\n                }\r\n            }\r\n            if (score < bestscore) {\r\n                bestscore = score;\r\n                best = abil;\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n}\r\nAbilityState.iconwidth = 30 + 1; //the cooldown text overlays the box by one pixel\r\nAbilityState.iconheight = 30 + 1; //also need one extra px here to read the hotkey\r\nAbilityState.overlayState = false;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2luZGV4LnRzPzAyYzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW9DO0FBQ0g7QUFDUztBQUNBO0FBQ1k7QUFDRztBQUN6RDtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxvSUFBdUQ7QUFDNUUsaUJBQWlCLG1CQUFPLENBQUMsMEdBQTBDO0FBQ25FLFdBQVcsc0RBQWlCO0FBQzVCLGlCQUFpQixtQkFBTyxDQUFDLDRGQUE2QjtBQUN0RCxvQkFBb0IsbUJBQU8sQ0FBQyxrR0FBZ0M7QUFDNUQsc0JBQXNCLG1CQUFPLENBQUMsc0dBQWtDO0FBQ2hFLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUVBQVk7QUFDN0IsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBLENBQUM7QUFDYztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0RBQWU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNERBQXVCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLCtDQUFJO0FBQ25DLG9CQUFvQiwrQ0FBSTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwrQ0FBVTtBQUNyQyx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaURBQU07QUFDakM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtEQUFhO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixzQkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isc0JBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsK0NBQUk7QUFDN0I7QUFDQTtBQUNBLHVCQUF1QixtQkFBbUI7QUFDMUM7QUFDQSw2QkFBNkIsK0NBQUk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixrREFBZTtBQUM1QywrQkFBK0IsK0NBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQywyQkFBMkIsd0JBQXdCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0RBQWE7QUFDekIsNkJBQTZCLG1EQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQkFBK0IsY0FBYyxZQUFZLGFBQWEsZ0NBQWdDLGdCQUFnQixXQUFXLGdCQUFnQixRQUFRLGVBQWUsRUFBRTtBQUNyTCxVQUFVLDhCQUE4QixjQUFjLFlBQVksY0FBYywrQkFBK0IsZ0JBQWdCLFdBQVcsZ0JBQWdCLFFBQVEsZUFBZSxFQUFFO0FBQ25MLFVBQVUsOEJBQThCLGNBQWMsWUFBWSxjQUFjLCtCQUErQixnQkFBZ0IsV0FBVyxnQkFBZ0IsUUFBUSxnQkFBZ0IsRUFBRTtBQUNwTCxZQUFZLGdDQUFnQyxjQUFjLFlBQVksYUFBYSxnQ0FBZ0MsZ0JBQWdCLFdBQVcsZ0JBQWdCLFFBQVEsZ0JBQWdCLEVBQUU7QUFDeEwsZUFBZSxvQ0FBb0MsY0FBYyxZQUFZLGFBQWEsbUNBQW1DLGdCQUFnQixXQUFXLGdCQUFnQixRQUFRLGdCQUFnQixFQUFFO0FBQ2xNLGNBQWMsbUNBQW1DLGNBQWMsWUFBWSxjQUFjLGtDQUFrQyxnQkFBZ0IsV0FBVyxnQkFBZ0IsUUFBUSxnQkFBZ0IsRUFBRTtBQUNoTSxjQUFjLG1DQUFtQyxjQUFjLFlBQVksY0FBYyxrQ0FBa0MsZ0JBQWdCLFdBQVcsZUFBZSxRQUFRLGdCQUFnQixFQUFFO0FBQy9MLGdCQUFnQixxQ0FBcUMsY0FBYyxZQUFZLGFBQWEsbUNBQW1DLGVBQWUsV0FBVyxlQUFlLFFBQVEsZUFBZSxFQUFFO0FBQ2pNO0FBQ087QUFDUDtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsK0JBQStCO0FBQy9CLG1DQUFtQztBQUNuQyw4QkFBOEI7QUFDOUIsMEJBQTBCO0FBQzFCLHdCQUF3QjtBQUN4QiwwQkFBMEI7QUFDMUIsMkJBQTJCO0FBQzNCO0FBQ0EsMEJBQTBCO0FBQzFCLCtCQUErQjtBQUMvQiw2QkFBNkI7QUFDN0IsNEJBQTRCO0FBQzVCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLDhEQUE4RDtBQUMvSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQyw2QkFBNkIsU0FBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpREFBaUQ7QUFDOUQsYUFBYSw2Q0FBNkM7QUFDMUQsYUFBYSxxREFBcUQ7QUFDbEUsYUFBYSw4Q0FBOEM7QUFDM0QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFdBQVc7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0RBQVk7QUFDaEM7QUFDQSx3QkFBd0Isa0RBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixtREFBYztBQUMzQztBQUNBO0FBQ0EsNkNBQTZDLG1EQUFjLGNBQWMsbURBQWM7QUFDdkY7QUFDQSxpREFBaUQsbURBQWM7QUFDL0Q7QUFDQTtBQUNBLCtDQUErQyxvRUFBb0U7QUFDbkg7QUFDQSwyQkFBMkIscUZBQXFGO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQywrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxpQ0FBaUM7QUFDakMiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvaW5kZXgudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhMWxpYiBmcm9tIFwiQGFsdDEvYmFzZVwiO1xyXG5pbXBvcnQgKiBhcyBPQ1IgZnJvbSBcIkBhbHQxL29jclwiO1xyXG5pbXBvcnQgQWN0aW9uYmFyUmVhZGVyIGZyb20gXCIuL2FjdGlvbmJhclwiO1xyXG5pbXBvcnQgeyBSZWN0LCBJbWdSZWYgfSBmcm9tIFwiQGFsdDEvYmFzZVwiO1xyXG5pbXBvcnQgeyBJbWFnZURhdGFTZXQgfSBmcm9tIFwiQGFsdDEvYmFzZS9pbWFnZWRldGVjdFwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIEFjdGlvbmJhclJlYWRlciB9IGZyb20gXCIuL2FjdGlvbmJhclwiO1xyXG47XHJcbnZhciBjZGZvbnQgPSByZXF1aXJlKFwiQGFsdDEvb2NyL2ZvbnRzL3BpeGVsX2RpZ2l0c184cHhfc2hhZG93LmZvbnRtZXRhLmpzb25cIik7XHJcbnZhciBob3RrZXlmb250ID0gcmVxdWlyZShcIkBhbHQxL29jci9mb250cy9hYV84cHhfbmV3LmZvbnRtZXRhLmpzb25cIik7XHJcbnZhciBpbWdzID0gYTFsaWIuSW1hZ2VEZXRlY3Qud2VicGFja0ltYWdlcyh7XHJcbiAgICBzZXR0aW5nc2NvZzogcmVxdWlyZShcIi4vaW1ncy9zZXR0aW5nc2NvZy5kYXRhLnBuZ1wiKSxcclxuICAgIHNtYWxsYmFybnVtYmVyOiByZXF1aXJlKFwiLi9pbWdzL3NtYWxsYmFybnVtYmVyLmRhdGEucG5nXCIpLFxyXG4gICAgYWN0aW9uYmFybnVtYmVyczogcmVxdWlyZShcIi4vaW1ncy9hY3Rpb25iYXJudW1iZXJzLmRhdGEucG5nXCIpXHJcbn0pO1xyXG52YXIgYmFybnVtaW1ncyA9IG51bGw7XHJcbnZhciBiYXJudW1tYXAgPSB7fTtcclxuaW1ncy5wcm9taXNlLnRoZW4oKCkgPT4ge1xyXG4gICAgYmFybnVtaW1ncyA9IEltYWdlRGF0YVNldC5mcm9tRmlsbVN0cmlwKGltZ3MuYWN0aW9uYmFybnVtYmVycywgMTApO1xyXG4gICAgZm9yIChsZXQgYSA9IDA7IGEgPCAxMzsgYSsrKSB7XHJcbiAgICAgICAgYmFybnVtbWFwW2FdID0gKGEgKyAxKSArIFwiXCI7XHJcbiAgICB9XHJcbn0pO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYmlsaXR5UmVhZGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGFiaWxpdHlpbWdzKSB7XHJcbiAgICAgICAgdGhpcy5iYXJzID0gW107XHJcbiAgICAgICAgdGhpcy5tYWluYmFyID0gbnVsbDtcclxuICAgICAgICB0aGlzLmJhcnN0YXRlcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuY2FwdHVyZVJlY3QgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuYWN0aW9uYmFyUmVhZGVyID0gbmV3IEFjdGlvbmJhclJlYWRlcigpO1xyXG4gICAgICAgIHRoaXMuYWJpbGl0eWltZ3MgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubGlmZXN0YXRlID0gbnVsbDtcclxuICAgICAgICAvL2V2ZW50IHdoZW4gb2NsdWRlZCBiYXIgaXMgdmlzaWJsZSBhZ2FpbiwgYmVmb3JlIGFueSBmdXJ0aGVyIHJlYWRpbmcgaGFwcGVuc1xyXG4gICAgICAgIHRoaXMuaG9va3MgPSB7XHJcbiAgICAgICAgICAgIG9uYmFyc2hvd246IG51bGxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYWJpbGl0eWltZ3MgPSBhYmlsaXR5aW1ncztcclxuICAgIH1cclxuICAgIGZpbmQoaW1nKSB7XHJcbiAgICAgICAgaWYgKCFpbWcpIHtcclxuICAgICAgICAgICAgaW1nID0gYTFsaWIuY2FwdHVyZUhvbGRGdWxsUnMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5iYXJzID0gW107XHJcbiAgICAgICAgdmFyIGxvY3MgPSBpbWcuZmluZFN1YmltYWdlKGltZ3Muc21hbGxiYXJudW1iZXIpO1xyXG4gICAgICAgIHZhciBjb2cgPSBpbWdzLnNldHRpbmdzY29nO1xyXG4gICAgICAgIGZvciAodmFyIGxvYyBvZiBsb2NzKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBBYmlsaXR5QmFyLnR5cGVzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdCA9IEFiaWxpdHlCYXIudHlwZXNba2V5XTtcclxuICAgICAgICAgICAgICAgIGlmICghdC5jb2cpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciByZWN0ID0gbmV3IFJlY3QobG9jLnggLSB0LmRldGVjdC54ICsgdC5jb2cueCwgbG9jLnkgLSB0LmRldGVjdC55ICsgdC5jb2cueSwgY29nLndpZHRoLCBjb2cuaGVpZ2h0KTtcclxuICAgICAgICAgICAgICAgIGlmIChSZWN0LmZyb21BcmdzKGltZykuY29udGFpbnMocmVjdCkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYnVmID0gaW1nLnJlYWQobG9jLnggLSB0LmRldGVjdC54ICsgdC5jb2cueCwgbG9jLnkgLSB0LmRldGVjdC55ICsgdC5jb2cueSwgY29nLndpZHRoLCBjb2cuaGVpZ2h0KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmLnBpeGVsQ29tcGFyZShjb2cpIDwgMTApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJhciA9IG5ldyBBYmlsaXR5QmFyKHRoaXMsIGxvYy54IC0gdC5kZXRlY3QueCwgbG9jLnkgLSB0LmRldGVjdC55LCB0LCB0aGlzLmJhcnN0YXRlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhci5vdmVybGF5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmFycy5wdXNoKGJhcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFjdGlvbmJhclJlYWRlci5maW5kKGltZyk7XHJcbiAgICAgICAgaWYgKHRoaXMuYWN0aW9uYmFyUmVhZGVyLnBvcykge1xyXG4gICAgICAgICAgICB2YXIgbWFpbnBvcyA9IHRoaXMuYWN0aW9uYmFyUmVhZGVyLnBvcztcclxuICAgICAgICAgICAgdmFyIHQgPSBBYmlsaXR5QmFyLnR5cGVzW21haW5wb3MubGF5b3V0LnR5cGVdO1xyXG4gICAgICAgICAgICB2YXIgYmFyID0gbmV3IEFiaWxpdHlCYXIodGhpcywgbWFpbnBvcy54IC0gdC5hY3Rpb24ueCwgbWFpbnBvcy55IC0gdC5hY3Rpb24ueSwgQWJpbGl0eUJhci50eXBlc1ttYWlucG9zLmxheW91dC50eXBlXSwgdGhpcy5iYXJzdGF0ZXMpO1xyXG4gICAgICAgICAgICBiYXIub3ZlcmxheSgpO1xyXG4gICAgICAgICAgICB0aGlzLmJhcnMudW5zaGlmdChiYXIpO1xyXG4gICAgICAgICAgICB0aGlzLm1haW5iYXIgPSBiYXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmJhcnMubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2FwdHVyZVJlY3QgPSBhMWxpYi5SZWN0LmZyb21BcmdzKHRoaXMuYmFyc1swXS5ib3VuZHMpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdGhpcy5iYXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2FwdHVyZVJlY3QudW5pb24odGhpcy5iYXJzW2ldLmJvdW5kcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmJhcnMubGVuZ3RoO1xyXG4gICAgfVxyXG4gICAgZ2V0Q2FwdEFyZWFzKCkge1xyXG4gICAgICAgIHZhciByID0ge307XHJcbiAgICAgICAgZm9yICh2YXIgYiBpbiB0aGlzLmJhcnMpIHtcclxuICAgICAgICAgICAgcltcImJhclwiICsgYl0gPSB0aGlzLmJhcnNbYl0uYm91bmRzO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQGRlcHJlY2F0ZWQga2luZGEgbmVlZHMgcmV3cml0ZSB0byBiZSBlZmZpY2llbnQsIHVzZSByZWFkYWxsc2xvdHNpbm5lciBtYW51YWxseSBpbnN0ZWFkXHJcbiAgICAgKiBAcGFyYW0gaW1nXHJcbiAgICAgKi9cclxuICAgIHJlYWRBbGxTbG90cyhpbWcpIHtcclxuICAgICAgICB2YXIgZGF0YTtcclxuICAgICAgICBpZiAoIXRoaXMuY2FwdHVyZVJlY3QpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibm8gY2FwdHVyZXJlY3Qgc2V0IFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGltZyBpbnN0YW5jZW9mIEltZ1JlZikge1xyXG4gICAgICAgICAgICBkYXRhID0gaW1nLnRvRGF0YSh0aGlzLmNhcHR1cmVSZWN0LngsIHRoaXMuY2FwdHVyZVJlY3QueSwgdGhpcy5jYXB0dXJlUmVjdC53aWR0aCwgdGhpcy5jYXB0dXJlUmVjdC5oZWlnaHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgZGF0YSA9IGExbGliLmNhcHR1cmUodGhpcy5jYXB0dXJlUmVjdC54LCB0aGlzLmNhcHR1cmVSZWN0LnksIHRoaXMuY2FwdHVyZVJlY3Qud2lkdGgsIHRoaXMuY2FwdHVyZVJlY3QuaGVpZ2h0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGNhcHRzID0ge307XHJcbiAgICAgICAgdmFyIGNhcHRhcmVhcyA9IHt9O1xyXG4gICAgICAgIGZvciAodmFyIGEgaW4gdGhpcy5iYXJzKSB7XHJcbiAgICAgICAgICAgIGNhcHRzW1wiYmFyXCIgKyBhXSA9IGRhdGE7XHJcbiAgICAgICAgICAgIGNhcHRhcmVhc1tcImJhclwiICsgYV0gPSB0aGlzLmNhcHR1cmVSZWN0O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5yZWFkQWxsU2xvdHNJbm5lcihjYXB0cywgY2FwdGFyZWFzKTtcclxuICAgIH1cclxuICAgIHJlYWRBbGxTbG90c0lubmVyKGNhcHRzLCBjYXB0YXJlYXMpIHtcclxuICAgICAgICB2YXIgdmlzaWJsZWJhcnMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBiIGluIHRoaXMuYmFycykge1xyXG4gICAgICAgICAgICB2YXIgYmFyID0gdGhpcy5iYXJzW2JdO1xyXG4gICAgICAgICAgICB2YXIgY2FwdCA9IGNhcHRzW1wiYmFyXCIgKyBiXTtcclxuICAgICAgICAgICAgdmFyIGNhcHRhcmVhID0gY2FwdGFyZWFzW1wiYmFyXCIgKyBiXTtcclxuICAgICAgICAgICAgdmFyIG5yID0gYmFyLnJlYWRCYXJOcihjYXB0LCBjYXB0YXJlYS54LCBjYXB0YXJlYS55KTtcclxuICAgICAgICAgICAgaWYgKCFucikge1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHN0YXRlID0gdGhpcy5iYXJzdGF0ZXNbbnJdO1xyXG4gICAgICAgICAgICB2aXNpYmxlYmFycy5wdXNoKHN0YXRlKTtcclxuICAgICAgICAgICAgaWYgKCFzdGF0ZS52aXNpYmxlICYmIHRoaXMuaG9va3Mub25iYXJzaG93bikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ob29rcy5vbmJhcnNob3duKHN0YXRlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IGJhci5zbG90cy5sZW5ndGg7IGErKykge1xyXG4gICAgICAgICAgICAgICAgc3RhdGUuc2xvdHNbYV0ucmVhZEFiaWxpdHkoY2FwdCwgYmFyLnNsb3RzW2FdLnggLSBjYXB0YXJlYS54LCBiYXIuc2xvdHNbYV0ueSAtIGNhcHRhcmVhLnkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAodmFyIGlkIGluIHRoaXMuYmFyc3RhdGVzKSB7XHJcbiAgICAgICAgICAgIHZhciBiYXJzdGF0ZSA9IHRoaXMuYmFyc3RhdGVzW2lkXTtcclxuICAgICAgICAgICAgYmFyc3RhdGUudmlzaWJsZSA9IHZpc2libGViYXJzLmluZGV4T2YodGhpcy5iYXJzdGF0ZXNbaWRdKSAhPSAtMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmaW5pc2hUaWNrKCkge1xyXG4gICAgICAgIGZvciAodmFyIGIgaW4gdGhpcy5iYXJzdGF0ZXMpIHtcclxuICAgICAgICAgICAgdmFyIGJhciA9IHRoaXMuYmFyc3RhdGVzW2JdO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBzbG90IG9mIGJhci5zbG90cykge1xyXG4gICAgICAgICAgICAgICAgc2xvdC5sYXN0Y29vbGRvd24gPSBzbG90LmNvb2xkb3duO1xyXG4gICAgICAgICAgICAgICAgc2xvdC5sYXN0dGlja2Nvb2xkb3duID0gc2xvdC50aWNrY29vbGRvd247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZWFkTGlmZShidWZmZXIsIGJ1ZngsIGJ1ZnkpIHtcclxuICAgICAgICBpZiAodGhpcy5hY3Rpb25iYXJSZWFkZXIucG9zID09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGlmZXN0YXRlID0gdGhpcy5hY3Rpb25iYXJSZWFkZXIucmVhZChidWZmZXIsIGJ1ZngsIGJ1ZnkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxpZmVzdGF0ZTtcclxuICAgIH1cclxuICAgIG92ZXJsYXlTdGF0ZSgpIHtcclxuICAgICAgICBhbHQxLm92ZXJMYXlTZXRHcm91cChcImFiaWxkZWJ1Z1wiKTtcclxuICAgICAgICBhbHQxLm92ZXJMYXlGcmVlemVHcm91cChcImFiaWxkZWJ1Z1wiKTtcclxuICAgICAgICBhbHQxLm92ZXJMYXlDbGVhckdyb3VwKFwiYWJpbGRlYnVnXCIpO1xyXG4gICAgICAgIGZvciAodmFyIGJhciBvZiB0aGlzLmJhcnMpIHtcclxuICAgICAgICAgICAgdmFyIHN0YXRlID0gdGhpcy5iYXJzdGF0ZXNbYmFyLmJhcmlkXTtcclxuICAgICAgICAgICAgaWYgKHN0YXRlKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IGJhci5zbG90cy5sZW5ndGg7IGErKykge1xyXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLnNsb3RzW2FdLm92ZXJsYXlTdGF0ZShiYXIuc2xvdHNbYV0ueCwgYmFyLnNsb3RzW2FdLnkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFsdDEub3ZlckxheVJlZnJlc2hHcm91cChcImFiaWxkZWJ1Z1wiKTtcclxuICAgIH1cclxuICAgICp2aXNpYmxlQWJpbGl0aWVzKCkge1xyXG4gICAgICAgIGZvciAodmFyIGJhciBvZiB0aGlzLmJhcnMpIHtcclxuICAgICAgICAgICAgaWYgKGJhci5iYXJpZCkge1xyXG4gICAgICAgICAgICAgICAgeWllbGQqIHRoaXMuYmFyc3RhdGVzW2Jhci5iYXJpZF0uc2xvdHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAqYWxsQWJpbGl0aWVzKCkge1xyXG4gICAgICAgIGZvciAodmFyIGJhcmlkIGluIHRoaXMuYmFyc3RhdGVzKSB7XHJcbiAgICAgICAgICAgIHZhciBiYXIgPSB0aGlzLmJhcnN0YXRlc1tiYXJpZF07XHJcbiAgICAgICAgICAgIHlpZWxkKiBiYXIuc2xvdHM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgKm1haW5iYXJBYmlsaXRpZXMoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubWFpbmJhcikge1xyXG4gICAgICAgICAgICB2YXIgYmFyID0gdGhpcy5iYXJzdGF0ZXNbdGhpcy5tYWluYmFyLmJhcmlkXTtcclxuICAgICAgICAgICAgaWYgKGJhcikge1xyXG4gICAgICAgICAgICAgICAgeWllbGQqIGJhci5zbG90cztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICphbGxzbG90cygpIHtcclxuICAgICAgICBmb3IgKHZhciBiYXIgb2YgdGhpcy5iYXJzKSB7XHJcbiAgICAgICAgICAgIHlpZWxkKiBiYXIuc2xvdHM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbkFiaWxpdHlSZWFkZXIuaW1ncyA9IHtcclxuICAgIHNtYWxsYmFybnVtYmVyOiBudWxsLFxyXG4gICAgc2V0dGluZ3Njb2c6IG51bGxcclxufTtcclxuO1xyXG5jbGFzcyBBYmlsaXR5QmFyU2xvdCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCBpbmRleCwgYmFyKSB7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgICAgIHRoaXMuaW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLmJhciA9IGJhcjtcclxuICAgIH1cclxuICAgIGdldFN0YXRlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJhci5iYXJzdGF0ZXNbdGhpcy5iYXIuYmFyaWRdLnNsb3RzW3RoaXMuaW5kZXhdO1xyXG4gICAgfVxyXG59XHJcbmNsYXNzIEFiaWxpdHlCYXIge1xyXG4gICAgY29uc3RydWN0b3IocmVhZGVyLCB4LCB5LCBsYXlvdXQsIGJhcnN0YXRlcykge1xyXG4gICAgICAgIHRoaXMuYmFyaWQgPSBcIlwiOyAvL1RPRE8gZmluZCBvdXQgd2hlbiBhbmQgd2hlcmUgdGhpcyBpcyBhc3NpZ25lZCwgY3VycmVudGx5IG5vIHByb3BlciBpbml0aWFsaXphdGlvblxyXG4gICAgICAgIHRoaXMuc2xvdHMgPSBbXTtcclxuICAgICAgICB0aGlzLnJlYWRlciA9IHJlYWRlcjtcclxuICAgICAgICB0aGlzLmxheW91dCA9IGxheW91dDtcclxuICAgICAgICB0aGlzLmJhcnN0YXRlcyA9IGJhcnN0YXRlcztcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICAgICAgdmFyIGJvdW5kcyA9IG5ldyBSZWN0KHRoaXMueCArIGxheW91dC5udW0ueCwgdGhpcy55ICsgbGF5b3V0Lm51bS55LCAxMCwgMTUpO1xyXG4gICAgICAgIHZhciBjeCA9IHg7XHJcbiAgICAgICAgdmFyIGN5ID0geTtcclxuICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IGxheW91dC5sZW5ndGg7IGErKykge1xyXG4gICAgICAgICAgICB0aGlzLnNsb3RzLnB1c2gobmV3IEFiaWxpdHlCYXJTbG90KGN4LCBjeSwgYSwgdGhpcykpO1xyXG4gICAgICAgICAgICBib3VuZHMudW5pb24obmV3IFJlY3QoY3gsIGN5LCBBYmlsaXR5U3RhdGUuaWNvbndpZHRoLCBBYmlsaXR5U3RhdGUuaWNvbmhlaWdodCkpO1xyXG4gICAgICAgICAgICBjeCArPSBsYXlvdXQuc3RlcC54O1xyXG4gICAgICAgICAgICBjeSArPSBsYXlvdXQuc3RlcC55O1xyXG4gICAgICAgICAgICBpZiAoKGEgKyAxKSAlIGxheW91dC5yb3dsZW4gPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgY3ggKz0gbGF5b3V0LnJvd3N0ZXAueCAtIGxheW91dC5yb3dsZW4gKiBsYXlvdXQuc3RlcC54O1xyXG4gICAgICAgICAgICAgICAgY3kgKz0gbGF5b3V0LnJvd3N0ZXAueSAtIGxheW91dC5yb3dsZW4gKiBsYXlvdXQuc3RlcC55O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChsYXlvdXQuYWN0aW9uKSB7XHJcbiAgICAgICAgICAgIHZhciBtYWlubGF5b3V0ID0gQWN0aW9uYmFyUmVhZGVyLmxheW91dHNbbGF5b3V0LmlkXTtcclxuICAgICAgICAgICAgdmFyIG1haW5yZWN0ID0gbmV3IGExbGliLlJlY3QoeCArIGxheW91dC5hY3Rpb24ueCwgeSArIGxheW91dC5hY3Rpb24ueSwgbWFpbmxheW91dC53aWR0aCwgbWFpbmxheW91dC5oZWlnaHQpO1xyXG4gICAgICAgICAgICBtYWlucmVjdC5pbmZsYXRlKDEwLCAxMCk7XHJcbiAgICAgICAgICAgIGJvdW5kcy51bmlvbihtYWlucmVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYm91bmRzID0gYm91bmRzO1xyXG4gICAgfVxyXG4gICAgcmVhZEJhck5yKGJ1ZmZlciwgYnVmeCwgYnVmeSkge1xyXG4gICAgICAgIGxldCBtYXRjaCA9IGJhcm51bWltZ3MubWF0Y2hCZXN0KGJ1ZmZlciwgdGhpcy54ICsgdGhpcy5sYXlvdXQubnVtLnggLSBidWZ4LCB0aGlzLnkgKyB0aGlzLmxheW91dC5udW0ueSAtIGJ1ZnkpO1xyXG4gICAgICAgIC8vMXN0IHNlY29uZGFyeSBhYmlsaXR5IGJhciBoYXMgb25lIHBpeGVsIG9mZnNldCEhQCMhQCNcclxuICAgICAgICBtYXRjaCA9IG1hdGNoIHx8IGJhcm51bWltZ3MubWF0Y2hCZXN0KGJ1ZmZlciwgdGhpcy54ICsgdGhpcy5sYXlvdXQubnVtLnggLSBidWZ4LCB0aGlzLnkgKyB0aGlzLmxheW91dC5udW0ueSAtIGJ1ZnkgLSAxKTtcclxuICAgICAgICBpZiAoIW1hdGNoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmJhcmlkID0gYmFybnVtbWFwW21hdGNoLmluZGV4XTtcclxuICAgICAgICBpZiAoIXRoaXMuYmFyc3RhdGVzW3RoaXMuYmFyaWRdKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmFyc3RhdGVzW3RoaXMuYmFyaWRdID0geyBiYXJpZDogdGhpcy5iYXJpZCwgc2xvdHM6IFtdLCB2aXNpYmxlOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICBmb3IgKHZhciBiID0gMDsgYiA8IHRoaXMubGF5b3V0Lmxlbmd0aDsgYisrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJhcnN0YXRlc1t0aGlzLmJhcmlkXS5zbG90c1tiXSA9IG5ldyBBYmlsaXR5U3RhdGUodGhpcy5yZWFkZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmJhcmlkO1xyXG4gICAgfVxyXG4gICAgb3ZlcmxheSgpIHtcclxuICAgICAgICBpZiAoYTFsaWIuaGFzQWx0MSkge1xyXG4gICAgICAgICAgICBhbHQxLm92ZXJMYXlSZWN0KGExbGliLm1peENvbG9yKDI1NSwgMjU1LCAyNTUpLCB0aGlzLmJvdW5kcy54LCB0aGlzLmJvdW5kcy55LCB0aGlzLmJvdW5kcy53aWR0aCwgdGhpcy5ib3VuZHMuaGVpZ2h0LCAzMDAwLCAyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuQWJpbGl0eUJhci50eXBlcyA9IHtcclxuICAgIGZsYXQ6IHsgaWQ6IFwiZmxhdFwiLCBzZWM6IHRydWUsIHN0ZXA6IHsgeDogMzYsIHk6IDAgfSwgcm93c3RlcDogeyB4OiAwLCB5OiAwIH0sIHJvd2xlbjogMTQsIGxlbmd0aDogMTQsIGNvZzogeyB4OiA1MDQsIHk6IDE3IH0sIGRldGVjdDogeyB4OiA1MDEsIHk6IC0yIH0sIG51bTogeyB4OiA1MDMsIHk6IDIgfSB9LFxyXG4gICAgaG9yOiB7IGlkOiBcImhvclwiLCBzZWM6IHRydWUsIHN0ZXA6IHsgeDogMzUsIHk6IDAgfSwgcm93c3RlcDogeyB4OiAwLCB5OiAzNSB9LCByb3dsZW46IDcsIGxlbmd0aDogMTQsIGNvZzogeyB4OiAyNDUsIHk6IDU0IH0sIGRldGVjdDogeyB4OiAyNDIsIHk6IC0xIH0sIG51bTogeyB4OiAyNDQsIHk6IDMgfSB9LFxyXG4gICAgdmVyOiB7IGlkOiBcInZlclwiLCBzZWM6IHRydWUsIHN0ZXA6IHsgeDogMCwgeTogMzUgfSwgcm93c3RlcDogeyB4OiAzNSwgeTogMCB9LCByb3dsZW46IDcsIGxlbmd0aDogMTQsIGNvZzogeyB4OiA1NiwgeTogMjQ1IH0sIGRldGVjdDogeyB4OiAtMywgeTogMjQyIH0sIG51bTogeyB4OiAtMSwgeTogMjQ2IH0gfSxcclxuICAgIHRvd2VyOiB7IGlkOiBcInRvd2VyXCIsIHNlYzogdHJ1ZSwgc3RlcDogeyB4OiAwLCB5OiAzNiB9LCByb3dzdGVwOiB7IHg6IDAsIHk6IDAgfSwgcm93bGVuOiAxNCwgbGVuZ3RoOiAxNCwgY29nOiB7IHg6IDIwLCB5OiA1MDQgfSwgZGV0ZWN0OiB7IHg6IC0zLCB5OiA1MDEgfSwgbnVtOiB7IHg6IC0xLCB5OiA1MDUgfSB9LFxyXG4gICAgbWFpbmZsYXQ6IHsgaWQ6IFwibWFpbmZsYXRcIiwgc2VjOiBmYWxzZSwgc3RlcDogeyB4OiAzNiwgeTogMCB9LCByb3dzdGVwOiB7IHg6IDAsIHk6IDAgfSwgcm93bGVuOiAxNCwgbGVuZ3RoOiAxNCwgZGV0ZWN0OiB7IHg6IDEyLCB5OiAtMjkgfSwgYWN0aW9uOiB7IHg6IDU0LCB5OiAtMzEgfSwgbnVtOiB7IHg6IDE0LCB5OiAtMjUgfSB9LFxyXG4gICAgbWFpbmhvcjogeyBpZDogXCJtYWluaG9yXCIsIHNlYzogZmFsc2UsIHN0ZXA6IHsgeDogMzYsIHk6IDAgfSwgcm93c3RlcDogeyB4OiAwLCB5OiAzNiB9LCByb3dsZW46IDcsIGxlbmd0aDogMTQsIGRldGVjdDogeyB4OiAxMCwgeTogLTQ1IH0sIGFjdGlvbjogeyB4OiA0MywgeTogLTQ3IH0sIG51bTogeyB4OiAxMiwgeTogLTQxIH0gfSxcclxuICAgIG1haW52ZXI6IHsgaWQ6IFwibWFpbnZlclwiLCBzZWM6IGZhbHNlLCBzdGVwOiB7IHg6IDAsIHk6IDM1IH0sIHJvd3N0ZXA6IHsgeDogMzUsIHk6IDAgfSwgcm93bGVuOiA3LCBsZW5ndGg6IDE0LCBkZXRlY3Q6IHsgeDogODQsIHk6IDIzMiB9LCBhY3Rpb246IHsgeDogNzUsIHk6IDEwIH0sIG51bTogeyB4OiA4NiwgeTogMjM2IH0gfSxcclxuICAgIG1haW50b3dlcjogeyBpZDogXCJtYWludG93ZXJcIiwgc2VjOiBmYWxzZSwgc3RlcDogeyB4OiAwLCB5OiAzNiB9LCByb3dzdGVwOiB7IHg6IDAsIHk6IDAgfSwgcm93bGVuOiAxNCwgbGVuZ3RoOiAxNCwgZGV0ZWN0OiB7IHg6IDQwLCB5OiAxNSB9LCBhY3Rpb246IHsgeDogNDMsIHk6IDQ1IH0sIG51bTogeyB4OiA0MiwgeTogMTkgfSB9LFxyXG59O1xyXG5leHBvcnQgY2xhc3MgQWJpbGl0eVN0YXRlIHtcclxuICAgIGNvbnN0cnVjdG9yKHJlYWRlcikge1xyXG4gICAgICAgIC8vaW50ZXJuYWxcclxuICAgICAgICB0aGlzLm5leHRkZXRlY3R0cnkgPSAwOyAvL3RpbWVzdGFtcCBvZiBuZXh0IGFiaWxpdHkgcmVhZCBhdHRlbXB0XHJcbiAgICAgICAgLy9zdGF0ZWZ1bFxyXG4gICAgICAgIHRoaXMubGFzdGNvb2xkb3duID0gLTE7IC8vY29vbGRvd24gYXQgbGFzdCBjb25maXJtZWQgdGlja1xyXG4gICAgICAgIHRoaXMubGFzdHRpY2tjb29sZG93biA9IC0xOyAvL251bWJlciBvZiB0aWNrcyBjb29sZG93biBvbiBsYXN0IGNvbWZpcm1lZCByZWFkXHJcbiAgICAgICAgdGhpcy50aWNrY29vbGRvd24gPSAwOyAvL251bWJlciBvZiB0aWNrcyBsZWZ0IG9uIGNvb2xkb3duXHJcbiAgICAgICAgdGhpcy5jZGNoYW5nZSA9IDA7IC8vY2QgY2hhbmdlIHNpbmNlIGxhc3QgdGlja1xyXG4gICAgICAgIHRoaXMuZ2NkID0gdHJ1ZTsgLy9jdXJyZW50IGNvb2xkb3duIGlzIGNvdXNlZCBieSBnbG9iYWwgY29vbGRvd24gYW5kIGlzIDEuOHNlY1xyXG4gICAgICAgIHRoaXMuZG9uZXRpbWUgPSAwOyAvL3RpbWVzdGFtcCBvZiB3aGVuIGNkIHdpbGwgYmUgZG9uZVxyXG4gICAgICAgIHRoaXMuaGFkY2QgPSBmYWxzZTsgLy9oYXMgYmVlbiBvbiBjb29sZG93biBpbiB0aGUgbGFzdCBtaW51dGVcclxuICAgICAgICAvL29ubHkgZnVuY3Rpb24gb2YgcGl4ZWxcclxuICAgICAgICB0aGlzLmNvb2xkb3duID0gMDsgLy9jdXJyZW50IHZpc2libGUgY29vbGRvd24gKHdob2xlIHNlYylcclxuICAgICAgICB0aGlzLmF2YWlsYWJsZSA9IGZhbHNlOyAvL2ZhbHNlIGlmIHRoZSBhYmlsaXR5IGNhbid0IGJlIHVzZWQgZXZlbiB3aGVuIG9mZiBjZCAod3Jvbmcgd2VhcG9uKVxyXG4gICAgICAgIHRoaXMuY2RmcmFjdGlvbiA9IC0xOyAvL2ZyYWN0aW9uIG9mIGNvb2xkb3duIGNvbXBsZXRlZCBhcyByZWFkIGJ5IGRhcmtlciBwaXhlbCBjbG9ja1xyXG4gICAgICAgIHRoaXMuYWJpbGl0eSA9IG51bGw7IC8vdGhlIGRldGVjdGVkIGFiaWxpdHkgXHJcbiAgICAgICAgdGhpcy5ob3RrZXkgPSBcIlwiOyAvL2hvdGtleSB0ZXh0IG9mIGFiaWxpdHlcclxuICAgICAgICB0aGlzLnJlYWRlciA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5kZWJ1ZyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZWFkZXIgPSByZWFkZXI7XHJcbiAgICB9XHJcbiAgICByZWFkQWJpbGl0eShkYXRhLCB4LCB5KSB7XHJcbiAgICAgICAgdmFyIHJlcyA9IE9DUi5yZWFkTGluZShkYXRhLCBjZGZvbnQsIFsyMDYsIDIxMywgMTM1XSwgeCArIDMxLCB5ICsgOCwgZmFsc2UsIHRydWUpO1xyXG4gICAgICAgIHZhciB0ID0gMDtcclxuICAgICAgICBpZiAocmVzLnRleHQgPT0gXCJcIikge1xyXG4gICAgICAgICAgICAvL2Rvbid0IHRydXN0IGEgZmFpbGVkIHJlYWQgYXMgXCIwXCIsIG9ubHkgcmVhZCBpdCBhcyAwIGlmIHdlIGhhdmUgYSBwaXhlbCBtYXRjaCBvbiB0aGUgaWNvbiBpbiB0aGUgY2QgYXJlYVxyXG4gICAgICAgICAgICB2YXIgYWxsb3cgPSB0aGlzLmNvb2xkb3duIDw9IDEgfHwgdGhpcy5hYmlsaXR5ICYmIHRoaXMuY29uZmlybUNkQXJlYShkYXRhLCB4LCB5KTtcclxuICAgICAgICAgICAgdCA9IChhbGxvdyA/IDAgOiBNYXRoLmNlaWwoKHRoaXMubGFzdHRpY2tjb29sZG93biAtIDEpICogMC42KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHJlcy50ZXh0LmVuZHNXaXRoKFwibVwiKSkge1xyXG4gICAgICAgICAgICB0ID0gNjAgKiArcmVzLnRleHQuc2xpY2UoMCwgLTEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdCA9ICtyZXMudGV4dDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XHJcbiAgICAgICAgdGhpcy5jZGNoYW5nZSA9ICh0aGlzLmxhc3Rjb29sZG93biAhPSAtMSA/IHQgLSB0aGlzLmxhc3Rjb29sZG93biA6IDApO1xyXG4gICAgICAgIHRoaXMuY29vbGRvd24gPSB0O1xyXG4gICAgICAgIGlmICh0aGlzLmNkY2hhbmdlID49IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5nY2QgPSB0aGlzLmNvb2xkb3duIDw9IDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmNvb2xkb3duICE9IE1hdGguY2VpbCgodGhpcy5sYXN0dGlja2Nvb2xkb3duIC0gMSkgKiAwLjYpKSB7XHJcbiAgICAgICAgICAgIHZhciB0aWNrY2QgPSBNYXRoLmZsb29yKHRoaXMuY29vbGRvd24gLyAwLjYpO1xyXG4gICAgICAgICAgICAvL2RldGVjdCAybmQgdGljayBpbiBzYW1lIHNlY29uZFxyXG4gICAgICAgICAgICBpZiAodGhpcy5jb29sZG93biAhPSAwICYmIHRoaXMuY2RjaGFuZ2UgPT0gMCAmJiBNYXRoLmNlaWwodGlja2NkICogMC42KSA9PSBNYXRoLmNlaWwoKHRpY2tjZCAtIDEpICogMC42KSkge1xyXG4gICAgICAgICAgICAgICAgdGlja2NkLS07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy50aWNrY29vbGRvd24gPSB0aWNrY2Q7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnRpY2tjb29sZG93bi0tO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5jb29sZG93biAhPSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZG9uZXRpbWUgPSBub3cgKyB0aGlzLmNvb2xkb3duICogMTAwMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5oYWRjZCA9IHRoaXMuZG9uZXRpbWUgLSBub3cgPiAtNjAgKiAxMDAwO1xyXG4gICAgICAgIHRoaXMuY2RmcmFjdGlvbiA9IC0xO1xyXG4gICAgICAgIHRoaXMuZGVidWcgPSBudWxsO1xyXG4gICAgICAgIGlmICghdGhpcy5hYmlsaXR5ICYmIHRoaXMubmV4dGRldGVjdHRyeSA8IG5vdykge1xyXG4gICAgICAgICAgICB0aGlzLmFiaWxpdHkgPSB0aGlzLmdldEFiaWxpdHkoZGF0YSwgeCwgeSk7XHJcbiAgICAgICAgICAgIHRoaXMubmV4dGRldGVjdHRyeSA9IG5vdyArIDEwMDAgKiAyMCAqICgxICsgTWF0aC5yYW5kb20oKSk7IC8vNS0xMCBzZWMgZGVsYXkgdG8gc3ByZWFkIGxvYWRcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuYWJpbGl0eSkge1xyXG4gICAgICAgICAgICB0aGlzLnJlYWRDbG9jayhkYXRhLCB4LCB5KTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmhvdGtleSAmJiB0aGlzLmF2YWlsYWJsZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZWFkaG90a2V5KGRhdGEsIHgsIHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vaWYgKHRoaXMuYWJpbGl0eSAmJiB0aGlzLmFiaWxpdHkuaWQgPT0gXCJpbW1vcnRhbGl0eVwiKSB7IGNvbnNvbGUubG9nKHRoaXMudGlja2Nvb2xkb3duLCB0aGlzLmNvb2xkb3duLCB0aGlzLmNkY2hhbmdlKTsgfVxyXG4gICAgfVxyXG4gICAgY29uZmlybUNkQXJlYShidWZmZXIsIHgsIHkpIHtcclxuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuYWJpbGl0eS5pY29uO1xyXG4gICAgICAgIGZvciAodmFyIGR5ID0gMTsgZHkgPCAxMDsgZHkrKykge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBkeCA9IDI0OyBkeCA8IDMwOyBkeCsrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaTEgPSAoeCArIGR4KSAqIDQgKyAoeSArIGR5KSAqIDQgKiBidWZmZXIud2lkdGg7XHJcbiAgICAgICAgICAgICAgICB2YXIgaTIgPSBkeCAqIDQgKyBkeSAqIDQgKiBpY29uLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgLy9jYWxjdWxhdGUgcG9ydGlvbiBvZiBpY29uIGNvbG9yIHZzIHB1cmUgd2hpdGUgcGVyIGNoYW5uZWxcclxuICAgICAgICAgICAgICAgIHZhciBncmFkciA9ICgyNTUgLSBidWZmZXIuZGF0YVtpMV0pIC8gKDI1NSAtIGljb24uZGF0YVtpMl0pO1xyXG4gICAgICAgICAgICAgICAgdmFyIGdyYWRnID0gKDI1NSAtIGJ1ZmZlci5kYXRhW2kxICsgMV0pIC8gKDI1NSAtIGljb24uZGF0YVtpMiArIDFdKTtcclxuICAgICAgICAgICAgICAgIHZhciBncmFkYiA9ICgyNTUgLSBidWZmZXIuZGF0YVtpMSArIDJdKSAvICgyNTUgLSBpY29uLmRhdGFbaTIgKyAyXSk7XHJcbiAgICAgICAgICAgICAgICAvL2lmIGl0J3MgYSBwdXJlIG1peCBvZiB3aGl0ZSBhbmQgdGhlIGljb24sIGFsbCBjaGFubmVscyB3aWxsIGhhdmUgdGhlIHNhbWUgcG9ydGlvbiBvZiB3aGl0ZVxyXG4gICAgICAgICAgICAgICAgdmFyIGQgPSBNYXRoLm1heChncmFkciwgZ3JhZGcsIGdyYWRiKSAtIE1hdGgubWluKGdyYWRyLCBncmFkZywgZ3JhZGIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGQgPiAwLjI1KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmVhZENsb2NrKGJ1ZiwgYWJpbHgsIGFiaWx5KSB7XHJcbiAgICAgICAgdmFyIGFscGhhID0gMC4yMDtcclxuICAgICAgICB2YXIgc2l6ZSA9IDMwO1xyXG4gICAgICAgIHZhciB0ZW1wbGF0ZSA9IHRoaXMuYWJpbGl0eS5pY29uO1xyXG4gICAgICAgIHZhciBkaXJzID0gW1xyXG4gICAgICAgICAgICB7IG46IHNpemUgLyAyLCBveDogc2l6ZSAvIDIsIG95OiAwLCBzeDogMSwgc3k6IDAgfSxcclxuICAgICAgICAgICAgeyBuOiBzaXplLCBveDogc2l6ZSAtIDEsIG95OiAxLCBzeDogMCwgc3k6IDEgfSxcclxuICAgICAgICAgICAgeyBuOiBzaXplLCBveDogc2l6ZSAtIDEsIG95OiBzaXplIC0gMSwgc3g6IC0xLCBzeTogMCB9LFxyXG4gICAgICAgICAgICB7IG46IHNpemUsIG94OiAwLCBveTogc2l6ZSAtIDEsIHN4OiAwLCBzeTogLTEgfSxcclxuICAgICAgICAgICAgeyBuOiBzaXplIC8gMiwgb3g6IDAsIG95OiAwLCBzeDogMSwgc3k6IDAgfVxyXG4gICAgICAgIF07XHJcbiAgICAgICAgdmFyIHBpeGVscyA9IDA7XHJcbiAgICAgICAgdmFyIG5icmlnaHQgPSAwO1xyXG4gICAgICAgIHZhciBubWF0Y2ggPSAwO1xyXG4gICAgICAgIHZhciBsYXN0YnJpZ2h0ID0gMDtcclxuICAgICAgICB2YXIgc3RyZWFrID0gMTA7XHJcbiAgICAgICAgdmFyIGx1bXBpeGVscyA9IDA7XHJcbiAgICAgICAgdmFyIGx1bW1hdGNoID0gMDtcclxuICAgICAgICB2YXIgbndoaXRlID0gMDtcclxuICAgICAgICBpZiAoQWJpbGl0eVN0YXRlLm92ZXJsYXlTdGF0ZSkge1xyXG4gICAgICAgICAgICB0aGlzLmRlYnVnID0gbmV3IEltYWdlRGF0YSgzMCwgMzApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKHZhciBkaXIgb2YgZGlycykge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IGRpci5uOyBhKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciB4ID0gZGlyLm94ICsgYSAqIGRpci5zeDtcclxuICAgICAgICAgICAgICAgIHZhciB5ID0gZGlyLm95ICsgYSAqIGRpci5zeTtcclxuICAgICAgICAgICAgICAgIHZhciBpMSA9IChhYmlseCArIHgpICogNCArIChhYmlseSArIHkpICogYnVmLndpZHRoICogNDtcclxuICAgICAgICAgICAgICAgIHZhciBpMiA9IHggKiA0ICsgeSAqIHRlbXBsYXRlLndpZHRoICogNDtcclxuICAgICAgICAgICAgICAgIHZhciBsdW0gPSB0ZW1wbGF0ZS5kYXRhW2kyXSArIHRlbXBsYXRlLmRhdGFbaTIgKyAxXSArIHRlbXBsYXRlLmRhdGFbaTIgKyAyXTtcclxuICAgICAgICAgICAgICAgIHZhciBpbWdsdW0gPSBidWYuZGF0YVtpMV0gKyBidWYuZGF0YVtpMSArIDFdICsgYnVmLmRhdGFbaTEgKyAyXTtcclxuICAgICAgICAgICAgICAgIHZhciBkMSA9IE1hdGguYWJzKGJ1Zi5kYXRhW2kxXSAtIHRlbXBsYXRlLmRhdGFbaTJdKSArIE1hdGguYWJzKGJ1Zi5kYXRhW2kxICsgMV0gLSB0ZW1wbGF0ZS5kYXRhW2kyICsgMV0pICsgTWF0aC5hYnMoYnVmLmRhdGFbaTEgKyAyXSAtIHRlbXBsYXRlLmRhdGFbaTIgKyAyXSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZDIgPSBNYXRoLmFicyhidWYuZGF0YVtpMV0gLSB0ZW1wbGF0ZS5kYXRhW2kyXSAqIGFscGhhKSArIE1hdGguYWJzKGJ1Zi5kYXRhW2kxICsgMV0gLSB0ZW1wbGF0ZS5kYXRhW2kyICsgMV0gKiBhbHBoYSkgKyBNYXRoLmFicyhidWYuZGF0YVtpMSArIDJdIC0gdGVtcGxhdGUuZGF0YVtpMiArIDJdICogYWxwaGEpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gZDEgPCA1IHx8IGQyIDwgNTtcclxuICAgICAgICAgICAgICAgIGlmIChtYXRjaCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkMSA8IGQyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkMiA+PSA1KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJlYWsrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5icmlnaHQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RyZWFrID4gNSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdGJyaWdodCA9IHBpeGVscztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFrID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgbm1hdGNoKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAobHVtID4gMzApIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbHVtbWF0Y2grKztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgbHVtcGl4ZWxzKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoaW1nbHVtID4gNzAgKiAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbndoaXRlKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvL3RoaXMuZGVidWcuc2V0UGl4ZWwoeCwgeSwgW2QxLCBkMiwgMCwgMjU1XSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoQWJpbGl0eVN0YXRlLm92ZXJsYXlTdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGVidWcuc2V0UGl4ZWwoeCwgeSwgKGQxIDwgNSB8fCBkMiA8IDUgPyAoZDEgPCBkMiA/IFsyNTUsIDI1NSwgMjU1LCAyNTVdIDogWzEyOCwgMTI4LCAxMjgsIDI1NV0pIDogWzI1NSwgMCwgMCwgMjU1XSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcGl4ZWxzKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGFzdGJyaWdodCA9IE1hdGgubWF4KGxhc3RicmlnaHQsIG5icmlnaHQpO1xyXG4gICAgICAgIHRoaXMuY2RmcmFjdGlvbiA9IC0xO1xyXG4gICAgICAgIG91dGVyOiBmb3IgKHZhciBkaXIgb2YgZGlycykge1xyXG4gICAgICAgICAgICBpZiAobGFzdGJyaWdodCA+IGRpci5uKSB7XHJcbiAgICAgICAgICAgICAgICBsYXN0YnJpZ2h0IC09IGRpci5uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFyIHggPSBkaXIub3ggKyBkaXIuc3ggKiBsYXN0YnJpZ2h0IC0gc2l6ZSAvIDI7XHJcbiAgICAgICAgICAgICAgICB2YXIgeSA9IGRpci5veSArIGRpci5zeSAqIGxhc3RicmlnaHQgLSBzaXplIC8gMjtcclxuICAgICAgICAgICAgICAgIGlmIChBYmlsaXR5U3RhdGUub3ZlcmxheVN0YXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWJ1Zy5zZXRQaXhlbCh4ICsgc2l6ZSAvIDIsIHkgKyBzaXplIC8gMiwgWzAsIDI1NSwgMjU1LCAyNTVdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBhbmdsZSA9IE1hdGguYXRhbjIoeSwgeCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNkZnJhY3Rpb24gPSAoMS4yNSArIGFuZ2xlIC8gTWF0aC5QSSAvIDIpICUgMTtcclxuICAgICAgICAgICAgICAgIGJyZWFrIG91dGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBhdmFpbCA9IGZhbHNlO1xyXG4gICAgICAgIGlmIChsdW1tYXRjaCAvIGx1bXBpeGVscyA+IDAuNSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5jb29sZG93biA9PSAyICYmIHRoaXMuY2RjaGFuZ2UgIT0gMCkge1xyXG4gICAgICAgICAgICAgICAgYXZhaWwgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuY2RmcmFjdGlvbiA+IDAuMikge1xyXG4gICAgICAgICAgICAgICAgYXZhaWwgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuZ2NkICYmIHRoaXMuY29vbGRvd24gPiAyKSB7XHJcbiAgICAgICAgICAgICAgICBhdmFpbCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoIXRoaXMuZ2NkICYmIHRoaXMuY29vbGRvd24gPiB0aGlzLmFiaWxpdHkuY29vbGRvd24gKiAwLjYpIHtcclxuICAgICAgICAgICAgICAgIGF2YWlsID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYXZhaWwpIHtcclxuICAgICAgICAgICAgdGhpcy5hdmFpbGFibGUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChud2hpdGUgLyBwaXhlbHMgPCAwLjcpIHtcclxuICAgICAgICAgICAgdGhpcy5hdmFpbGFibGUgPSBmYWxzZTtcclxuICAgICAgICB9IC8va2VlcCBvbGQgdmFsdWUgaWYgdGhlIGljb24gaXMgZmxhc2hlZCB3aGl0ZVxyXG4gICAgfVxyXG4gICAgcmVhZGhvdGtleShidWYsIGFiaWx4LCBhYmlseSkge1xyXG4gICAgICAgIHZhciBjb2wgPSBbMjU1LCAyNTUsIDI1NV07XHJcbiAgICAgICAgdmFyIGxpbmUxID0gT0NSLnJlYWRMaW5lKGJ1ZiwgaG90a2V5Zm9udCwgY29sLCBhYmlseCArIDIsIGFiaWx5ICsgMjYsIHRydWUsIGZhbHNlKTtcclxuICAgICAgICBpZiAobGluZTEudGV4dCkge1xyXG4gICAgICAgICAgICB2YXIgbGluZTIgPSBPQ1IucmVhZExpbmUoYnVmLCBob3RrZXlmb250LCBjb2wsIGFiaWx4ICsgMiwgYWJpbHkgKyAxNSwgdHJ1ZSwgZmFsc2UpO1xyXG4gICAgICAgICAgICBpZiAobGluZTIudGV4dCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ob3RrZXkgPSBsaW5lMi50ZXh0ICsgXCIgXCIgKyBsaW5lMS50ZXh0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ob3RrZXkgPSBsaW5lMS50ZXh0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb3ZlcmxheVN0YXRlKHgsIHkpIHtcclxuICAgICAgICBpZiAodGhpcy5hdmFpbGFibGUpIHtcclxuICAgICAgICAgICAgdmFyIGFuZ2xlID0gKDAuNzUgKyB0aGlzLmNkZnJhY3Rpb24pICogTWF0aC5QSSAqIDI7XHJcbiAgICAgICAgICAgIGFsdDEub3ZlckxheUxpbmUoYTFsaWIubWl4Q29sb3IoMjU1LCAwLCAwKSwgMSwgeCArIDE1LCB5ICsgMTUsIHggKyAxNSArIE1hdGgucm91bmQoTWF0aC5jb3MoYW5nbGUpICogMTUpLCB5ICsgMTUgKyBNYXRoLnJvdW5kKE1hdGguc2luKGFuZ2xlKSAqIDE1KSwgNjAwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmF2YWlsYWJsZSkge1xyXG4gICAgICAgICAgICBhbHQxLm92ZXJMYXlSZWN0KCh0aGlzLmFiaWxpdHkgPyBhMWxpYi5taXhDb2xvcigyNTUsIDAsIDApIDogYTFsaWIubWl4Q29sb3IoMSwgMSwgMSkpLCB4IC0gMSwgeSAtIDEsIDMyLCAzMiwgNjAwLCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYWx0MS5vdmVyTGF5VGV4dCh0aGlzLnRpY2tjb29sZG93biArIFwiXCIsIGExbGliLm1peENvbG9yKDI1NSwgMjU1LCAwKSwgNywgeCwgeSwgNjAwKTtcclxuICAgICAgICAvL2FsdDEub3ZlckxheVRleHQodGhpcy5tYXRjaHBlcmNlbnQudG9GaXhlZCgyKSwgYTFsaWIubWl4Q29sb3IoMjU1LCAyNTUsIDApLCA3LCB4LCB5LCA2MDApO1xyXG4gICAgICAgIC8vYWx0MS5vdmVyTGF5VGV4dCh0aGlzLmNkZnJhY3Rpb24udG9GaXhlZCgyKSwgYTFsaWIubWl4Q29sb3IoMjU1LCAyNTUsIDApLCA3LCB4LCB5ICsgMTUsIDYwMCk7XHJcbiAgICAgICAgLy9pZiAodGhpcy5jb29sZG93biAhPSAwICYmIHRoaXMuZ2NkKSB7IGFsdDEub3ZlckxheVRleHQoXCJnY2RcIiwgYTFsaWIubWl4Q29sb3IoMjU1LCAyNTUsIDApLCA4LCB4LCB5LCA2MDApOyB9XHJcbiAgICAgICAgLy9hbHQxLm92ZXJMYXlUZXh0KHRoaXMuaG90a2V5IHx8IFwiP1wiLCBhMWxpYi5taXhDb2xvcigyNTUsIDI1NSwgMjU1KSwgMTEsIHggKyAxMiwgeSArIDEyLCA2MDApO1xyXG4gICAgICAgIC8vaWYgKHRoaXMuZGVidWcpIHsgYWx0MS5vdmVyTGF5SW1hZ2UoeCwgeSwgYTFsaWIuZW5jb2RlSW1hZ2VTdHJpbmcodGhpcy5kZWJ1ZyksIHRoaXMuZGVidWcud2lkdGgsIDYwMCk7IH1cclxuICAgIH1cclxuICAgIGdldEFiaWxpdHkoYnVmLCBhYmlseCwgYWJpbHkpIHtcclxuICAgICAgICB2YXIgYSA9IDAuMjA7XHJcbiAgICAgICAgdmFyIGJlc3QgPSBudWxsO1xyXG4gICAgICAgIHZhciBiZXN0c2NvcmUgPSAzMCAqIDMwICogMTA7XHJcbiAgICAgICAgZm9yICh2YXIgYWJpbCBvZiB0aGlzLnJlYWRlci5hYmlsaXR5aW1ncykge1xyXG4gICAgICAgICAgICB2YXIgaWNvbiA9IGFiaWwuaWNvbjtcclxuICAgICAgICAgICAgdmFyIHNjb3JlID0gMDtcclxuICAgICAgICAgICAgZm9yICh2YXIgeCA9IDA7IHggPCAzMDsgeCsrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB5ID0gMDsgeSA8IDMwOyB5KyspIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaTEgPSAoeCArIGFiaWx4KSAqIDQgKyAoeSArIGFiaWx5KSAqIDQgKiBidWYud2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGkyID0geCAqIDQgKyB5ICogNCAqIGljb24ud2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGQxID0gTWF0aC5hYnMoYnVmLmRhdGFbaTFdIC0gaWNvbi5kYXRhW2kyXSkgKyBNYXRoLmFicyhidWYuZGF0YVtpMSArIDFdIC0gaWNvbi5kYXRhW2kyICsgMV0pICsgTWF0aC5hYnMoYnVmLmRhdGFbaTEgKyAyXSAtIGljb24uZGF0YVtpMiArIDJdKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZDIgPSBNYXRoLmFicyhidWYuZGF0YVtpMV0gLSBpY29uLmRhdGFbaTJdICogYSkgKyBNYXRoLmFicyhidWYuZGF0YVtpMSArIDFdIC0gaWNvbi5kYXRhW2kyICsgMV0gKiBhKSArIE1hdGguYWJzKGJ1Zi5kYXRhW2kxICsgMl0gLSBpY29uLmRhdGFbaTIgKyAyXSAqIGEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkID0gTWF0aC5taW4oZDEsIGQyLCAyMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2NvcmUgKz0gZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoc2NvcmUgPCBiZXN0c2NvcmUpIHtcclxuICAgICAgICAgICAgICAgIGJlc3RzY29yZSA9IHNjb3JlO1xyXG4gICAgICAgICAgICAgICAgYmVzdCA9IGFiaWw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGJlc3Q7XHJcbiAgICB9XHJcbn1cclxuQWJpbGl0eVN0YXRlLmljb253aWR0aCA9IDMwICsgMTsgLy90aGUgY29vbGRvd24gdGV4dCBvdmVybGF5cyB0aGUgYm94IGJ5IG9uZSBwaXhlbFxyXG5BYmlsaXR5U3RhdGUuaWNvbmhlaWdodCA9IDMwICsgMTsgLy9hbHNvIG5lZWQgb25lIGV4dHJhIHB4IGhlcmUgdG8gcmVhZCB0aGUgaG90a2V5XHJcbkFiaWxpdHlTdGF0ZS5vdmVybGF5U3RhdGUgPSBmYWxzZTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/index.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/alt1api.ts":
/*!*********************************************!*\
  !*** ../node_modules/@alt1/base/alt1api.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYmFzZS9hbHQxYXBpLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/alt1api.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/declarations.ts":
/*!**************************************************!*\
  !*** ../node_modules/@alt1/base/declarations.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYmFzZS9kZWNsYXJhdGlvbnMudHMuanMiLCJzb3VyY2VzQ29udGVudCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/declarations.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/imagedata-extensions.ts":
/*!**********************************************************!*\
  !*** ../node_modules/@alt1/base/imagedata-extensions.ts ***!
  \**********************************************************/
/*! exports provided: ImageData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageData\", function() { return ImageData; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _nodeimports__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodeimports */ \"../node_modules/@alt1/base/nodeimports.ts\");\n\r\n\r\n//export this so node.js can also use it\r\nvar ImageData;\r\n// //TODO revamp this madness a bit?\r\n// (function () {\r\n// \tvar globalvar = (typeof self != \"undefined\" ? self : (typeof (global as any) != \"undefined\" ? (global as any) : null)) as any;\r\n// \t//use the node-canvas version when on node\r\n// \tif (typeof globalvar.ImageData == \"undefined\") {\r\n// \t\tlet nodecnv = requireNodeCanvas();\r\n// \t\tglobalvar.ImageData = nodecnv.ImageData;\r\n// \t}\r\n// \tvar fill = typeof globalvar.ImageData == \"undefined\";\r\n// \t//should never be reach anymore\r\n// \tvar constr = function (this: any) {\r\n// \t\tvar i = 0;\r\n// \t\tvar data = (arguments[i] instanceof Uint8ClampedArray ? arguments[i++] : null);\r\n// \t\tvar width = arguments[i++];\r\n// \t\tvar height = arguments[i++];\r\n// \t\tif (fill) {\r\n// \t\t\tif (!data) { data = new Uint8ClampedArray(width * height * 4); }\r\n// \t\t\tthis.width = width;\r\n// \t\t\tthis.height = height;\r\n// \t\t\tthis.data = data;\r\n// \t\t}\r\n// \t\telse if (oldconstr) {\r\n// \t\t\treturn (data ? new oldconstr(data, width, height) : new oldconstr(width, height));\r\n// \t\t} else {\r\n// \t\t\tvar canvas = document.createElement('canvas');\r\n// \t\t\tcanvas.width = width;\r\n// \t\t\tcanvas.height = height;\r\n// \t\t\tvar ctx = canvas.getContext(\"2d\")!;\r\n// \t\t\tvar imageData = ctx.createImageData(width, height);\r\n// \t\t\tif (data) { imageData.data.set(data); }\r\n// \t\t\treturn imageData;\r\n// \t\t}\r\n// \t}\r\n// \tvar oldconstr = globalvar.ImageData;\r\n// \tif (typeof document != \"undefined\") {\r\n// \t\ttry {\r\n// \t\t\tnew oldconstr(1, 1);\r\n// \t\t} catch (e) {\r\n// \t\t\t//direct constructor call not allowed in ie\r\n// \t\t\toldconstr = null;\r\n// \t\t}\r\n// \t}\r\n// \tif (!fill) { constr.prototype = globalvar.ImageData.prototype; }\r\n// \tglobalvar.ImageData = constr;\r\n// \tImageData = constr as any;\r\n// })();\r\n(function () {\r\n    var globalvar = (typeof self != \"undefined\" ? self : (typeof global != \"undefined\" ? global : null));\r\n    var filltype = typeof globalvar.ImageData == \"undefined\" || typeof globalvar.document == \"undefined\";\r\n    var fillconstr = filltype;\r\n    if (!filltype) {\r\n        var oldconstr = globalvar.ImageData;\r\n        try {\r\n            let data = new Uint8ClampedArray(4);\r\n            data[0] = 1;\r\n            let a = new globalvar.ImageData(data, 1, 1);\r\n            fillconstr = a.data[0] != 1;\r\n        }\r\n        catch (e) {\r\n            fillconstr = true;\r\n        }\r\n    }\r\n    if (fillconstr) {\r\n        var constr = function () {\r\n            var i = 0;\r\n            var data = (arguments[i] instanceof Uint8ClampedArray ? arguments[i++] : null);\r\n            var width = arguments[i++];\r\n            var height = arguments[i++];\r\n            if (filltype) {\r\n                if (!data) {\r\n                    data = new Uint8ClampedArray(width * height * 4);\r\n                }\r\n                this.width = width;\r\n                this.height = height;\r\n                this.data = data;\r\n            }\r\n            else if (fillconstr) {\r\n                //WARNING This branch of code does not use the same pixel data backing store\r\n                //(problem with wasm, however all wasm browser have a native constructor (unless asm.js is used))\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var ctx = canvas.getContext(\"2d\");\r\n                var imageData = ctx.createImageData(width, height);\r\n                if (data) {\r\n                    imageData.data.set(data);\r\n                }\r\n                return imageData;\r\n            }\r\n            // else {\r\n            // \t//oh no...\r\n            // \t//we need this monstrocity in order to call the native constructor with variable number of args\r\n            // \t//when es5 transpile is enable (that strips the spread operator)\r\n            // \treturn new (Function.prototype.bind.apply(oldconstr, [null,...arguments]));\r\n            // }\r\n        };\r\n        if (!filltype) {\r\n            constr.prototype = globalvar.ImageData.prototype;\r\n        }\r\n        globalvar.ImageData = constr;\r\n        ImageData = constr;\r\n    }\r\n    else {\r\n        ImageData = globalvar.ImageData;\r\n    }\r\n})();\r\n//Recast into a drawable imagedata class on all platforms, into a normal browser ImageData on browsers or a node-canvas imagedata on nodejs\r\nImageData.prototype.toDrawableData = function () {\r\n    if (typeof document == \"undefined\") {\r\n        let nodecnv = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_1__[\"requireNodeCanvas\"])();\r\n        return new nodecnv.ImageData(this.data, this.width, this.height);\r\n    }\r\n    else {\r\n        return this;\r\n    }\r\n};\r\nImageData.prototype.putImageData = function (buf, cx, cy) {\r\n    for (var dx = 0; dx < buf.width; dx++) {\r\n        for (var dy = 0; dy < buf.height; dy++) {\r\n            var i1 = (dx + cx) * 4 + (dy + cy) * 4 * this.width;\r\n            var i2 = dx * 4 + dy * 4 * buf.width;\r\n            this.data[i1] = buf.data[i2];\r\n            this.data[i1 + 1] = buf.data[i2 + 1];\r\n            this.data[i1 + 2] = buf.data[i2 + 2];\r\n            this.data[i1 + 3] = buf.data[i2 + 3];\r\n        }\r\n    }\r\n};\r\nImageData.prototype.pixelOffset = function (x, y) {\r\n    return x * 4 + y * this.width * 4;\r\n};\r\n//creates a hash of a portion of the buffer used to check for changes\r\nImageData.prototype.getPixelHash = function (rect) {\r\n    if (!rect) {\r\n        rect = new _index__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](0, 0, this.width, this.height);\r\n    }\r\n    var hash = 0;\r\n    for (var x = rect.x; x < rect.x + rect.width; x++) {\r\n        for (var y = rect.y; y < rect.y + rect.height; y++) {\r\n            var i = x * 4 + y * 4 * this.width;\r\n            hash = (((hash << 5) - hash) + this.data[i]) | 0;\r\n            hash = (((hash << 5) - hash) + this.data[i + 1]) | 0;\r\n            hash = (((hash << 5) - hash) + this.data[i + 2]) | 0;\r\n            hash = (((hash << 5) - hash) + this.data[i + 3]) | 0;\r\n        }\r\n    }\r\n    return hash;\r\n};\r\nImageData.prototype.clone = function (rect) {\r\n    return this.toImage(rect).getContext(\"2d\").getImageData(0, 0, rect.width, rect.height);\r\n};\r\nImageData.prototype.show = function (x = 5, y = 5, zoom = 1) {\r\n    if (typeof document == \"undefined\") {\r\n        console.error(\"need a document to show an imagedata object\");\r\n        return;\r\n    }\r\n    var imgs = document.getElementsByClassName(\"debugimage\");\r\n    while (imgs.length > ImageData.prototype.show.maxImages) {\r\n        imgs[0].remove();\r\n    }\r\n    var el = this.toImage();\r\n    el.classList.add(\"debugimage\");\r\n    el.style.position = \"absolute\";\r\n    el.style.zIndex = \"1000\";\r\n    el.style.left = x / zoom + \"px\";\r\n    el.style.top = y / zoom + \"px\";\r\n    el.style.background = \"purple\";\r\n    el.style.cursor = \"pointer\";\r\n    el.style.imageRendering = \"pixelated\";\r\n    el.style.outline = \"1px solid #0f0\";\r\n    el.style.width = (this.width == 1 ? 100 : this.width) + \"px\";\r\n    el.style.height = (this.height == 1 ? 100 : this.height) + \"px\";\r\n    el.style.zoom = \"\" + zoom;\r\n    el.onclick = function () { el.remove(); };\r\n    document.body.appendChild(el);\r\n    return el;\r\n};\r\nImageData.prototype.show.maxImages = 10;\r\nImageData.prototype.toImage = function (rect) {\r\n    if (!rect) {\r\n        rect = new _index__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](0, 0, this.width, this.height);\r\n    }\r\n    if (typeof document != \"undefined\") {\r\n        var el = document.createElement(\"canvas\");\r\n        el.width = rect.width;\r\n        el.height = rect.height;\r\n    }\r\n    else {\r\n        var nodecnv = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_1__[\"requireNodeCanvas\"])();\r\n        var el = nodecnv.createCanvas(rect.width, rect.height);\r\n    }\r\n    var ctx = el.getContext(\"2d\");\r\n    ctx.putImageData(this, -rect.x, -rect.y);\r\n    return el;\r\n};\r\nImageData.prototype.getPixel = function (x, y) {\r\n    var i = x * 4 + y * 4 * this.width;\r\n    return [this.data[i], this.data[i + 1], this.data[i + 2], this.data[i + 3]];\r\n};\r\nImageData.prototype.getPixelInt = function (x, y) {\r\n    var i = x * 4 + y * 4 * this.width;\r\n    return (this.data[i + 3] << 24) + (this.data[i + 0] << 16) + (this.data[i + 1] << 8) + (this.data[i + 2] << 0);\r\n};\r\nImageData.prototype.getColorDifference = function (x, y, r, g, b, a = 255) {\r\n    var i = x * 4 + y * 4 * this.width;\r\n    return Math.abs(this.data[i] - r) + Math.abs(this.data[i + 1] - g) + Math.abs(this.data[i + 2] - b) * a / 255;\r\n};\r\nImageData.prototype.setPixel = function (x, y, ...color) {\r\n    var r, g, b, a;\r\n    var [r, g, b, a] = (Array.isArray(color[0]) ? color[0] : color);\r\n    var i = x * 4 + y * 4 * this.width;\r\n    this.data[i] = r;\r\n    this.data[i + 1] = g;\r\n    this.data[i + 2] = b;\r\n    this.data[i + 3] = a == undefined ? 255 : a;\r\n};\r\nImageData.prototype.setPixelInt = function (x, y, color) {\r\n    var i = x * 4 + y * 4 * this.width;\r\n    this.data[i] = (color >> 24) & 0xff;\r\n    this.data[i + 1] = (color >> 16) & 0xff;\r\n    this.data[i + 2] = (color >> 8) & 0xff;\r\n    this.data[i + 3] = (color >> 0) & 0xff;\r\n};\r\nImageData.prototype.toFileBytes = function (format, quality) {\r\n    if (typeof HTMLCanvasElement != \"undefined\") {\r\n        return new Promise(d => this.toImage().toBlob(b => {\r\n            var r = new FileReader();\r\n            r.readAsArrayBuffer(b);\r\n            r.onload = () => d(r.result);\r\n        }, format, quality));\r\n    }\r\n    else {\r\n        var sharp = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_1__[\"requireSharp\"])();\r\n        return new Promise(d => {\r\n            var img = sharp(Buffer.from(this.data.buffer), { raw: { width: this.width, height: this.height, channels: 4 } });\r\n            if (format == \"image/png\") {\r\n                img.png();\r\n            }\r\n            else if (format == \"image/webp\") {\r\n                var opts = { quality: 80 };\r\n                if (typeof quality == \"number\") {\r\n                    opts.quality = quality * 100;\r\n                }\r\n                img.webp(opts);\r\n            }\r\n            else {\r\n                throw new Error(\"unknown image format: \" + format);\r\n            }\r\n            img.toBuffer({ resolveWithObject: false }).then(r => d(r.buffer));\r\n        });\r\n    }\r\n};\r\n//use the implementation using the sharp package in order to support webp\r\n/*\r\nImageData.prototype.toFileBytes = function (this: ImageData, format: \"image/png\" | \"image/webp\", quality?: any) {\r\n    return new Promise<ArrayBuffer>((done, error) => {\r\n        var cnv = this.toImage();\r\n        if (typeof cnv.toBlob != \"undefined\") {\r\n            cnv.toBlob(b => {\r\n                var r = new FileReader();\r\n                r.readAsArrayBuffer(b!);\r\n                r.onload = () => done(r.result as ArrayBuffer);\r\n                r.onerror = error;\r\n            }, format, quality);\r\n        } else {\r\n            var nodecnv = requireNodeCanvas();\r\n            var ncnv = cnv as any as InstanceType<typeof nodecnv.Canvas>;\r\n            //TODO webp not supported right now\r\n            if (format != \"image/png\") { throw new Error(\"only png compression available on node right now\"); }\r\n            let stream = ncnv.createPNGStream();\r\n            var chunks: Buffer[] = [];\r\n            stream.once(\"error\", error);\r\n            stream.once(\"end\", () => done(Buffer.concat(chunks)))\r\n            stream.on(\"data\", c => chunks.push(c as Buffer));\r\n        }\r\n    });\r\n}\r\n*/\r\nImageData.prototype.toPngBase64 = function () {\r\n    if (typeof HTMLCanvasElement != \"undefined\") {\r\n        var str = this.toImage().toDataURL(\"image/png\");\r\n        return str.slice(str.indexOf(\",\") + 1);\r\n    }\r\n    else {\r\n        throw new Error(\"synchronous image conversion no supported in nodejs, try using ImageData.prototype.toFileBytes\");\r\n    }\r\n};\r\nImageData.prototype.pixelCompare = function (buf, x = 0, y = 0, max) {\r\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].simpleCompare(this, buf, x, y, max);\r\n};\r\nImageData.prototype.copyTo = function (target, sourcex, sourcey, width, height, targetx, targety) {\r\n    //convince v8 that these are 31bit uints\r\n    const targetwidth = width | 0;\r\n    const thiswidth = this.width | 0;\r\n    const fastwidth = Math.floor(width / 4) * 4;\r\n    const thisdata = new Int32Array(this.data.buffer, this.data.byteOffset, this.data.byteLength / 4);\r\n    const targetdata = new Int32Array(target.data.buffer, target.data.byteOffset, target.data.byteLength / 4);\r\n    for (let cy = 0; cy < height; cy++) {\r\n        let cx = 0;\r\n        let it = (cx + targetx) + (cy + targety) * targetwidth;\r\n        let is = (cx + sourcex) + (cy + sourcey) * thiswidth;\r\n        //copy 4 pixels per iter (xmm)\r\n        for (; cx < fastwidth; cx += 4) {\r\n            targetdata[it] = thisdata[is];\r\n            targetdata[it + 1] = thisdata[is + 1];\r\n            targetdata[it + 2] = thisdata[is + 2];\r\n            targetdata[it + 3] = thisdata[is + 3];\r\n            it += 4;\r\n            is += 4;\r\n        }\r\n        //copy remainder per pixel\r\n        for (; cx < targetwidth; cx++) {\r\n            targetdata[it] = thisdata[is];\r\n            it += 1;\r\n            is += 1;\r\n        }\r\n    }\r\n};\r\nif (typeof HTMLImageElement != \"undefined\") {\r\n    HTMLImageElement.prototype.toBuffer = function (x = 0, y = 0, w = this.width, h = this.height) {\r\n        var cnv = document.createElement(\"canvas\");\r\n        cnv.width = w;\r\n        cnv.height = h;\r\n        var ctx = cnv.getContext(\"2d\");\r\n        ctx.drawImage(this, -x, -y);\r\n        return ctx.getImageData(0, 0, w, h);\r\n    };\r\n    HTMLImageElement.prototype.toCanvas = function (x = 0, y = 0, w = this.width, h = this.height) {\r\n        var cnv = document.createElement(\"canvas\");\r\n        cnv.width = w;\r\n        cnv.height = h;\r\n        var ctx = cnv.getContext(\"2d\");\r\n        ctx.drawImage(this, -x, -y);\r\n        return cnv;\r\n    };\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/imagedata-extensions.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/imagedetect.ts":
/*!*************************************************!*\
  !*** ../node_modules/@alt1/base/imagedetect.ts ***!
  \*************************************************/
/*! exports provided: imageDataFromUrl, imageDataFromNodeBuffer, imageDataFromBase64, isPngBuffer, clearPngColorspace, findSubimage, findSubbuffer, simpleCompare, coldif, asyncMap, webpackImages, ImageDataSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageDataFromUrl\", function() { return imageDataFromUrl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageDataFromNodeBuffer\", function() { return imageDataFromNodeBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageDataFromBase64\", function() { return imageDataFromBase64; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPngBuffer\", function() { return isPngBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearPngColorspace\", function() { return clearPngColorspace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSubimage\", function() { return findSubimage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSubbuffer\", function() { return findSubbuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simpleCompare\", function() { return simpleCompare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coldif\", function() { return coldif; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asyncMap\", function() { return asyncMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"webpackImages\", function() { return webpackImages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageDataSet\", function() { return ImageDataSet; });\n/* harmony import */ var _imgref__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imgref */ \"../node_modules/@alt1/base/imgref.ts\");\n/* harmony import */ var _wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapper */ \"../node_modules/@alt1/base/wrapper.ts\");\n/* harmony import */ var _nodeimports__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodeimports */ \"../node_modules/@alt1/base/nodeimports.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! . */ \"../node_modules/@alt1/base/index.ts\");\n\r\n\r\n\r\n\r\n/**\r\n* Downloads an image and returns the ImageData\r\n* Make sure the png image does not have a sRGB chunk or the resulting pixels will differ for different users!!!\r\n* @param url http(s) or data url to the image\r\n*/\r\nasync function imageDataFromUrl(url) {\r\n    if (typeof Image != \"undefined\") {\r\n        var img = new Image();\r\n        img.crossOrigin = \"crossorigin\";\r\n        return await new Promise((done, fail) => {\r\n            img.onload = function () { done(img.toBuffer()); };\r\n            img.onerror = fail;\r\n            img.src = url;\r\n        });\r\n    }\r\n    else {\r\n        var hdr = \"data:image/png;base64,\";\r\n        if (url.startsWith(hdr)) {\r\n            return imageDataFromBase64(url.slice(hdr.length));\r\n        }\r\n        var nodefetch = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_2__[\"requireNodeFetch\"])();\r\n        var res = await nodefetch(url).then(r => r.arrayBuffer());\r\n        return imageDataFromNodeBuffer(new Uint8Array(res));\r\n    }\r\n}\r\n/**\r\n * Only use in modules that you know for sure that browsers will never call this\r\n */\r\nfunction imageDataFromNodeBuffer(buffer) {\r\n    return new Promise((done, error) => {\r\n        clearPngColorspace(buffer);\r\n        var nodecnv = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_2__[\"requireNodeCanvas\"])();\r\n        let img = new nodecnv.Image();\r\n        img.onerror = error;\r\n        img.onload = () => {\r\n            var cnv = nodecnv.createCanvas(img.naturalWidth, img.naturalHeight);\r\n            var ctx = cnv.getContext(\"2d\");\r\n            ctx.drawImage(img, 0, 0);\r\n            var data = ctx.getImageData(0, 0, img.naturalWidth, img.naturalHeight);\r\n            //use our own class\r\n            done(new ImageData(data.data, data.width, data.height));\r\n        };\r\n        img.src = Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n    });\r\n}\r\n/**\r\n* Loads an ImageData object from a base64 encoded png image\r\n* Make sure the png image does not have a sRGB chunk or the resulting pixels will differ for different users!!!\r\n* @param data a base64 encoded png image\r\n*/\r\nasync function imageDataFromBase64(data) {\r\n    if (typeof Image != \"undefined\") {\r\n        return imageDataFromUrl(\"data:image/png;base64,\" + data);\r\n    }\r\n    else {\r\n        var raw = Buffer.from(data, \"base64\");\r\n        var buffer = new Uint8Array(raw.buffer, raw.byteOffset, raw.byteLength);\r\n        return imageDataFromNodeBuffer(buffer);\r\n    }\r\n}\r\n/**\r\n* Checks if a given byte array is a png file (by checking for ?PNG as first 4 bytes)\r\n* @param bytes Raw bytes of the png file\r\n*/\r\nfunction isPngBuffer(bytes) {\r\n    return bytes[0] == 137 && bytes[1] == 80 && bytes[2] == 78 && bytes[3] == 71;\r\n}\r\n/**\r\n* Resets the colorspace data in the png file.\r\n* This makes sure the browser renders the exact colors in the file instead of filtering it in order to obtain the best real life representation of\r\n* what it looked like on the authors screen. (this feature is often broken and not supported)\r\n* For example a round trip printscreen -> open in browser results in different colors than the original\r\n* @param data Raw bytes of the png file\r\n*/\r\nfunction clearPngColorspace(data) {\r\n    if (!isPngBuffer(data)) {\r\n        throw new Error(\"non-png image received\");\r\n    }\r\n    var i = 8;\r\n    while (i < data.length) {\r\n        var length = data[i++] * 0x1000000 + data[i++] * 0x10000 + data[i++] * 0x100 + data[i++];\r\n        var ancillary = !!((data[i] >> 5) & 1);\r\n        var chunkname = String.fromCharCode(data[i], data[i + 1], data[i + 2], data[i + 3]);\r\n        var chunkid = chunkname.toLowerCase();\r\n        if (chunkid != \"trns\" && ancillary) {\r\n            data[i + 0] = \"n\".charCodeAt(0);\r\n            data[i + 1] = \"o\".charCodeAt(0);\r\n            data[i + 2] = \"P\".charCodeAt(0);\r\n            data[i + 3] = \"E\".charCodeAt(0);\r\n            //calculate new chunk checksum\r\n            //http://www.libpng.org/pub/png/spec/1.2/PNG-CRCAppendix.html\r\n            var end = i + 4 + length;\r\n            var crc = 0xffffffff;\r\n            //should be fast enough like this\r\n            var bitcrc = function (bit) {\r\n                for (var k = 0; k < 8; k++) {\r\n                    if (bit & 1) {\r\n                        bit = 0xedb88320 ^ (bit >>> 1);\r\n                    }\r\n                    else {\r\n                        bit = bit >>> 1;\r\n                    }\r\n                }\r\n                return bit;\r\n            };\r\n            for (var a = i; a < end; a++) {\r\n                if (a >= i + 4) {\r\n                    data[a] = 0;\r\n                }\r\n                var bit = data[a];\r\n                crc = bitcrc((crc ^ bit) & 0xff) ^ (crc >>> 8);\r\n            }\r\n            crc = crc ^ 0xffffffff;\r\n            //new chunk checksum\r\n            data[i + 4 + length + 0] = (crc >> 24) & 0xff;\r\n            data[i + 4 + length + 1] = (crc >> 16) & 0xff;\r\n            data[i + 4 + length + 2] = (crc >> 8) & 0xff;\r\n            data[i + 4 + length + 3] = (crc >> 0) & 0xff;\r\n        }\r\n        if (chunkname == \"IEND\") {\r\n            break;\r\n        }\r\n        i += 4; //type\r\n        i += length; //data\r\n        i += 4; //crc\r\n    }\r\n}\r\n/**\r\n* finds the given needle ImageBuffer in the given haystack ImgRef this function uses the best optimized available\r\n* code depending on the type of the haystack. It will use fast c# searching if the haystack is an ImgRefBind, js searching\r\n* is used otherwise.\r\n* the checklist argument is no longer used and should ignored or null/undefined\r\n* The optional sx,sy,sw,sh arguments indicate a bounding rectangle in which to search the needle. The rectangle should be bigger than the needle\r\n* @returns An array of points where the needle is found. The array is empty if none are found\r\n*/\r\nfunction findSubimage(haystackImgref, needleBuffer, sx = 0, sy = 0, sw = haystackImgref.width, sh = haystackImgref.height) {\r\n    if (!haystackImgref) {\r\n        throw new TypeError();\r\n    }\r\n    if (!needleBuffer) {\r\n        throw new TypeError();\r\n    }\r\n    var max = 30;\r\n    //check if we can do this in alt1\r\n    if (haystackImgref instanceof _imgref__WEBPACK_IMPORTED_MODULE_0__[\"ImgRefBind\"] && _wrapper__WEBPACK_IMPORTED_MODULE_1__[\"hasAlt1\"] && alt1.bindFindSubImg) {\r\n        var needlestr = _wrapper__WEBPACK_IMPORTED_MODULE_1__[\"encodeImageString\"](needleBuffer);\r\n        var r = alt1.bindFindSubImg(haystackImgref.handle, needlestr, needleBuffer.width, sx, sy, sw, sh);\r\n        if (!r) {\r\n            throw new _wrapper__WEBPACK_IMPORTED_MODULE_1__[\"Alt1Error\"]();\r\n        }\r\n        return JSON.parse(r);\r\n    }\r\n    return findSubbuffer(haystackImgref.read(), needleBuffer, sx, sy, sw, sh);\r\n}\r\n/**\r\n* Uses js to find the given needle ImageBuffer in the given haystack ImageBuffer. It is better to use the alt1.bind- functions in\r\n* combination with a1nxt.findsubimg.\r\n* the optional sx,sy,sw,sh arguments indicate a bounding rectangle in which to search.\r\n* @returns An array of points where the needle is found. The array is empty if none are found\r\n*/\r\nfunction findSubbuffer(haystack, needle, sx = 0, sy = 0, sw = haystack.width, sh = haystack.height) {\r\n    var r = [];\r\n    var maxdif = 30;\r\n    var maxresults = 50;\r\n    var needlestride = needle.width * 4;\r\n    var heystackstride = haystack.width * 4;\r\n    //built list of non trans pixel to check\r\n    var checkList = [];\r\n    for (var x = 0; x < needle.width; x++) {\r\n        for (var y = 0; y < needle.height; y++) {\r\n            var i = x * 4 + y * needlestride;\r\n            if (needle.data[i + 3] == 255) {\r\n                checkList.push({ x: x, y: y });\r\n            }\r\n            if (checkList.length == 10) {\r\n                break;\r\n            }\r\n        }\r\n        if (checkList.length == 10) {\r\n            break;\r\n        }\r\n    }\r\n    var cw = (sx + sw) - needle.width;\r\n    var ch = (sy + sh) - needle.height;\r\n    var checklength = checkList.length;\r\n    for (var x = sx; x <= cw; x++) {\r\n        outer: for (var y = sy; y <= ch; y++) {\r\n            for (var a = 0; a < checklength; a++) {\r\n                var i1 = (x + checkList[a].x) * 4 + (y + checkList[a].y) * heystackstride;\r\n                var i2 = checkList[a].x * 4 + checkList[a].y * needlestride;\r\n                var d = 0;\r\n                d = d + Math.abs(haystack.data[i1 + 0] - needle.data[i2 + 0]) | 0;\r\n                d = d + Math.abs(haystack.data[i1 + 1] - needle.data[i2 + 1]) | 0;\r\n                d = d + Math.abs(haystack.data[i1 + 2] - needle.data[i2 + 2]) | 0;\r\n                d *= 255 / needle.data[i2 + 3];\r\n                if (d > maxdif) {\r\n                    continue outer;\r\n                }\r\n            }\r\n            if (simpleCompare(haystack, needle, x, y, maxdif) != Infinity) {\r\n                r.push({ x, y });\r\n                if (r.length > maxresults) {\r\n                    return r;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return r;\r\n}\r\n/**\r\n* Compares two images and returns the average color difference per pixel between them\r\n* @param max The max color difference at any point in the image before short circuiting the function and returning Infinity. set to -1 to always continue.\r\n* @returns The average color difference per pixel or Infinity if the difference is more than max at any point in the image\r\n*/\r\nfunction simpleCompare(bigbuf, checkbuf, x, y, max = 30) {\r\n    if (x < 0 || y < 0) {\r\n        throw new RangeError();\r\n    }\r\n    if (x + checkbuf.width > bigbuf.width || y + checkbuf.height > bigbuf.height) {\r\n        throw new RangeError();\r\n    }\r\n    if (max == -1) {\r\n        max = 255 * 4;\r\n    }\r\n    var dif = 0;\r\n    for (var step = 8; step >= 1; step /= 2) {\r\n        for (var cx = 0; cx < checkbuf.width; cx += step) {\r\n            for (var cy = 0; cy < checkbuf.height; cy += step) {\r\n                var i1 = (x + cx) * 4 + (y + cy) * bigbuf.width * 4;\r\n                var i2 = cx * 4 + cy * checkbuf.width * 4;\r\n                var d = 0;\r\n                d = d + Math.abs(bigbuf.data[i1 + 0] - checkbuf.data[i2 + 0]) | 0;\r\n                d = d + Math.abs(bigbuf.data[i1 + 1] - checkbuf.data[i2 + 1]) | 0;\r\n                d = d + Math.abs(bigbuf.data[i1 + 2] - checkbuf.data[i2 + 2]) | 0;\r\n                d *= checkbuf.data[i2 + 3] / 255;\r\n                if (step == 1) {\r\n                    dif += d;\r\n                }\r\n                if (d > max) {\r\n                    return Infinity;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return dif / checkbuf.width / checkbuf.height;\r\n}\r\n/**\r\n* Returns the difference between two colors (scaled to the alpha of the second color)\r\n*/\r\nfunction coldif(r1, g1, b1, r2, g2, b2, a2) {\r\n    return (Math.abs(r1 - r2) + Math.abs(g1 - g2) + Math.abs(b1 - b2)) * a2 / 255; //only applies alpha for 2nd buffer!\r\n}\r\n/**\r\n * Turns map of promises into a map that contains the resolved values after loading.\r\n * @param input\r\n */\r\nfunction asyncMap(input) {\r\n    var raw = {};\r\n    var promises = [];\r\n    for (var a in input) {\r\n        if (input.hasOwnProperty(a)) {\r\n            raw[a] = null;\r\n            promises.push(input[a].then(function (a, i) { raw[a] = i; r[a] = i; }.bind(null, a)));\r\n        }\r\n    }\r\n    var r = {};\r\n    var promise = Promise.all(promises).then(() => { r.loaded = true; return r; });\r\n    Object.defineProperty(r, \"loaded\", { enumerable: false, value: false, writable: true });\r\n    Object.defineProperty(r, \"promise\", { enumerable: false, value: promise });\r\n    Object.defineProperty(r, \"raw\", { enumerable: false, value: raw });\r\n    return Object.assign(r, raw);\r\n}\r\n/**\r\n* Same as asyncMap, but casts the properties to ImageData in typescript\r\n*/\r\nfunction webpackImages(input) {\r\n    return asyncMap(input);\r\n}\r\nclass ImageDataSet {\r\n    constructor() {\r\n        this.buffers = [];\r\n    }\r\n    matchBest(img, x, y, max) {\r\n        let best = null;\r\n        let bestscore = max;\r\n        for (let a = 0; a < this.buffers.length; a++) {\r\n            let score = img.pixelCompare(this.buffers[a], x, y, bestscore);\r\n            if (isFinite(score) && (bestscore == undefined || score < bestscore)) {\r\n                bestscore = score;\r\n                best = a;\r\n            }\r\n        }\r\n        if (best == null) {\r\n            return null;\r\n        }\r\n        return { index: best, score: bestscore };\r\n    }\r\n    static fromFilmStrip(baseimg, width) {\r\n        if ((baseimg.width % width) != 0) {\r\n            throw new Error(\"slice size does not fit in base img\");\r\n        }\r\n        let r = new ImageDataSet();\r\n        for (let x = 0; x < baseimg.width; x += width) {\r\n            r.buffers.push(baseimg.clone(new ___WEBPACK_IMPORTED_MODULE_3__[\"Rect\"](x, 0, width, baseimg.height)));\r\n        }\r\n        return r;\r\n    }\r\n    static fromFilmStripUneven(baseimg, widths) {\r\n        let r = new ImageDataSet();\r\n        let x = 0;\r\n        for (let w of widths) {\r\n            r.buffers.push(baseimg.clone(new ___WEBPACK_IMPORTED_MODULE_3__[\"Rect\"](x, 0, w, baseimg.height)));\r\n            x += w;\r\n            if (x > baseimg.width) {\r\n                throw new Error(\"sampling filmstrip outside bounds\");\r\n            }\r\n        }\r\n        if (x != baseimg.width) {\r\n            throw new Error(\"unconsumed pixels left in film strip imagedata\");\r\n        }\r\n        return r;\r\n    }\r\n    static fromAtlas(baseimg, slices) {\r\n        let r = new ImageDataSet();\r\n        for (let slice of slices) {\r\n            r.buffers.push(baseimg.clone(slice));\r\n        }\r\n        return r;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/imagedetect.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/imgref.ts":
/*!********************************************!*\
  !*** ../node_modules/@alt1/base/imgref.ts ***!
  \********************************************/
/*! exports provided: ImgRef, ImgRefCtx, ImgRefBind, ImgRefData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRef\", function() { return ImgRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRefCtx\", function() { return ImgRefCtx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRefBind\", function() { return ImgRefBind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRefData\", function() { return ImgRefData; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"../node_modules/@alt1/base/index.ts\");\n\r\n/**\r\n * Represents an image that might be in different types of memory\r\n * This is mostly used to represent images still in Alt1 memory that have\r\n * not been transfered to js yet. Various a1lib api's use this type and\r\n * choose the most efficient approach based on the memory type\r\n */\r\nclass ImgRef {\r\n    constructor(x, y, w, h) {\r\n        this.t = \"none\";\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n    read(x = 0, y = 0, w = this.width, h = this.height) {\r\n        throw new Error(\"This imgref (\" + this.t + \") does not support toData\");\r\n    }\r\n    findSubimage(needle, sx = 0, sy = 0, w = this.width, h = this.height) {\r\n        return _index__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].findSubimage(this, needle, sx, sy, w, h);\r\n    }\r\n    toData(x = this.x, y = this.y, w = this.width, h = this.height) {\r\n        return this.read(x - this.x, y - this.y, w, h);\r\n    }\r\n    ;\r\n    containsArea(rect) {\r\n        return this.x <= rect.x && this.y <= rect.y && this.x + this.width >= rect.x + rect.width && this.y + this.height >= rect.y + rect.height;\r\n    }\r\n}\r\n/**\r\n * Represents an image in js render memory (canvas/image tag)\r\n */\r\nclass ImgRefCtx extends ImgRef {\r\n    constructor(img, x = 0, y = 0) {\r\n        if (img instanceof CanvasRenderingContext2D) {\r\n            super(x, y, img.canvas.width, img.canvas.height);\r\n            this.ctx = img;\r\n        }\r\n        else {\r\n            super(x, y, img.width, img.height);\r\n            var cnv = (img instanceof HTMLCanvasElement ? img : img.toCanvas());\r\n            this.ctx = cnv.getContext(\"2d\");\r\n        }\r\n        this.t = \"ctx\";\r\n    }\r\n    read(x = 0, y = 0, w = this.width, h = this.height) {\r\n        return this.ctx.getImageData(x, y, w, h);\r\n    }\r\n}\r\n/**\r\n * Represents in image in Alt1 memory, This type of image can be searched for subimages\r\n * very efficiently and transfering the full image to js can be avoided this way\r\n */\r\nclass ImgRefBind extends ImgRef {\r\n    constructor(handle, x = 0, y = 0, w = 0, h = 0) {\r\n        super(x, y, w, h);\r\n        this.handle = handle;\r\n        this.t = \"bind\";\r\n    }\r\n    read(x = 0, y = 0, w = this.width, h = this.height) {\r\n        return Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"transferImageData\"])(this.handle, x, y, w, h);\r\n    }\r\n}\r\n/**\r\n * Represents an image in js memory\r\n */\r\nclass ImgRefData extends ImgRef {\r\n    constructor(buf, x = 0, y = 0) {\r\n        super(x, y, buf.width, buf.height);\r\n        this.buf = buf;\r\n        this.t = \"data\";\r\n    }\r\n    read(x = 0, y = 0, w = this.width, h = this.height) {\r\n        if (x == 0 && y == 0 && w == this.width && h == this.height) {\r\n            return this.buf;\r\n        }\r\n        var r = new ImageData(w, h);\r\n        for (var b = y; b < y + h; b++) {\r\n            for (var a = x; a < x + w; a++) {\r\n                var i1 = (a - x) * 4 + (b - y) * w * 4;\r\n                var i2 = a * 4 + b * 4 * this.buf.width;\r\n                r.data[i1] = this.buf.data[i2];\r\n                r.data[i1 + 1] = this.buf.data[i2 + 1];\r\n                r.data[i1 + 2] = this.buf.data[i2 + 2];\r\n                r.data[i1 + 3] = this.buf.data[i2 + 3];\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2ltZ3JlZi50cz9mOWY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnRUFBaUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsV0FBVztBQUNsQywyQkFBMkIsV0FBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2ltZ3JlZi50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEltYWdlRGV0ZWN0LCB0cmFuc2ZlckltYWdlRGF0YSB9IGZyb20gXCIuL2luZGV4XCI7XHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIGFuIGltYWdlIHRoYXQgbWlnaHQgYmUgaW4gZGlmZmVyZW50IHR5cGVzIG9mIG1lbW9yeVxyXG4gKiBUaGlzIGlzIG1vc3RseSB1c2VkIHRvIHJlcHJlc2VudCBpbWFnZXMgc3RpbGwgaW4gQWx0MSBtZW1vcnkgdGhhdCBoYXZlXHJcbiAqIG5vdCBiZWVuIHRyYW5zZmVyZWQgdG8ganMgeWV0LiBWYXJpb3VzIGExbGliIGFwaSdzIHVzZSB0aGlzIHR5cGUgYW5kXHJcbiAqIGNob29zZSB0aGUgbW9zdCBlZmZpY2llbnQgYXBwcm9hY2ggYmFzZWQgb24gdGhlIG1lbW9yeSB0eXBlXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSW1nUmVmIHtcclxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHcsIGgpIHtcclxuICAgICAgICB0aGlzLnQgPSBcIm5vbmVcIjtcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHc7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoO1xyXG4gICAgfVxyXG4gICAgcmVhZCh4ID0gMCwgeSA9IDAsIHcgPSB0aGlzLndpZHRoLCBoID0gdGhpcy5oZWlnaHQpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIGltZ3JlZiAoXCIgKyB0aGlzLnQgKyBcIikgZG9lcyBub3Qgc3VwcG9ydCB0b0RhdGFcIik7XHJcbiAgICB9XHJcbiAgICBmaW5kU3ViaW1hZ2UobmVlZGxlLCBzeCA9IDAsIHN5ID0gMCwgdyA9IHRoaXMud2lkdGgsIGggPSB0aGlzLmhlaWdodCkge1xyXG4gICAgICAgIHJldHVybiBJbWFnZURldGVjdC5maW5kU3ViaW1hZ2UodGhpcywgbmVlZGxlLCBzeCwgc3ksIHcsIGgpO1xyXG4gICAgfVxyXG4gICAgdG9EYXRhKHggPSB0aGlzLngsIHkgPSB0aGlzLnksIHcgPSB0aGlzLndpZHRoLCBoID0gdGhpcy5oZWlnaHQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZWFkKHggLSB0aGlzLngsIHkgLSB0aGlzLnksIHcsIGgpO1xyXG4gICAgfVxyXG4gICAgO1xyXG4gICAgY29udGFpbnNBcmVhKHJlY3QpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy54IDw9IHJlY3QueCAmJiB0aGlzLnkgPD0gcmVjdC55ICYmIHRoaXMueCArIHRoaXMud2lkdGggPj0gcmVjdC54ICsgcmVjdC53aWR0aCAmJiB0aGlzLnkgKyB0aGlzLmhlaWdodCA+PSByZWN0LnkgKyByZWN0LmhlaWdodDtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogUmVwcmVzZW50cyBhbiBpbWFnZSBpbiBqcyByZW5kZXIgbWVtb3J5IChjYW52YXMvaW1hZ2UgdGFnKVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEltZ1JlZkN0eCBleHRlbmRzIEltZ1JlZiB7XHJcbiAgICBjb25zdHJ1Y3RvcihpbWcsIHggPSAwLCB5ID0gMCkge1xyXG4gICAgICAgIGlmIChpbWcgaW5zdGFuY2VvZiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQpIHtcclxuICAgICAgICAgICAgc3VwZXIoeCwgeSwgaW1nLmNhbnZhcy53aWR0aCwgaW1nLmNhbnZhcy5oZWlnaHQpO1xyXG4gICAgICAgICAgICB0aGlzLmN0eCA9IGltZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHN1cGVyKHgsIHksIGltZy53aWR0aCwgaW1nLmhlaWdodCk7XHJcbiAgICAgICAgICAgIHZhciBjbnYgPSAoaW1nIGluc3RhbmNlb2YgSFRNTENhbnZhc0VsZW1lbnQgPyBpbWcgOiBpbWcudG9DYW52YXMoKSk7XHJcbiAgICAgICAgICAgIHRoaXMuY3R4ID0gY252LmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy50ID0gXCJjdHhcIjtcclxuICAgIH1cclxuICAgIHJlYWQoeCA9IDAsIHkgPSAwLCB3ID0gdGhpcy53aWR0aCwgaCA9IHRoaXMuaGVpZ2h0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3R4LmdldEltYWdlRGF0YSh4LCB5LCB3LCBoKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogUmVwcmVzZW50cyBpbiBpbWFnZSBpbiBBbHQxIG1lbW9yeSwgVGhpcyB0eXBlIG9mIGltYWdlIGNhbiBiZSBzZWFyY2hlZCBmb3Igc3ViaW1hZ2VzXHJcbiAqIHZlcnkgZWZmaWNpZW50bHkgYW5kIHRyYW5zZmVyaW5nIHRoZSBmdWxsIGltYWdlIHRvIGpzIGNhbiBiZSBhdm9pZGVkIHRoaXMgd2F5XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSW1nUmVmQmluZCBleHRlbmRzIEltZ1JlZiB7XHJcbiAgICBjb25zdHJ1Y3RvcihoYW5kbGUsIHggPSAwLCB5ID0gMCwgdyA9IDAsIGggPSAwKSB7XHJcbiAgICAgICAgc3VwZXIoeCwgeSwgdywgaCk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGUgPSBoYW5kbGU7XHJcbiAgICAgICAgdGhpcy50ID0gXCJiaW5kXCI7XHJcbiAgICB9XHJcbiAgICByZWFkKHggPSAwLCB5ID0gMCwgdyA9IHRoaXMud2lkdGgsIGggPSB0aGlzLmhlaWdodCkge1xyXG4gICAgICAgIHJldHVybiB0cmFuc2ZlckltYWdlRGF0YSh0aGlzLmhhbmRsZSwgeCwgeSwgdywgaCk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgYW4gaW1hZ2UgaW4ganMgbWVtb3J5XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSW1nUmVmRGF0YSBleHRlbmRzIEltZ1JlZiB7XHJcbiAgICBjb25zdHJ1Y3RvcihidWYsIHggPSAwLCB5ID0gMCkge1xyXG4gICAgICAgIHN1cGVyKHgsIHksIGJ1Zi53aWR0aCwgYnVmLmhlaWdodCk7XHJcbiAgICAgICAgdGhpcy5idWYgPSBidWY7XHJcbiAgICAgICAgdGhpcy50ID0gXCJkYXRhXCI7XHJcbiAgICB9XHJcbiAgICByZWFkKHggPSAwLCB5ID0gMCwgdyA9IHRoaXMud2lkdGgsIGggPSB0aGlzLmhlaWdodCkge1xyXG4gICAgICAgIGlmICh4ID09IDAgJiYgeSA9PSAwICYmIHcgPT0gdGhpcy53aWR0aCAmJiBoID09IHRoaXMuaGVpZ2h0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1ZjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHIgPSBuZXcgSW1hZ2VEYXRhKHcsIGgpO1xyXG4gICAgICAgIGZvciAodmFyIGIgPSB5OyBiIDwgeSArIGg7IGIrKykge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBhID0geDsgYSA8IHggKyB3OyBhKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBpMSA9IChhIC0geCkgKiA0ICsgKGIgLSB5KSAqIHcgKiA0O1xyXG4gICAgICAgICAgICAgICAgdmFyIGkyID0gYSAqIDQgKyBiICogNCAqIHRoaXMuYnVmLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgci5kYXRhW2kxXSA9IHRoaXMuYnVmLmRhdGFbaTJdO1xyXG4gICAgICAgICAgICAgICAgci5kYXRhW2kxICsgMV0gPSB0aGlzLmJ1Zi5kYXRhW2kyICsgMV07XHJcbiAgICAgICAgICAgICAgICByLmRhdGFbaTEgKyAyXSA9IHRoaXMuYnVmLmRhdGFbaTIgKyAyXTtcclxuICAgICAgICAgICAgICAgIHIuZGF0YVtpMSArIDNdID0gdGhpcy5idWYuZGF0YVtpMiArIDNdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/imgref.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/index.ts":
/*!*******************************************!*\
  !*** ../node_modules/@alt1/base/index.ts ***!
  \*******************************************/
/*! exports provided: PasteInput, ImageDetect, Rect, ImageData, ImgRef, ImgRefCtx, ImgRefBind, ImgRefData, NoAlt1Error, Alt1Error, newestversion, hasAlt1, skinName, openbrowser, requireAlt1, getdisplaybounds, capture, captureHold, captureHoldScreen, captureHoldFullRs, transferImageData, decodeImageString, encodeImageString, mixColor, unmixColor, identifyApp, hasAlt1Version, getMousePosition, addResizeElement, on, removeListener, once, ImageStreamReader, captureAsync, captureMultiAsync, captureStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _declarations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./declarations */ \"../node_modules/@alt1/base/declarations.ts\");\n/* harmony import */ var _declarations__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_declarations__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _imagedetect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"ImageDetect\", function() { return _imagedetect__WEBPACK_IMPORTED_MODULE_1__; });\n/* harmony import */ var _pasteinput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pasteinput */ \"../node_modules/@alt1/base/pasteinput.ts\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"PasteInput\", function() { return _pasteinput__WEBPACK_IMPORTED_MODULE_2__; });\n/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rect */ \"../node_modules/@alt1/base/rect.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Rect\", function() { return _rect__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _imagedata_extensions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./imagedata-extensions */ \"../node_modules/@alt1/base/imagedata-extensions.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImageData\", function() { return _imagedata_extensions__WEBPACK_IMPORTED_MODULE_4__[\"ImageData\"]; });\n\n/* harmony import */ var _imgref__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./imgref */ \"../node_modules/@alt1/base/imgref.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRef\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRef\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRefCtx\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRefCtx\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRefBind\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRefBind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRefData\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRefData\"]; });\n\n/* harmony import */ var _wrapper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./wrapper */ \"../node_modules/@alt1/base/wrapper.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NoAlt1Error\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"NoAlt1Error\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Alt1Error\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"Alt1Error\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"newestversion\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"newestversion\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"hasAlt1\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"skinName\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"skinName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"openbrowser\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"openbrowser\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"requireAlt1\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"requireAlt1\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getdisplaybounds\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"getdisplaybounds\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"capture\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"capture\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureHold\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureHold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureHoldScreen\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureHoldScreen\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureHoldFullRs\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureHoldFullRs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"transferImageData\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"transferImageData\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"decodeImageString\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"decodeImageString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"encodeImageString\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"encodeImageString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mixColor\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"mixColor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unmixColor\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"unmixColor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"identifyApp\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"identifyApp\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1Version\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"hasAlt1Version\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getMousePosition\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"getMousePosition\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addResizeElement\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"addResizeElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"on\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"on\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeListener\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"removeListener\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"once\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImageStreamReader\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"ImageStreamReader\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureAsync\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureAsync\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureMultiAsync\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureMultiAsync\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureStream\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureStream\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // syntax not yet supported in webpack\r\n// // this should improve tree shaking\r\n// import \"./declarations\";\r\n// export * as ImageDetect from \"./imagedetect\";\r\n// export * as PasteInput from \"./pasteinput\";\r\n// export { default as Rect, RectLike, PointLike } from \"./rect\";\r\n// export { ImageData } from \"./imagedata-extensions\";\r\n// export * from \"./imgref\";\r\n// export * from \"./wrapper\";\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2luZGV4LnRzPzU5Y2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBd0I7QUFDcUI7QUFDRjtBQUNqQjtBQUN5QjtBQUNDO0FBQzNCO0FBQ0M7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUNBQXVDO0FBQ2xELFdBQVcsWUFBWTtBQUN2QjtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9kZWNsYXJhdGlvbnNcIjtcclxuaW1wb3J0ICogYXMgSW1hZ2VEZXRlY3QgZnJvbSBcIi4vaW1hZ2VkZXRlY3RcIjtcclxuaW1wb3J0ICogYXMgUGFzdGVJbnB1dCBmcm9tIFwiLi9wYXN0ZWlucHV0XCI7XHJcbmltcG9ydCBSZWN0IGZyb20gXCIuL3JlY3RcIjtcclxuaW1wb3J0IHsgSW1hZ2VEYXRhIH0gZnJvbSBcIi4vaW1hZ2VkYXRhLWV4dGVuc2lvbnNcIjtcclxuZXhwb3J0IHsgUGFzdGVJbnB1dCwgSW1hZ2VEZXRlY3QsIFJlY3QsIEltYWdlRGF0YSB9O1xyXG5leHBvcnQgKiBmcm9tIFwiLi9pbWdyZWZcIjtcclxuZXhwb3J0ICogZnJvbSBcIi4vd3JhcHBlclwiO1xyXG4vLyAvLyBzeW50YXggbm90IHlldCBzdXBwb3J0ZWQgaW4gd2VicGFja1xyXG4vLyAvLyB0aGlzIHNob3VsZCBpbXByb3ZlIHRyZWUgc2hha2luZ1xyXG4vLyBpbXBvcnQgXCIuL2RlY2xhcmF0aW9uc1wiO1xyXG4vLyBleHBvcnQgKiBhcyBJbWFnZURldGVjdCBmcm9tIFwiLi9pbWFnZWRldGVjdFwiO1xyXG4vLyBleHBvcnQgKiBhcyBQYXN0ZUlucHV0IGZyb20gXCIuL3Bhc3RlaW5wdXRcIjtcclxuLy8gZXhwb3J0IHsgZGVmYXVsdCBhcyBSZWN0LCBSZWN0TGlrZSwgUG9pbnRMaWtlIH0gZnJvbSBcIi4vcmVjdFwiO1xyXG4vLyBleHBvcnQgeyBJbWFnZURhdGEgfSBmcm9tIFwiLi9pbWFnZWRhdGEtZXh0ZW5zaW9uc1wiO1xyXG4vLyBleHBvcnQgKiBmcm9tIFwiLi9pbWdyZWZcIjtcclxuLy8gZXhwb3J0ICogZnJvbSBcIi4vd3JhcHBlclwiO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/index.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/nodeimports.ts":
/*!*************************************************!*\
  !*** ../node_modules/@alt1/base/nodeimports.ts ***!
  \*************************************************/
/*! exports provided: requireNodeFetch, requireNodeCanvas, requireSharp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireNodeFetch\", function() { return requireNodeFetch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireNodeCanvas\", function() { return requireNodeCanvas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireSharp\", function() { return requireSharp; });\n//keep the nastyness in one file\r\n//TODO this used to be nastier, can probly inline it again\r\n//commented out type info as that breaks webpack with optional dependencies\r\nfunction requireNodeFetch() {\r\n    if (typeof require != \"undefined\") {\r\n        return require(\"node-fetch\");\r\n    }\r\n    throw new Error(\"couldn't find built-in 'fetch' or the module 'node-fetch'\");\r\n}\r\nfunction requireNodeCanvas() {\r\n    if (typeof require != \"undefined\") {\r\n        try {\r\n            requireSharp();\r\n        }\r\n        catch (e) { }\r\n        return require(\"canvas\"); // as typeof import(\"canvas\");\r\n    }\r\n    throw new Error(\"couldn't find built-in canvas or the module 'canvas'\");\r\n}\r\nfunction requireSharp() {\r\n    if (typeof require != \"undefined\") {\r\n        return require(\"sharp\"); // as typeof import(\"sharp\");\r\n    }\r\n    throw new Error(\"coulnd't find build-in image compression methods or the module 'sharp'\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL25vZGVpbXBvcnRzLnRzPzM3NTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsT0FBdUI7QUFDdEMsZUFBZSxPQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsT0FBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLGVBQWUsT0FBdUIsV0FBVztBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsT0FBdUI7QUFDdEMsZUFBZSxPQUF1QixVQUFVO0FBQ2hEO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYmFzZS9ub2RlaW1wb3J0cy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8va2VlcCB0aGUgbmFzdHluZXNzIGluIG9uZSBmaWxlXHJcbi8vVE9ETyB0aGlzIHVzZWQgdG8gYmUgbmFzdGllciwgY2FuIHByb2JseSBpbmxpbmUgaXQgYWdhaW5cclxuLy9jb21tZW50ZWQgb3V0IHR5cGUgaW5mbyBhcyB0aGF0IGJyZWFrcyB3ZWJwYWNrIHdpdGggb3B0aW9uYWwgZGVwZW5kZW5jaWVzXHJcbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlTm9kZUZldGNoKCkge1xyXG4gICAgaWYgKHR5cGVvZiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyAhPSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fbm9uX3dlYnBhY2tfcmVxdWlyZV9fKFwibm9kZS1mZXRjaFwiKTtcclxuICAgIH1cclxuICAgIHRocm93IG5ldyBFcnJvcihcImNvdWxkbid0IGZpbmQgYnVpbHQtaW4gJ2ZldGNoJyBvciB0aGUgbW9kdWxlICdub2RlLWZldGNoJ1wiKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcmVxdWlyZU5vZGVDYW52YXMoKSB7XHJcbiAgICBpZiAodHlwZW9mIF9fbm9uX3dlYnBhY2tfcmVxdWlyZV9fICE9IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICByZXF1aXJlU2hhcnAoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxyXG4gICAgICAgIHJldHVybiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyhcImNhbnZhc1wiKTsgLy8gYXMgdHlwZW9mIGltcG9ydChcImNhbnZhc1wiKTtcclxuICAgIH1cclxuICAgIHRocm93IG5ldyBFcnJvcihcImNvdWxkbid0IGZpbmQgYnVpbHQtaW4gY2FudmFzIG9yIHRoZSBtb2R1bGUgJ2NhbnZhcydcIik7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVTaGFycCgpIHtcclxuICAgIGlmICh0eXBlb2YgX19ub25fd2VicGFja19yZXF1aXJlX18gIT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgIHJldHVybiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyhcInNoYXJwXCIpOyAvLyBhcyB0eXBlb2YgaW1wb3J0KFwic2hhcnBcIik7XHJcbiAgICB9XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb3VsbmQndCBmaW5kIGJ1aWxkLWluIGltYWdlIGNvbXByZXNzaW9uIG1ldGhvZHMgb3IgdGhlIG1vZHVsZSAnc2hhcnAnXCIpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/nodeimports.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/pasteinput.ts":
/*!************************************************!*\
  !*** ../node_modules/@alt1/base/pasteinput.ts ***!
  \************************************************/
/*! exports provided: lastref, listen, unlisten, triggerPaste, startDragNDrop, start, fileDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastref\", function() { return lastref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listen\", function() { return listen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unlisten\", function() { return unlisten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerPaste\", function() { return triggerPaste; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startDragNDrop\", function() { return startDragNDrop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"start\", function() { return start; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fileDialog\", function() { return fileDialog; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _imagedetect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n\r\n\r\nvar listeners = [];\r\nvar started = false;\r\nvar dndStarted = false;\r\nvar pasting = false;\r\nvar lastref = null;\r\nfunction listen(func, errorfunc, dragndrop) {\r\n    listeners.push({ cb: func, error: errorfunc });\r\n    if (!started) {\r\n        start();\r\n    }\r\n    if (dragndrop && !dndStarted) {\r\n        startDragNDrop();\r\n    }\r\n}\r\nfunction unlisten(func) {\r\n    let i = listeners.findIndex(c => c.cb == func);\r\n    if (i != -1) {\r\n        listeners.splice(i, 1);\r\n    }\r\n}\r\n/**\r\n * currently used in multiple document situations (iframe), might be removed in the future\r\n */\r\nfunction triggerPaste(img) {\r\n    lastref = img;\r\n    for (var a in listeners) {\r\n        listeners[a].cb(lastref);\r\n    }\r\n}\r\nfunction pasted(img) {\r\n    pasting = false;\r\n    let cnv = img instanceof HTMLCanvasElement ? img : img.toCanvas();\r\n    triggerPaste(new _index__WEBPACK_IMPORTED_MODULE_0__[\"ImgRefCtx\"](cnv));\r\n}\r\nfunction error(mes, error) {\r\n    var _a, _b;\r\n    pasting = false;\r\n    for (var a in listeners) {\r\n        (_b = (_a = listeners[a]).error) === null || _b === void 0 ? void 0 : _b.call(_a, mes, error);\r\n    }\r\n}\r\nfunction startDragNDrop() {\r\n    var getitem = function (items) {\r\n        var foundimage = \"\";\r\n        for (var a = 0; a < items.length; a++) {\r\n            var item = items[a];\r\n            var m = item.type.match(/^image\\/(\\w+)$/);\r\n            if (m) {\r\n                if (m[1] == \"png\") {\r\n                    return item;\r\n                }\r\n                else {\r\n                    foundimage = m[1];\r\n                }\r\n            }\r\n        }\r\n        if (foundimage) {\r\n            error(\"The image you uploaded is not a .png image. Other image type have compression noise and can't be used for image detection.\", \"notpng\");\r\n        }\r\n        return null;\r\n    };\r\n    window.addEventListener(\"dragover\", function (e) {\r\n        e.preventDefault();\r\n    });\r\n    window.addEventListener(\"drop\", function (e) {\r\n        if (!e.dataTransfer) {\r\n            return;\r\n        }\r\n        var item = getitem(e.dataTransfer.items);\r\n        e.preventDefault();\r\n        if (!item) {\r\n            return;\r\n        }\r\n        fromFile(item.getAsFile());\r\n    });\r\n}\r\nfunction start() {\r\n    if (started) {\r\n        return;\r\n    }\r\n    started = true;\r\n    //determine if we have a clipboard api\r\n    //try{a=new Event(\"clipboard\"); a=\"clipboardData\" in a;}\r\n    //catch(e){a=false;}\r\n    var ischrome = !!navigator.userAgent.match(/Chrome/) && !navigator.userAgent.match(/Edge/);\r\n    //old method breaks after chrome 41, revert to good old user agent sniffing\r\n    //nvm, internet explorer (edge) decided that it wants to be chrome, however fails at delivering\r\n    //turns out this one is interesting, edge is a hybrid between the paste api's\r\n    var apipasted = function (e) {\r\n        if (!e.clipboardData) {\r\n            return;\r\n        }\r\n        for (var a = 0; a < e.clipboardData.items.length; a++) { //loop all data types\r\n            if (e.clipboardData.items[a].type.indexOf(\"image\") != -1) {\r\n                var file = e.clipboardData.items[a].getAsFile();\r\n                var img = new Image();\r\n                img.src = (window.URL || window.webkitURL).createObjectURL(file);\r\n                if (img.width > 0) {\r\n                    pasted(img);\r\n                }\r\n                else {\r\n                    img.onload = function () { pasted(img); };\r\n                }\r\n            }\r\n        }\r\n    };\r\n    if (ischrome) {\r\n        document.addEventListener(\"paste\", apipasted);\r\n    }\r\n    else {\r\n        var catcher = document.createElement(\"div\");\r\n        catcher.setAttribute(\"contenteditable\", \"\");\r\n        catcher.className = \"forcehidden\"; //retarded ie safety/bug, cant apply styles using js//TODO i don't even know what's going on\r\n        catcher.onpaste = function (e) {\r\n            if (e.clipboardData && e.clipboardData.items) {\r\n                apipasted(e);\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                var b = catcher.children[0];\r\n                if (!b || b.tagName != \"IMG\") {\r\n                    return;\r\n                }\r\n                var img = new Image();\r\n                img.src = b.src;\r\n                var a = img.src.match(/^data:([\\w\\/]+);/);\r\n                if (img.width > 0) {\r\n                    pasted(img);\r\n                }\r\n                else {\r\n                    img.onload = function () { pasted(img); };\r\n                }\r\n                catcher.innerHTML = \"\";\r\n            }, 1);\r\n        };\r\n        document.body.appendChild(catcher);\r\n    }\r\n    //detect if ctrl-v is pressed and focus catcher if needed\r\n    document.addEventListener(\"keydown\", function (e) {\r\n        if (e.target.tagName == \"INPUT\") {\r\n            return;\r\n        }\r\n        if (e.keyCode != \"V\".charCodeAt(0) || !e.ctrlKey) {\r\n            return;\r\n        }\r\n        pasting = true;\r\n        setTimeout(function () {\r\n            if (pasting) {\r\n                error(\"You pressed Ctrl+V, but no image was pasted by your browser, make sure your clipboard contains an image, and not a link to an image.\", \"noimg\");\r\n            }\r\n        }, 1000);\r\n        if (catcher) {\r\n            catcher.focus();\r\n        }\r\n    });\r\n}\r\nfunction fileDialog() {\r\n    var fileinput = document.createElement(\"input\");\r\n    fileinput.type = \"file\";\r\n    fileinput.accept = \"image/png\";\r\n    fileinput.onchange = function () { if (fileinput.files && fileinput.files[0]) {\r\n        fromFile(fileinput.files[0]);\r\n    } };\r\n    fileinput.click();\r\n    return fileinput;\r\n}\r\nfunction fromFile(file) {\r\n    if (!file) {\r\n        return;\r\n    }\r\n    var reader = new FileReader();\r\n    reader.onload = function () {\r\n        var bytearray = new Uint8Array(reader.result);\r\n        if (_imagedetect__WEBPACK_IMPORTED_MODULE_1__[\"isPngBuffer\"](bytearray)) {\r\n            _imagedetect__WEBPACK_IMPORTED_MODULE_1__[\"clearPngColorspace\"](bytearray);\r\n        }\r\n        var blob = new Blob([bytearray], { type: \"image/png\" });\r\n        var img = new Image();\r\n        img.onerror = () => error(\"The file you uploaded could not be opened as an image.\", \"invalidfile\");\r\n        var bloburl = URL.createObjectURL(blob);\r\n        img.src = bloburl;\r\n        if (img.width > 0) {\r\n            pasted(img);\r\n            URL.revokeObjectURL(bloburl);\r\n        }\r\n        else {\r\n            img.onload = function () { pasted(img); URL.revokeObjectURL(bloburl); };\r\n        }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL3Bhc3RlaW5wdXQudHM/YjI0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvQztBQUNTO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0RBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5QkFBeUI7QUFDbkMsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsa0NBQWtDLE9BQU87QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxhQUFhO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxhQUFhO0FBQzNEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUF1QjtBQUNuQyxZQUFZLCtEQUE4QjtBQUMxQztBQUNBLDBDQUEwQyxvQkFBb0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGFBQWEsOEJBQThCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL3Bhc3RlaW5wdXQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbWdSZWZDdHggfSBmcm9tIFwiLi9pbmRleFwiO1xyXG5pbXBvcnQgKiBhcyBJbWFnZURldGVjdCBmcm9tIFwiLi9pbWFnZWRldGVjdFwiO1xyXG52YXIgbGlzdGVuZXJzID0gW107XHJcbnZhciBzdGFydGVkID0gZmFsc2U7XHJcbnZhciBkbmRTdGFydGVkID0gZmFsc2U7XHJcbnZhciBwYXN0aW5nID0gZmFsc2U7XHJcbmV4cG9ydCB2YXIgbGFzdHJlZiA9IG51bGw7XHJcbmV4cG9ydCBmdW5jdGlvbiBsaXN0ZW4oZnVuYywgZXJyb3JmdW5jLCBkcmFnbmRyb3ApIHtcclxuICAgIGxpc3RlbmVycy5wdXNoKHsgY2I6IGZ1bmMsIGVycm9yOiBlcnJvcmZ1bmMgfSk7XHJcbiAgICBpZiAoIXN0YXJ0ZWQpIHtcclxuICAgICAgICBzdGFydCgpO1xyXG4gICAgfVxyXG4gICAgaWYgKGRyYWduZHJvcCAmJiAhZG5kU3RhcnRlZCkge1xyXG4gICAgICAgIHN0YXJ0RHJhZ05Ecm9wKCk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHVubGlzdGVuKGZ1bmMpIHtcclxuICAgIGxldCBpID0gbGlzdGVuZXJzLmZpbmRJbmRleChjID0+IGMuY2IgPT0gZnVuYyk7XHJcbiAgICBpZiAoaSAhPSAtMSkge1xyXG4gICAgICAgIGxpc3RlbmVycy5zcGxpY2UoaSwgMSk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIGN1cnJlbnRseSB1c2VkIGluIG11bHRpcGxlIGRvY3VtZW50IHNpdHVhdGlvbnMgKGlmcmFtZSksIG1pZ2h0IGJlIHJlbW92ZWQgaW4gdGhlIGZ1dHVyZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRyaWdnZXJQYXN0ZShpbWcpIHtcclxuICAgIGxhc3RyZWYgPSBpbWc7XHJcbiAgICBmb3IgKHZhciBhIGluIGxpc3RlbmVycykge1xyXG4gICAgICAgIGxpc3RlbmVyc1thXS5jYihsYXN0cmVmKTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBwYXN0ZWQoaW1nKSB7XHJcbiAgICBwYXN0aW5nID0gZmFsc2U7XHJcbiAgICBsZXQgY252ID0gaW1nIGluc3RhbmNlb2YgSFRNTENhbnZhc0VsZW1lbnQgPyBpbWcgOiBpbWcudG9DYW52YXMoKTtcclxuICAgIHRyaWdnZXJQYXN0ZShuZXcgSW1nUmVmQ3R4KGNudikpO1xyXG59XHJcbmZ1bmN0aW9uIGVycm9yKG1lcywgZXJyb3IpIHtcclxuICAgIHZhciBfYSwgX2I7XHJcbiAgICBwYXN0aW5nID0gZmFsc2U7XHJcbiAgICBmb3IgKHZhciBhIGluIGxpc3RlbmVycykge1xyXG4gICAgICAgIChfYiA9IChfYSA9IGxpc3RlbmVyc1thXSkuZXJyb3IpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKF9hLCBtZXMsIGVycm9yKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc3RhcnREcmFnTkRyb3AoKSB7XHJcbiAgICB2YXIgZ2V0aXRlbSA9IGZ1bmN0aW9uIChpdGVtcykge1xyXG4gICAgICAgIHZhciBmb3VuZGltYWdlID0gXCJcIjtcclxuICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IGl0ZW1zLmxlbmd0aDsgYSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBpdGVtID0gaXRlbXNbYV07XHJcbiAgICAgICAgICAgIHZhciBtID0gaXRlbS50eXBlLm1hdGNoKC9eaW1hZ2VcXC8oXFx3KykkLyk7XHJcbiAgICAgICAgICAgIGlmIChtKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAobVsxXSA9PSBcInBuZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBmb3VuZGltYWdlID0gbVsxXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZm91bmRpbWFnZSkge1xyXG4gICAgICAgICAgICBlcnJvcihcIlRoZSBpbWFnZSB5b3UgdXBsb2FkZWQgaXMgbm90IGEgLnBuZyBpbWFnZS4gT3RoZXIgaW1hZ2UgdHlwZSBoYXZlIGNvbXByZXNzaW9uIG5vaXNlIGFuZCBjYW4ndCBiZSB1c2VkIGZvciBpbWFnZSBkZXRlY3Rpb24uXCIsIFwibm90cG5nXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH07XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBpZiAoIWUuZGF0YVRyYW5zZmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGl0ZW0gPSBnZXRpdGVtKGUuZGF0YVRyYW5zZmVyLml0ZW1zKTtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgaWYgKCFpdGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnJvbUZpbGUoaXRlbS5nZXRBc0ZpbGUoKSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc3RhcnQoKSB7XHJcbiAgICBpZiAoc3RhcnRlZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHN0YXJ0ZWQgPSB0cnVlO1xyXG4gICAgLy9kZXRlcm1pbmUgaWYgd2UgaGF2ZSBhIGNsaXBib2FyZCBhcGlcclxuICAgIC8vdHJ5e2E9bmV3IEV2ZW50KFwiY2xpcGJvYXJkXCIpOyBhPVwiY2xpcGJvYXJkRGF0YVwiIGluIGE7fVxyXG4gICAgLy9jYXRjaChlKXthPWZhbHNlO31cclxuICAgIHZhciBpc2Nocm9tZSA9ICEhbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvQ2hyb21lLykgJiYgIW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0VkZ2UvKTtcclxuICAgIC8vb2xkIG1ldGhvZCBicmVha3MgYWZ0ZXIgY2hyb21lIDQxLCByZXZlcnQgdG8gZ29vZCBvbGQgdXNlciBhZ2VudCBzbmlmZmluZ1xyXG4gICAgLy9udm0sIGludGVybmV0IGV4cGxvcmVyIChlZGdlKSBkZWNpZGVkIHRoYXQgaXQgd2FudHMgdG8gYmUgY2hyb21lLCBob3dldmVyIGZhaWxzIGF0IGRlbGl2ZXJpbmdcclxuICAgIC8vdHVybnMgb3V0IHRoaXMgb25lIGlzIGludGVyZXN0aW5nLCBlZGdlIGlzIGEgaHlicmlkIGJldHdlZW4gdGhlIHBhc3RlIGFwaSdzXHJcbiAgICB2YXIgYXBpcGFzdGVkID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBpZiAoIWUuY2xpcGJvYXJkRGF0YSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAodmFyIGEgPSAwOyBhIDwgZS5jbGlwYm9hcmREYXRhLml0ZW1zLmxlbmd0aDsgYSsrKSB7IC8vbG9vcCBhbGwgZGF0YSB0eXBlc1xyXG4gICAgICAgICAgICBpZiAoZS5jbGlwYm9hcmREYXRhLml0ZW1zW2FdLnR5cGUuaW5kZXhPZihcImltYWdlXCIpICE9IC0xKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsZSA9IGUuY2xpcGJvYXJkRGF0YS5pdGVtc1thXS5nZXRBc0ZpbGUoKTtcclxuICAgICAgICAgICAgICAgIHZhciBpbWcgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgICAgIGltZy5zcmMgPSAod2luZG93LlVSTCB8fCB3aW5kb3cud2Via2l0VVJMKS5jcmVhdGVPYmplY3RVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW1nLndpZHRoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhc3RlZChpbWcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsgcGFzdGVkKGltZyk7IH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgaWYgKGlzY2hyb21lKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBhc3RlXCIsIGFwaXBhc3RlZCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB2YXIgY2F0Y2hlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgY2F0Y2hlci5zZXRBdHRyaWJ1dGUoXCJjb250ZW50ZWRpdGFibGVcIiwgXCJcIik7XHJcbiAgICAgICAgY2F0Y2hlci5jbGFzc05hbWUgPSBcImZvcmNlaGlkZGVuXCI7IC8vcmV0YXJkZWQgaWUgc2FmZXR5L2J1ZywgY2FudCBhcHBseSBzdHlsZXMgdXNpbmcganMvL1RPRE8gaSBkb24ndCBldmVuIGtub3cgd2hhdCdzIGdvaW5nIG9uXHJcbiAgICAgICAgY2F0Y2hlci5vbnBhc3RlID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUuY2xpcGJvYXJkRGF0YSAmJiBlLmNsaXBib2FyZERhdGEuaXRlbXMpIHtcclxuICAgICAgICAgICAgICAgIGFwaXBhc3RlZChlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBiID0gY2F0Y2hlci5jaGlsZHJlblswXTtcclxuICAgICAgICAgICAgICAgIGlmICghYiB8fCBiLnRhZ05hbWUgIT0gXCJJTUdcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBpbWcgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgICAgIGltZy5zcmMgPSBiLnNyYztcclxuICAgICAgICAgICAgICAgIHZhciBhID0gaW1nLnNyYy5tYXRjaCgvXmRhdGE6KFtcXHdcXC9dKyk7Lyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW1nLndpZHRoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhc3RlZChpbWcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsgcGFzdGVkKGltZyk7IH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaGVyLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICAgICAgICAgIH0sIDEpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYXRjaGVyKTtcclxuICAgIH1cclxuICAgIC8vZGV0ZWN0IGlmIGN0cmwtdiBpcyBwcmVzc2VkIGFuZCBmb2N1cyBjYXRjaGVyIGlmIG5lZWRlZFxyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBpZiAoZS50YXJnZXQudGFnTmFtZSA9PSBcIklOUFVUXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZS5rZXlDb2RlICE9IFwiVlwiLmNoYXJDb2RlQXQoMCkgfHwgIWUuY3RybEtleSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBhc3RpbmcgPSB0cnVlO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAocGFzdGluZykge1xyXG4gICAgICAgICAgICAgICAgZXJyb3IoXCJZb3UgcHJlc3NlZCBDdHJsK1YsIGJ1dCBubyBpbWFnZSB3YXMgcGFzdGVkIGJ5IHlvdXIgYnJvd3NlciwgbWFrZSBzdXJlIHlvdXIgY2xpcGJvYXJkIGNvbnRhaW5zIGFuIGltYWdlLCBhbmQgbm90IGEgbGluayB0byBhbiBpbWFnZS5cIiwgXCJub2ltZ1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgIGlmIChjYXRjaGVyKSB7XHJcbiAgICAgICAgICAgIGNhdGNoZXIuZm9jdXMoKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gZmlsZURpYWxvZygpIHtcclxuICAgIHZhciBmaWxlaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICBmaWxlaW5wdXQudHlwZSA9IFwiZmlsZVwiO1xyXG4gICAgZmlsZWlucHV0LmFjY2VwdCA9IFwiaW1hZ2UvcG5nXCI7XHJcbiAgICBmaWxlaW5wdXQub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7IGlmIChmaWxlaW5wdXQuZmlsZXMgJiYgZmlsZWlucHV0LmZpbGVzWzBdKSB7XHJcbiAgICAgICAgZnJvbUZpbGUoZmlsZWlucHV0LmZpbGVzWzBdKTtcclxuICAgIH0gfTtcclxuICAgIGZpbGVpbnB1dC5jbGljaygpO1xyXG4gICAgcmV0dXJuIGZpbGVpbnB1dDtcclxufVxyXG5mdW5jdGlvbiBmcm9tRmlsZShmaWxlKSB7XHJcbiAgICBpZiAoIWZpbGUpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGJ5dGVhcnJheSA9IG5ldyBVaW50OEFycmF5KHJlYWRlci5yZXN1bHQpO1xyXG4gICAgICAgIGlmIChJbWFnZURldGVjdC5pc1BuZ0J1ZmZlcihieXRlYXJyYXkpKSB7XHJcbiAgICAgICAgICAgIEltYWdlRGV0ZWN0LmNsZWFyUG5nQ29sb3JzcGFjZShieXRlYXJyYXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtieXRlYXJyYXldLCB7IHR5cGU6IFwiaW1hZ2UvcG5nXCIgfSk7XHJcbiAgICAgICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpO1xyXG4gICAgICAgIGltZy5vbmVycm9yID0gKCkgPT4gZXJyb3IoXCJUaGUgZmlsZSB5b3UgdXBsb2FkZWQgY291bGQgbm90IGJlIG9wZW5lZCBhcyBhbiBpbWFnZS5cIiwgXCJpbnZhbGlkZmlsZVwiKTtcclxuICAgICAgICB2YXIgYmxvYnVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbiAgICAgICAgaW1nLnNyYyA9IGJsb2J1cmw7XHJcbiAgICAgICAgaWYgKGltZy53aWR0aCA+IDApIHtcclxuICAgICAgICAgICAgcGFzdGVkKGltZyk7XHJcbiAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwoYmxvYnVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgeyBwYXN0ZWQoaW1nKTsgVVJMLnJldm9rZU9iamVjdFVSTChibG9idXJsKTsgfTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/pasteinput.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/rect.ts":
/*!******************************************!*\
  !*** ../node_modules/@alt1/base/rect.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Rect; });\n//util class for rectangle maths\r\n//TODO shit this sucks can we remove it again?\r\n//more of a shorthand to get {x,y,width,height} than a class\r\n//kinda starting to like it again\r\n//TODO remove rant\r\n;\r\n/**\r\n * Simple rectangle class with some util functions\r\n */\r\nclass Rect {\r\n    constructor(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n    static fromArgs(...args) {\r\n        if (typeof args[0] == \"object\") {\r\n            if (typeof args[0][0] == \"number\") {\r\n                return new Rect(args[0], args[1], args[2], args[3]);\r\n            }\r\n            else {\r\n                return new Rect(args[0].x, args[0].y, args[0].width, args[0].height);\r\n            }\r\n        }\r\n        else {\r\n            return new Rect(args[0], args[1], args[2], args[3]);\r\n        }\r\n    }\r\n    /**\r\n     * Resizes this Rect to include the full size of a given second rectangle\r\n     */\r\n    union(r2) {\r\n        var x = Math.min(this.x, r2.x);\r\n        var y = Math.min(this.y, r2.y);\r\n        this.width = Math.max(this.x + this.width, r2.x + r2.width) - x;\r\n        this.height = Math.max(this.y + this.height, r2.y + r2.height) - y;\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    /**\r\n     * Resizes this Rect to include a given point\r\n     */\r\n    includePoint(x, y) {\r\n        this.union(new Rect(x, y, 0, 0));\r\n    }\r\n    /**\r\n     * Grows the rectangle with the given dimensions\r\n     */\r\n    inflate(w, h) {\r\n        this.x -= w;\r\n        this.y -= h;\r\n        this.width += 2 * w;\r\n        this.height += 2 * h;\r\n    }\r\n    /**\r\n     * Resizes this Rect to the area that overlaps a given Rect\r\n     * width and height will be set to 0 if the intersection does not exist\r\n     */\r\n    intersect(r2) {\r\n        if (this.x < r2.x) {\r\n            this.width -= r2.x - this.x;\r\n            this.x = r2.x;\r\n        }\r\n        if (this.y < r2.y) {\r\n            this.height -= r2.y - this.y;\r\n            this.y = r2.y;\r\n        }\r\n        this.width = Math.min(this.x + this.width, r2.x + r2.width) - this.x;\r\n        this.height = Math.min(this.y + this.height, r2.y + r2.height) - this.y;\r\n        if (this.width <= 0 || this.height <= 0) {\r\n            this.width = 0;\r\n            this.height = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Returns wether this Rect has at least one pixel overlap with a given Rect\r\n     */\r\n    overlaps(r2) {\r\n        return this.x < r2.x + r2.width && this.x + this.width > r2.x && this.y < r2.y + r2.height && this.y + this.height > r2.y;\r\n    }\r\n    /**\r\n     * Returns wether a given Rect fits completely inside this Rect\r\n     * @param r2\r\n     */\r\n    contains(r2) {\r\n        return this.x <= r2.x && this.x + this.width >= r2.x + r2.width && this.y <= r2.y && this.y + this.height >= r2.y + r2.height;\r\n    }\r\n    /**\r\n     * Returns wether a given point lies inside this Rect\r\n     */\r\n    containsPoint(x, y) {\r\n        return this.x <= x && this.x + this.width > x && this.y <= y && this.y + this.height > y;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL3JlY3QudHM/ZWY4MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBLDhCQUE4QixpQkFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL3JlY3QudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL3V0aWwgY2xhc3MgZm9yIHJlY3RhbmdsZSBtYXRoc1xyXG4vL1RPRE8gc2hpdCB0aGlzIHN1Y2tzIGNhbiB3ZSByZW1vdmUgaXQgYWdhaW4/XHJcbi8vbW9yZSBvZiBhIHNob3J0aGFuZCB0byBnZXQge3gseSx3aWR0aCxoZWlnaHR9IHRoYW4gYSBjbGFzc1xyXG4vL2tpbmRhIHN0YXJ0aW5nIHRvIGxpa2UgaXQgYWdhaW5cclxuLy9UT0RPIHJlbW92ZSByYW50XHJcbjtcclxuLyoqXHJcbiAqIFNpbXBsZSByZWN0YW5nbGUgY2xhc3Mgd2l0aCBzb21lIHV0aWwgZnVuY3Rpb25zXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWN0IHtcclxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHcsIGgpIHtcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHc7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGZyb21BcmdzKC4uLmFyZ3MpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF1bMF0gPT0gXCJudW1iZXJcIikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWN0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWN0KGFyZ3NbMF0ueCwgYXJnc1swXS55LCBhcmdzWzBdLndpZHRoLCBhcmdzWzBdLmhlaWdodCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVjdChhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlc2l6ZXMgdGhpcyBSZWN0IHRvIGluY2x1ZGUgdGhlIGZ1bGwgc2l6ZSBvZiBhIGdpdmVuIHNlY29uZCByZWN0YW5nbGVcclxuICAgICAqL1xyXG4gICAgdW5pb24ocjIpIHtcclxuICAgICAgICB2YXIgeCA9IE1hdGgubWluKHRoaXMueCwgcjIueCk7XHJcbiAgICAgICAgdmFyIHkgPSBNYXRoLm1pbih0aGlzLnksIHIyLnkpO1xyXG4gICAgICAgIHRoaXMud2lkdGggPSBNYXRoLm1heCh0aGlzLnggKyB0aGlzLndpZHRoLCByMi54ICsgcjIud2lkdGgpIC0geDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IE1hdGgubWF4KHRoaXMueSArIHRoaXMuaGVpZ2h0LCByMi55ICsgcjIuaGVpZ2h0KSAtIHk7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXNpemVzIHRoaXMgUmVjdCB0byBpbmNsdWRlIGEgZ2l2ZW4gcG9pbnRcclxuICAgICAqL1xyXG4gICAgaW5jbHVkZVBvaW50KHgsIHkpIHtcclxuICAgICAgICB0aGlzLnVuaW9uKG5ldyBSZWN0KHgsIHksIDAsIDApKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR3Jvd3MgdGhlIHJlY3RhbmdsZSB3aXRoIHRoZSBnaXZlbiBkaW1lbnNpb25zXHJcbiAgICAgKi9cclxuICAgIGluZmxhdGUodywgaCkge1xyXG4gICAgICAgIHRoaXMueCAtPSB3O1xyXG4gICAgICAgIHRoaXMueSAtPSBoO1xyXG4gICAgICAgIHRoaXMud2lkdGggKz0gMiAqIHc7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgKz0gMiAqIGg7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlc2l6ZXMgdGhpcyBSZWN0IHRvIHRoZSBhcmVhIHRoYXQgb3ZlcmxhcHMgYSBnaXZlbiBSZWN0XHJcbiAgICAgKiB3aWR0aCBhbmQgaGVpZ2h0IHdpbGwgYmUgc2V0IHRvIDAgaWYgdGhlIGludGVyc2VjdGlvbiBkb2VzIG5vdCBleGlzdFxyXG4gICAgICovXHJcbiAgICBpbnRlcnNlY3QocjIpIHtcclxuICAgICAgICBpZiAodGhpcy54IDwgcjIueCkge1xyXG4gICAgICAgICAgICB0aGlzLndpZHRoIC09IHIyLnggLSB0aGlzLng7XHJcbiAgICAgICAgICAgIHRoaXMueCA9IHIyLng7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLnkgPCByMi55KSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0IC09IHIyLnkgLSB0aGlzLnk7XHJcbiAgICAgICAgICAgIHRoaXMueSA9IHIyLnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMud2lkdGggPSBNYXRoLm1pbih0aGlzLnggKyB0aGlzLndpZHRoLCByMi54ICsgcjIud2lkdGgpIC0gdGhpcy54O1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gTWF0aC5taW4odGhpcy55ICsgdGhpcy5oZWlnaHQsIHIyLnkgKyByMi5oZWlnaHQpIC0gdGhpcy55O1xyXG4gICAgICAgIGlmICh0aGlzLndpZHRoIDw9IDAgfHwgdGhpcy5oZWlnaHQgPD0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLndpZHRoID0gMDtcclxuICAgICAgICAgICAgdGhpcy5oZWlnaHQgPSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB3ZXRoZXIgdGhpcyBSZWN0IGhhcyBhdCBsZWFzdCBvbmUgcGl4ZWwgb3ZlcmxhcCB3aXRoIGEgZ2l2ZW4gUmVjdFxyXG4gICAgICovXHJcbiAgICBvdmVybGFwcyhyMikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnggPCByMi54ICsgcjIud2lkdGggJiYgdGhpcy54ICsgdGhpcy53aWR0aCA+IHIyLnggJiYgdGhpcy55IDwgcjIueSArIHIyLmhlaWdodCAmJiB0aGlzLnkgKyB0aGlzLmhlaWdodCA+IHIyLnk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgd2V0aGVyIGEgZ2l2ZW4gUmVjdCBmaXRzIGNvbXBsZXRlbHkgaW5zaWRlIHRoaXMgUmVjdFxyXG4gICAgICogQHBhcmFtIHIyXHJcbiAgICAgKi9cclxuICAgIGNvbnRhaW5zKHIyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMueCA8PSByMi54ICYmIHRoaXMueCArIHRoaXMud2lkdGggPj0gcjIueCArIHIyLndpZHRoICYmIHRoaXMueSA8PSByMi55ICYmIHRoaXMueSArIHRoaXMuaGVpZ2h0ID49IHIyLnkgKyByMi5oZWlnaHQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgd2V0aGVyIGEgZ2l2ZW4gcG9pbnQgbGllcyBpbnNpZGUgdGhpcyBSZWN0XHJcbiAgICAgKi9cclxuICAgIGNvbnRhaW5zUG9pbnQoeCwgeSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnggPD0geCAmJiB0aGlzLnggKyB0aGlzLndpZHRoID4geCAmJiB0aGlzLnkgPD0geSAmJiB0aGlzLnkgKyB0aGlzLmhlaWdodCA+IHk7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/rect.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/wrapper.ts":
/*!*********************************************!*\
  !*** ../node_modules/@alt1/base/wrapper.ts ***!
  \*********************************************/
/*! exports provided: NoAlt1Error, Alt1Error, newestversion, hasAlt1, skinName, openbrowser, requireAlt1, getdisplaybounds, capture, captureHold, captureHoldScreen, captureHoldFullRs, transferImageData, decodeImageString, encodeImageString, mixColor, unmixColor, identifyApp, hasAlt1Version, getMousePosition, addResizeElement, on, removeListener, once, ImageStreamReader, captureAsync, captureMultiAsync, captureStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoAlt1Error\", function() { return NoAlt1Error; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Alt1Error\", function() { return Alt1Error; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newestversion\", function() { return newestversion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1\", function() { return hasAlt1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"skinName\", function() { return skinName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"openbrowser\", function() { return openbrowser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireAlt1\", function() { return requireAlt1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getdisplaybounds\", function() { return getdisplaybounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capture\", function() { return capture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureHold\", function() { return captureHold; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureHoldScreen\", function() { return captureHoldScreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureHoldFullRs\", function() { return captureHoldFullRs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transferImageData\", function() { return transferImageData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeImageString\", function() { return decodeImageString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeImageString\", function() { return encodeImageString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mixColor\", function() { return mixColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unmixColor\", function() { return unmixColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identifyApp\", function() { return identifyApp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1Version\", function() { return hasAlt1Version; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMousePosition\", function() { return getMousePosition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addResizeElement\", function() { return addResizeElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"on\", function() { return on; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeListener\", function() { return removeListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return once; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageStreamReader\", function() { return ImageStreamReader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureAsync\", function() { return captureAsync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureMultiAsync\", function() { return captureMultiAsync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureStream\", function() { return captureStream; });\n/* harmony import */ var _imagedetect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rect */ \"../node_modules/@alt1/base/rect.ts\");\n/* harmony import */ var _imgref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./imgref */ \"../node_modules/@alt1/base/imgref.ts\");\n/* harmony import */ var _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./imagedata-extensions */ \"../node_modules/@alt1/base/imagedata-extensions.ts\");\n/* harmony import */ var _alt1api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./alt1api */ \"../node_modules/@alt1/base/alt1api.ts\");\n/* harmony import */ var _alt1api__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_alt1api__WEBPACK_IMPORTED_MODULE_4__);\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Thrown when a method is called that can not be used outside of Alt1\r\n */\r\nclass NoAlt1Error extends Error {\r\n    constructor() {\r\n        super();\r\n        this.message = \"This method can not be ran outside of Alt1\";\r\n    }\r\n}\r\n;\r\n/**\r\n * Thrown when the Alt1 API returns an invalid result\r\n * Errors of a different type are throw when internal Alt1 errors occur\r\n */\r\nclass Alt1Error extends Error {\r\n}\r\n/**\r\n * The latest Alt1 version\r\n */\r\nvar newestversion = \"1.5.5\";\r\n/**\r\n * Whether the Alt1 API is available\r\n */\r\nvar hasAlt1 = (typeof alt1 != \"undefined\");\r\n/**\r\n * The name of the Alt1 interface skin. (Always \"default\" if running in a browser)\r\n */\r\nvar skinName = hasAlt1 ? alt1.skinName : \"default\";\r\n/**\r\n * Max number of bytes that can be sent by alt1 in one function\r\n * Not completely sure why this number is different than window.alt1.maxtranfer\r\n */\r\nvar maxtransfer = 4000000;\r\n/**\r\n * Open a link in the default browser\r\n * @deprecated use window.open instead\r\n */\r\nfunction openbrowser(url) {\r\n    if (hasAlt1) {\r\n        alt1.openBrowser(url);\r\n    }\r\n    else {\r\n        window.open(url, '_blank');\r\n    }\r\n}\r\n/**\r\n * Throw if Alt1 API is not available\r\n */\r\nfunction requireAlt1() {\r\n    if (!hasAlt1) {\r\n        throw new NoAlt1Error();\r\n    }\r\n}\r\n/**\r\n * Returns an object with a rectangle that spans all screens\r\n */\r\nfunction getdisplaybounds() {\r\n    if (!hasAlt1) {\r\n        return false;\r\n    }\r\n    return new _rect__WEBPACK_IMPORTED_MODULE_1__[\"default\"](alt1.screenX, alt1.screenY, alt1.screenWidth, alt1.screenHeight);\r\n}\r\nfunction capture(...args) {\r\n    if (!hasAlt1) {\r\n        throw new NoAlt1Error();\r\n    }\r\n    var i = 0;\r\n    var rect = _rect__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromArgs(...args);\r\n    var buf = new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](rect.width, rect.height);\r\n    if (rect.width * rect.height * 4 <= maxtransfer) {\r\n        var data = alt1.getRegion(rect.x, rect.y, rect.width, rect.height);\r\n        if (!data) {\r\n            return null;\r\n        }\r\n        decodeImageString(data, buf, 0, 0, rect.width, rect.height);\r\n    }\r\n    else {\r\n        //split up the request to to exceed the single transfer limit (for now)\r\n        var x1 = rect.x;\r\n        var ref = alt1.bindRegion(rect.x, rect.y, rect.width, rect.height);\r\n        if (ref <= 0) {\r\n            return null;\r\n        }\r\n        while (x1 < rect.x + rect.width) {\r\n            var x2 = Math.min(rect.x + rect.width, Math.floor(x1 + (maxtransfer / 4 / rect.height)));\r\n            var data = alt1.bindGetRegion(ref, x1, rect.y, x2 - x1, rect.height);\r\n            if (!data) {\r\n                return null;\r\n            }\r\n            decodeImageString(data, buf, x1 - rect.x, 0, x2 - x1, rect.height);\r\n            x1 = x2;\r\n        }\r\n    }\r\n    return buf;\r\n}\r\n/**\r\n * Makes alt1 bind an area of the rs client in memory without sending it to the js client\r\n * returns an imgref object which can be used to get pixel data using the imgreftobuf function\r\n * currently only one bind can exist per app and the ref in (v) will always be 1\r\n */\r\nfunction captureHold(x, y, w, h) {\r\n    x = Math.round(x);\r\n    y = Math.round(y);\r\n    w = Math.round(w);\r\n    h = Math.round(h);\r\n    requireAlt1();\r\n    var r = alt1.bindRegion(x, y, w, h);\r\n    if (r <= 0) {\r\n        throw new Alt1Error(\"capturehold failed\");\r\n    }\r\n    return new _imgref__WEBPACK_IMPORTED_MODULE_2__[\"ImgRefBind\"](r, x, y, w, h);\r\n}\r\n/**\r\n * Same as captureHoldRegion, but captures the screen instead of the rs client. it also uses screen coordinates instead and can capture outside of the rs client\r\n */\r\nfunction captureHoldScreen(x, y, w, h) {\r\n    x = Math.round(x);\r\n    y = Math.round(y);\r\n    w = Math.round(w);\r\n    h = Math.round(h);\r\n    requireAlt1();\r\n    var r = alt1.bindScreenRegion(x, y, w, h);\r\n    if (r <= 0) {\r\n        return false;\r\n    }\r\n    return new _imgref__WEBPACK_IMPORTED_MODULE_2__[\"ImgRefBind\"](r, x, y, w, h);\r\n}\r\n/**\r\n * bind the full rs window if the rs window can be detected by alt1, otherwise return the full screen\r\n */\r\nfunction captureHoldFullRs() {\r\n    return captureHold(0, 0, alt1.rsWidth, alt1.rsHeight);\r\n}\r\n/**\r\n * returns a subregion from a bound image\r\n * used internally in imgreftobuf if imgref is a bound image\r\n * @deprecated This should be handled internall by the imgrefbind.toData method\r\n */\r\nfunction transferImageData(handle, x, y, w, h) {\r\n    x = Math.round(x);\r\n    y = Math.round(y);\r\n    w = Math.round(w);\r\n    h = Math.round(h);\r\n    requireAlt1();\r\n    var r = new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](w, h);\r\n    var x1 = x;\r\n    while (true) { //split up the request to to exceed the single transfer limit (for now)\r\n        var x2 = Math.min(x + w, Math.floor(x1 + (maxtransfer / 4 / h)));\r\n        var a = alt1.bindGetRegion(handle, x1, y, x2 - x1, h);\r\n        if (!a) {\r\n            throw new Alt1Error();\r\n        }\r\n        decodeImageString(a, r, x1 - x, 0, x2 - x1, h);\r\n        x1 = x2;\r\n        if (x1 == x + w) {\r\n            break;\r\n        }\r\n        ;\r\n    }\r\n    return r;\r\n}\r\n/**\r\n * decodes a returned string from alt1 to an imagebuffer\r\n */\r\nfunction decodeImageString(imagestring, target, x, y, w, h) {\r\n    var bin = atob(imagestring);\r\n    var bytes = target.data;\r\n    w |= 0;\r\n    h |= 0;\r\n    var offset = 4 * x + 4 * y * target.width;\r\n    var target_width = target.width | 0;\r\n    for (var a = 0; a < w; a++) {\r\n        for (var b = 0; b < h; b++) {\r\n            var i1 = (offset + (a * 4 | 0) + (b * target_width * 4 | 0)) | 0;\r\n            var i2 = ((a * 4 | 0) + (b * 4 * w | 0)) | 0;\r\n            bytes[i1 + 0 | 0] = bin.charCodeAt(i2 + 2 | 0); //fix weird red/blue swap in c#\r\n            bytes[i1 + 1 | 0] = bin.charCodeAt(i2 + 1 | 0);\r\n            bytes[i1 + 2 | 0] = bin.charCodeAt(i2 + 0 | 0);\r\n            bytes[i1 + 3 | 0] = bin.charCodeAt(i2 + 3 | 0);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * encodes an imagebuffer to a string\r\n */\r\nfunction encodeImageString(buf, sx = 0, sy = 0, sw = buf.width, sh = buf.height) {\r\n    var raw = \"\";\r\n    for (var y = sy; y < sy + sh; y++) {\r\n        for (var x = sx; x < sx + sw; x++) {\r\n            var i = 4 * x + 4 * buf.width * y | 0;\r\n            raw += String.fromCharCode(buf.data[i + 2 | 0]);\r\n            raw += String.fromCharCode(buf.data[i + 1 | 0]);\r\n            raw += String.fromCharCode(buf.data[i + 0 | 0]);\r\n            raw += String.fromCharCode(buf.data[i + 3 | 0]);\r\n        }\r\n    }\r\n    return btoa(raw);\r\n}\r\n/**\r\n * mixes the given color into a single int. This format is used by alt1\r\n */\r\nfunction mixColor(r, g, b, a = 255) {\r\n    return (b << 0) + (g << 8) + (r << 16) + (a << 24);\r\n}\r\nfunction unmixColor(col) {\r\n    var r = (col >> 16) & 0xff;\r\n    var g = (col >> 8) & 0xff;\r\n    var b = (col >> 0) & 0xff;\r\n    return [r, g, b];\r\n}\r\nfunction identifyApp(url) {\r\n    if (hasAlt1) {\r\n        alt1.identifyAppUrl(url);\r\n    }\r\n}\r\nfunction convertAlt1Version(str) {\r\n    var a = str.match(/^(\\d+)\\.(\\d+)\\.(\\d+)$/);\r\n    if (!a) {\r\n        throw new RangeError(\"Invalid version string\");\r\n    }\r\n    return (+a[1]) * 1000 * 1000 + (+a[2]) * 1000 + (+a[3]) * 1;\r\n}\r\nvar cachedVersionInt = -1;\r\n/**\r\n * checks if alt1 is running and at least the given version. versionstr should be a string with the version eg: 1.3.2\r\n * @param versionstr\r\n */\r\nfunction hasAlt1Version(versionstr) {\r\n    if (!hasAlt1) {\r\n        return false;\r\n    }\r\n    if (cachedVersionInt == -1) {\r\n        cachedVersionInt = alt1.versionint;\r\n    }\r\n    return cachedVersionInt >= convertAlt1Version(versionstr);\r\n}\r\n/**\r\n * Gets the current cursor position in the game, returns null if the rs window is not active (alt1.rsActive)\r\n */\r\nfunction getMousePosition() {\r\n    var pos = alt1.mousePosition;\r\n    if (pos == -1) {\r\n        return null;\r\n    }\r\n    return { x: pos >>> 16, y: pos & 0xFFFF };\r\n}\r\n/**\r\n * Registers a given HTML element as a frame border, when this element is dragged by the user the Alt1 frame will resize accordingly\r\n * Use the direction arguements to make a given direction stick to the mouse. eg. Only set left to true to make the element behave as the left border\r\n * Or set all to true to move the whole window. Not all combinations are permitted\r\n */\r\nfunction addResizeElement(el, left, top, right, bot) {\r\n    if (!hasAlt1 || !alt1.userResize) {\r\n        return;\r\n    }\r\n    el.addEventListener(\"mousedown\", function (e) {\r\n        alt1.userResize(left, top, right, bot);\r\n        e.preventDefault();\r\n    });\r\n}\r\n/**\r\n * Add an event listener\r\n */\r\nfunction on(type, listener) {\r\n    requireAlt1();\r\n    if (!alt1.events) {\r\n        alt1.events = {};\r\n    }\r\n    if (!alt1.events[type]) {\r\n        alt1.events[type] = [];\r\n    }\r\n    alt1.events[type].push(listener);\r\n}\r\n/**\r\n * Removes an event listener\r\n */\r\nfunction removeListener(type, listener) {\r\n    var elist = alt1.events && alt1.events[type];\r\n    if (!elist) {\r\n        return;\r\n    }\r\n    var i = elist.indexOf(listener);\r\n    if (i == -1) {\r\n        return;\r\n    }\r\n    elist.splice(i, 1);\r\n}\r\n/**\r\n * Listens for the event to fire once and then stops listening\r\n * @param event\r\n * @param cb\r\n */\r\nfunction once(type, listener) {\r\n    requireAlt1();\r\n    var fn = (e) => {\r\n        removeListener(type, fn);\r\n        listener(e);\r\n    };\r\n    on(type, fn);\r\n}\r\n;\r\n/**\r\n * Used to read a set of images from a binary stream returned by the Alt1 API\r\n */\r\nclass ImageStreamReader {\r\n    constructor(reader, ...args) {\r\n        this.framebuffer = null;\r\n        this.pos = 0;\r\n        this.reading = false;\r\n        this.closed = false;\r\n        //paused state\r\n        this.pausedindex = -1;\r\n        this.pausedbuffer = null;\r\n        this.streamreader = reader;\r\n        if (args[0] instanceof _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"]) {\r\n            this.setFrameBuffer(args[0]);\r\n        }\r\n        else if (typeof args[0] == \"number\") {\r\n            this.setFrameBuffer(new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](args[0], args[1]));\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    setFrameBuffer(buffer) {\r\n        if (this.reading) {\r\n            throw new Error(\"can't change framebuffer while reading\");\r\n        }\r\n        this.framebuffer = buffer;\r\n    }\r\n    /**\r\n     * Closes the underlying stream and ends reading\r\n     */\r\n    close() {\r\n        this.streamreader.cancel();\r\n    }\r\n    /**\r\n     * Reads a single image from the stream\r\n     */\r\n    async nextImage() {\r\n        if (this.reading) {\r\n            throw new Error(\"already reading from this stream\");\r\n        }\r\n        if (!this.framebuffer) {\r\n            throw new Error(\"framebuffer not set\");\r\n        }\r\n        this.reading = true;\r\n        var synctime = -Date.now();\r\n        var starttime = Date.now();\r\n        var r = false;\r\n        while (!r) {\r\n            if (this.pausedindex != -1 && this.pausedbuffer) {\r\n                r = this.readChunk(this.pausedindex, this.framebuffer.data, this.pausedbuffer);\r\n            }\r\n            else {\r\n                synctime += Date.now();\r\n                var res = await this.streamreader.read();\r\n                synctime -= Date.now();\r\n                if (res.done) {\r\n                    throw new Error(\"Stream closed while reading\");\r\n                }\r\n                var data = res.value;\r\n                r = this.readChunk(0, this.framebuffer.data, data);\r\n            }\r\n        }\r\n        synctime += Date.now();\r\n        //console.log(\"Decoded async image, \" + this.framebuffer.width + \"x\" + this.framebuffer.height + \" time: \" + (Date.now() - starttime) + \"ms (\" + synctime + \"ms main thread)\");\r\n        this.reading = false;\r\n        return this.framebuffer;\r\n    }\r\n    readChunk(i, framedata, buffer) {\r\n        //very hot code, explicit int32 casting with |0 speeds it up by ~ x2\r\n        i = i | 0;\r\n        var framesize = framedata.length | 0;\r\n        var pos = this.pos;\r\n        var datalen = buffer.length | 0;\r\n        //var data32 = new Float64Array(buffer.buffer);\r\n        //var framedata32 = new Float64Array(framedata.buffer);\r\n        //fix possible buffer misalignment\r\n        //align to 16 for extra loop unrolling\r\n        while (i < datalen) {\r\n            //slow loop, fix alignment and other issues\r\n            while (i < datalen && pos < framesize && (pos % 16 != 0 || !((i + 16 | 0) <= datalen && (pos + 16 | 0) <= framesize))) {\r\n                var rel = pos;\r\n                if (pos % 4 == 0) {\r\n                    rel = rel + 2 | 0;\r\n                }\r\n                if (pos % 4 == 2) {\r\n                    rel = rel - 2 | 0;\r\n                }\r\n                framedata[rel | 0] = buffer[i | 0];\r\n                i = i + 1 | 0;\r\n                pos = pos + 1 | 0;\r\n            }\r\n            //fast unrolled loop for large chunks i wish js had some sort of memcpy\r\n            if (pos % 16 == 0) {\r\n                while ((i + 16 | 0) <= datalen && (pos + 16 | 0) <= framesize) {\r\n                    framedata[pos + 0 | 0] = buffer[i + 2 | 0];\r\n                    framedata[pos + 1 | 0] = buffer[i + 1 | 0];\r\n                    framedata[pos + 2 | 0] = buffer[i + 0 | 0];\r\n                    framedata[pos + 3 | 0] = buffer[i + 3 | 0];\r\n                    framedata[pos + 4 | 0] = buffer[i + 6 | 0];\r\n                    framedata[pos + 5 | 0] = buffer[i + 5 | 0];\r\n                    framedata[pos + 6 | 0] = buffer[i + 4 | 0];\r\n                    framedata[pos + 7 | 0] = buffer[i + 7 | 0];\r\n                    framedata[pos + 8 | 0] = buffer[i + 10 | 0];\r\n                    framedata[pos + 9 | 0] = buffer[i + 9 | 0];\r\n                    framedata[pos + 10 | 0] = buffer[i + 8 | 0];\r\n                    framedata[pos + 11 | 0] = buffer[i + 11 | 0];\r\n                    framedata[pos + 12 | 0] = buffer[i + 14 | 0];\r\n                    framedata[pos + 13 | 0] = buffer[i + 13 | 0];\r\n                    framedata[pos + 14 | 0] = buffer[i + 12 | 0];\r\n                    framedata[pos + 15 | 0] = buffer[i + 15 | 0];\r\n                    //could speed it up another x2 but wouldn't be able to swap r/b swap and possible alignment issues\r\n                    //framedata32[pos / 8 + 0 | 0] = data32[i / 8 + 0 | 0];\r\n                    //framedata32[pos / 8 + 1 | 0] = data32[i / 8 + 1 | 0];\r\n                    //framedata32[pos / 4 + 2 | 0] = data32[i / 4 + 2 | 0];\r\n                    //framedata32[pos / 4 + 3 | 0] = data32[i / 4 + 3 | 0];\r\n                    pos = pos + 16 | 0;\r\n                    i = i + 16 | 0;\r\n                }\r\n            }\r\n            if (pos >= framesize) {\r\n                this.pausedbuffer = null;\r\n                this.pausedindex = -1;\r\n                this.pos = 0;\r\n                if (i != buffer.length - 1) {\r\n                    this.pausedbuffer = buffer;\r\n                    this.pausedindex = i;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        this.pos = pos;\r\n        this.pausedbuffer = null;\r\n        this.pausedindex = -1;\r\n        return false;\r\n    }\r\n}\r\nasync function captureAsync(...args) {\r\n    requireAlt1();\r\n    var i = 0;\r\n    var rect = (typeof args[i] == \"object\" ? args[i++] : { x: args[i++], y: args[i++], width: args[i++], height: args[i++] });\r\n    var format = args[i++] || \"raw\";\r\n    var quality = args[i++] || 0.6;\r\n    if (!hasAlt1Version(\"1.4.6\")) {\r\n        return capture(rect.x, rect.y, rect.width, rect.height);\r\n    }\r\n    var url = \"https://alt1api/pixel/getregion/\" + encodeURIComponent(JSON.stringify({ ...rect, format, quality }));\r\n    if (format == \"raw\") {\r\n        var res = await fetch(url);\r\n        var imgreader = new ImageStreamReader(res.body.getReader(), rect.width, rect.height);\r\n        return imgreader.nextImage();\r\n    }\r\n    else {\r\n        return _imagedetect__WEBPACK_IMPORTED_MODULE_0__[\"imageDataFromUrl\"](url);\r\n    }\r\n}\r\n/**\r\n * Asynchronously captures multple area's. This method captures the images in the same render frame if possible\r\n * @param areas\r\n */\r\nasync function captureMultiAsync(areas) {\r\n    requireAlt1();\r\n    var format = \"raw\";\r\n    var quality = 0.6;\r\n    var r = {};\r\n    var capts = [];\r\n    var captids = [];\r\n    for (var id in areas) {\r\n        if (areas[id]) {\r\n            capts.push(areas[id]);\r\n            captids.push(id);\r\n        }\r\n        else {\r\n            r[id] = null;\r\n        }\r\n    }\r\n    if (capts.length == 0) {\r\n        return r;\r\n    }\r\n    if (!hasAlt1Version(\"1.5.1\")) {\r\n        var proms = [];\r\n        for (var a = 0; a < capts.length; a++) {\r\n            proms.push(captureAsync(capts[a], format, quality));\r\n        }\r\n        var results = await Promise.all(proms);\r\n        for (var a = 0; a < capts.length; a++) {\r\n            r[captids[a]] = results[a];\r\n        }\r\n    }\r\n    else {\r\n        var res = await fetch(\"https://alt1api/pixel/getregionmulti/\" + encodeURIComponent(JSON.stringify({ areas: capts, format, quality })));\r\n        var imgreader = new ImageStreamReader(res.body.getReader());\r\n        for (var a = 0; a < capts.length; a++) {\r\n            var capt = capts[a];\r\n            imgreader.setFrameBuffer(new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](capt.width, capt.height));\r\n            r[captids[a]] = await imgreader.nextImage();\r\n        }\r\n    }\r\n    return r;\r\n}\r\n/**\r\n * Starts capturing a realtime stream of the game. Make sure you keep reading the stream and close it when you're done or Alt1 WILL crash\r\n * @param framecb Called whenever a new frame is decoded\r\n * @param errorcb Called whenever an error occurs, the error is rethrown if not defined\r\n * @param fps Maximum fps of the stream\r\n */\r\nfunction captureStream(x, y, width, height, fps, framecb, errorcb) {\r\n    requireAlt1();\r\n    if (!hasAlt1Version(\"1.4.6\")) {\r\n        throw new Alt1Error(\"This function is not supported in this version of Alt1\");\r\n    }\r\n    var url = \"https://alt1api/pixel/streamregion/\" + encodeURIComponent(JSON.stringify({ x, y, width, height, fps, format: \"raw\" }));\r\n    var res = fetch(url).then(async (res) => {\r\n        var reader = new ImageStreamReader(res.body.getReader(), width, height);\r\n        try {\r\n            while (!reader.closed && !state.closed) {\r\n                var img = await reader.nextImage();\r\n                if (!state.closed) {\r\n                    framecb(img);\r\n                    state.framenr++;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (!state.closed) {\r\n                reader.close();\r\n                if (errorcb) {\r\n                    errorcb(e);\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        if (!reader.closed && state.closed) {\r\n            reader.close();\r\n        }\r\n    });\r\n    var state = {\r\n        x, y, width, height,\r\n        framenr: 0,\r\n        close: () => { state.closed = true; },\r\n        closed: false,\r\n    };\r\n    return state;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/wrapper.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json":
/*!****************************************************************!*\
  !*** ../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\"chars\":[{\"width\":7,\"chr\":\"a\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,7,187,255,1,3,221,255,1,6,169,255,1,7,164,132,1,8,255,255,2,3,255,255,2,4,221,0,2,5,196,243,2,7,170,0,2,8,255,255,2,9,255,0,3,3,255,255,3,4,255,0,3,5,255,255,3,6,187,0,3,8,221,255,3,9,255,0,4,4,254,239,4,5,255,255,4,6,254,204,4,7,255,255,4,8,240,253,4,9,221,0,5,5,240,36,5,6,255,34,5,7,211,41,5,8,255,34,5,9,238,0]},{\"width\":7,\"chr\":\"b\",\"bonus\":175,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,248,209,1,4,243,178,1,5,230,75,1,6,230,75,1,7,243,178,1,8,246,194,1,9,204,0,2,3,255,255,2,4,204,0,2,5,170,0,2,8,255,255,2,9,187,0,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,4,3,169,255,4,4,254,171,4,7,169,255,4,9,255,0,5,4,204,128,5,5,232,205,5,6,205,233,5,8,170,0,6,6,187,0,6,7,187,0]},{\"width\":7,\"chr\":\"c\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,5,169,255,0,6,187,255,1,4,187,255,1,6,193,90,1,7,237,201,1,8,164,185,2,3,255,255,2,5,187,0,2,8,255,255,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,4,3,221,255,4,4,255,34,4,8,221,255,4,9,255,0,5,4,226,39,5,9,221,0]},{\"width\":7,\"chr\":\"d\",\"bonus\":180,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,187,255,1,4,169,255,1,6,205,85,1,7,232,187,1,8,203,213,2,3,255,255,2,5,170,0,2,8,255,255,2,9,170,0,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,4,3,203,255,4,4,254,171,4,7,169,255,4,8,187,255,4,9,255,0,5,1,203,255,5,2,225,251,5,3,225,251,5,4,248,227,5,5,244,231,5,6,230,245,5,7,230,245,5,8,237,219,5,9,187,0,6,2,204,0,6,3,221,0,6,4,221,0,6,5,221,0,6,6,221,0,6,7,221,0,6,8,221,0,6,9,204,0]},{\"width\":7,\"chr\":\"e\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,169,255,1,4,187,255,1,5,255,255,1,6,209,104,1,7,237,219,2,3,255,255,2,5,255,255,2,6,255,0,2,8,255,255,3,3,255,255,3,4,255,0,3,5,255,255,3,6,255,0,3,8,255,255,3,9,255,0,4,3,187,255,4,4,255,119,4,5,255,255,4,6,255,0,4,8,221,255,4,9,255,0,5,4,224,155,5,5,227,229,5,6,255,0,5,9,221,0,6,6,204,0]},{\"width\":4,\"chr\":\"f\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,3,203,255,1,2,221,255,1,3,255,255,1,4,248,227,1,5,225,251,1,6,225,251,1,7,225,251,1,8,210,247,2,1,255,255,2,3,255,255,2,4,255,0,2,5,221,0,2,6,221,0,2,7,221,0,2,8,221,0,2,9,204,0,3,2,255,0,3,4,255,0]},{\"width\":7,\"chr\":\"g\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,187,255,1,3,169,255,1,4,153,255,1,5,155,112,1,6,205,85,1,7,232,187,1,8,184,189,1,11,153,255,2,3,255,255,2,4,170,0,2,5,153,0,2,8,255,255,2,11,245,247,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,3,11,221,255,4,3,221,255,4,4,255,136,4,7,153,255,4,8,221,255,4,9,255,85,4,10,203,255,5,3,203,255,5,4,250,226,5,5,239,236,5,6,230,245,5,7,230,245,5,8,241,234,5,9,243,178,5,11,204,0,6,4,204,0,6,5,221,0,6,6,221,0,6,7,221,0,6,8,221,0,6,9,221,0,6,10,170,0]},{\"width\":7,\"chr\":\"h\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,243,178,1,4,248,209,1,5,230,75,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,255,255,2,4,170,0,2,5,204,0,3,3,255,255,3,4,255,0,4,3,169,255,4,4,255,221,4,5,221,255,4,6,221,255,4,7,221,255,4,8,203,255,5,4,175,25,5,5,226,39,5,6,226,39,5,7,226,39,5,8,226,39,5,9,204,0]},{\"width\":3,\"chr\":\"i\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,1,237,255,0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,238,0,1,4,211,41,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0]},{\"width\":4,\"chr\":\"j\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,11,153,255,1,11,169,255,2,1,203,255,2,3,203,255,2,4,225,251,2,5,225,251,2,6,225,251,2,7,225,251,2,8,225,251,2,9,225,251,3,2,204,0,3,4,204,0,3,5,221,0,3,6,221,0,3,7,221,0,3,8,221,0,3,9,221,0,3,10,221,0]},{\"width\":6,\"chr\":\"k\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,4,166,235,2,5,255,255,2,6,255,221,3,3,203,255,3,5,153,0,3,6,255,51,3,7,250,226,3,8,160,217,4,4,204,0,4,8,239,145]},{\"width\":3,\"chr\":\"l\",\"bonus\":75,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,2,9,255,0]},{\"width\":10,\"chr\":\"m\",\"bonus\":210,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,4,248,227,1,5,230,75,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,237,255,2,5,221,0,3,3,255,255,3,4,238,0,4,3,153,255,4,4,255,255,4,5,221,255,4,6,221,255,4,7,221,255,4,8,203,255,5,4,228,209,5,5,255,68,5,6,226,39,5,7,226,39,5,8,226,39,5,9,204,0,6,3,255,255,6,5,187,0,7,3,237,255,7,4,255,85,8,4,249,174,8,5,232,243,8,6,225,251,8,7,225,251,8,8,210,247,9,5,170,0,9,6,221,0,9,7,221,0,9,8,221,0,9,9,204,0]},{\"width\":7,\"chr\":\"n\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,4,248,227,1,5,232,93,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,237,255,2,5,221,0,3,3,255,255,3,4,238,0,4,3,237,255,4,4,255,85,5,4,249,174,5,5,232,243,5,6,225,251,5,7,225,251,5,8,210,247,6,5,170,0,6,6,221,0,6,7,221,0,6,8,221,0,6,9,204,0]},{\"width\":8,\"chr\":\"o\",\"bonus\":120,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,169,255,1,4,203,255,1,6,209,104,1,7,244,231,2,3,237,255,2,5,204,0,2,8,252,241,3,3,255,255,3,4,238,0,3,8,255,255,3,9,238,0,4,3,237,255,4,4,255,0,4,8,255,255,4,9,255,0,5,4,251,207,5,7,221,255,5,9,255,0,6,5,237,183,6,6,192,225,6,8,221,0,7,6,170,0,7,7,170,0]},{\"width\":6,\"chr\":\"p\",\"bonus\":170,\"secondary\":false,\"pixels\":[0,3,237,255,0,4,255,255,0,5,187,255,0,6,203,255,0,7,255,255,0,8,221,255,0,9,221,255,0,10,221,255,1,3,255,255,1,4,240,36,1,5,255,0,1,6,187,0,1,7,211,41,1,8,254,239,1,9,221,0,1,10,221,0,1,11,221,0,2,3,255,255,2,4,255,0,2,8,255,255,2,9,238,0,3,3,237,255,3,4,255,34,3,8,237,255,3,9,255,0,4,4,253,240,4,5,255,255,4,6,255,255,4,7,237,255,4,9,238,0,5,5,239,18,5,6,255,17,5,7,255,0,5,8,238,0]},{\"width\":7,\"chr\":\"q\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,187,255,1,3,169,255,1,4,153,255,1,5,155,112,1,6,205,85,1,7,228,171,1,8,209,207,2,3,255,255,2,4,170,0,2,5,153,0,2,8,255,255,2,9,170,0,3,3,237,255,3,4,255,17,3,8,237,255,3,9,255,0,4,3,255,255,4,4,255,255,4,5,191,250,4,6,187,255,4,7,255,255,4,8,239,254,4,9,253,223,4,10,221,255,5,4,255,34,5,5,255,34,5,6,196,45,5,7,196,45,5,8,255,34,5,9,240,36,5,10,226,39,5,11,221,0]},{\"width\":4,\"chr\":\"r\",\"bonus\":85,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,3,187,255,1,4,244,213,1,5,232,93,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,255,255,2,4,187,0,2,5,204,0,3,4,255,0]},{\"width\":6,\"chr\":\"s\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,4,187,255,1,3,255,255,1,5,250,243,1,8,255,255,2,3,255,255,2,4,255,0,2,5,155,196,2,6,246,123,2,8,255,255,2,9,255,0,3,3,255,255,3,4,255,0,3,6,245,247,3,7,164,132,3,8,255,255,3,9,255,0,4,4,255,17,4,7,250,191,4,9,255,0,5,8,187,0]},{\"width\":5,\"chr\":\"t\",\"bonus\":80,\"secondary\":false,\"pixels\":[1,2,221,255,1,3,255,255,1,4,235,240,1,5,221,255,1,6,221,255,1,7,169,255,2,3,255,255,2,4,255,34,2,5,226,39,2,6,226,39,2,7,232,93,2,8,249,243,3,4,255,0,3,8,187,209,3,9,238,0,4,9,153,0]},{\"width\":6,\"chr\":\"u\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,169,255,1,4,211,41,1,5,226,39,1,6,226,39,1,7,232,93,1,8,249,243,2,8,255,255,2,9,238,0,3,8,203,255,3,9,255,0,4,3,203,255,4,4,221,255,4,5,221,255,4,6,203,255,4,7,255,255,4,8,228,247,4,9,204,0,5,4,211,41,5,5,226,39,5,6,226,39,5,7,211,41,5,8,255,34,5,9,221,0]},{\"width\":6,\"chr\":\"v\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,3,237,255,1,4,247,141,1,5,245,247,1,6,203,255,2,6,241,54,2,7,255,255,2,8,255,255,3,5,153,255,3,6,255,255,3,7,173,226,3,8,255,51,3,9,255,0,4,3,237,255,4,4,203,255,4,6,153,0,4,7,255,0,4,8,153,0,5,4,238,0,5,5,204,0]},{\"width\":10,\"chr\":\"w\",\"bonus\":170,\"secondary\":false,\"pixels\":[1,3,153,255,1,4,243,249,1,5,187,255,2,4,153,0,2,5,243,71,2,6,228,171,2,7,243,249,2,8,187,255,3,6,217,239,3,7,248,244,3,8,248,157,3,9,187,0,4,3,169,255,4,4,255,255,4,7,204,0,4,8,238,0,4,9,153,0,5,4,244,231,5,5,255,221,5,6,191,159,6,5,223,19,6,6,237,128,6,7,255,255,6,8,223,253,7,6,239,254,7,7,227,229,7,8,255,119,7,9,221,0,8,3,237,255,8,4,203,255,8,7,238,0,8,8,204,0,9,4,238,0,9,5,204,0]},{\"width\":6,\"chr\":\"x\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,8,169,255,1,3,169,255,1,4,224,232,1,7,221,255,1,9,170,0,2,4,193,90,2,5,255,255,2,6,240,253,2,8,221,0,3,4,255,255,3,5,155,196,3,6,255,187,3,7,250,191,4,3,221,255,4,5,255,0,4,7,209,104,4,8,255,255,5,4,221,0,5,9,255,0]},{\"width\":6,\"chr\":\"y\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,3,255,255,0,4,153,255,0,11,221,255,1,4,255,85,1,5,234,222,1,6,228,247,1,11,196,243,2,6,207,21,2,7,246,194,2,8,255,255,2,9,237,255,3,6,237,255,3,7,191,250,3,8,205,85,3,9,255,0,3,10,238,0,4,3,203,255,4,4,221,255,4,7,238,0,4,8,187,0,5,4,204,0,5,5,221,0]},{\"width\":6,\"chr\":\"z\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,3,153,255,0,8,203,255,1,3,255,255,1,4,153,0,1,7,221,255,1,8,255,255,1,9,204,0,2,3,255,255,2,4,255,0,2,6,255,255,2,8,255,255,2,9,255,0,3,3,255,255,3,4,254,171,3,5,169,255,3,7,255,0,3,8,255,255,3,9,255,0,4,3,255,255,4,4,255,119,4,5,170,0,4,6,170,0,4,8,255,255,4,9,255,0,5,4,255,0,5,9,255,0]},{\"width\":8,\"chr\":\"A\",\"bonus\":155,\"secondary\":false,\"pixels\":[0,8,153,255,1,6,221,255,1,7,237,255,1,9,153,0,2,3,169,255,2,4,255,255,2,5,187,255,2,6,255,255,2,7,221,0,2,8,238,0,3,1,255,255,3,2,255,255,3,4,170,0,3,5,255,0,3,6,255,255,3,7,255,0,4,2,255,255,4,3,254,239,4,4,184,189,4,6,255,255,4,7,255,0,5,3,255,34,5,4,247,141,5,5,255,255,5,6,255,255,5,7,255,102,6,6,255,85,6,7,255,187,6,8,255,255,7,8,187,0,7,9,255,0]},{\"width\":7,\"chr\":\"B\",\"bonus\":225,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,255,255,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,1,255,255,2,2,255,0,2,4,255,255,2,5,255,0,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,4,255,255,3,5,255,0,3,8,255,255,3,9,255,0,4,1,221,255,4,2,255,85,4,4,255,255,4,5,254,171,4,8,203,255,4,9,255,0,5,2,243,178,5,3,198,219,5,5,255,102,5,6,232,205,5,7,180,217,5,9,204,0,6,3,170,0,6,4,170,0,6,7,187,0,6,8,153,0]},{\"width\":9,\"chr\":\"C\",\"bonus\":155,\"secondary\":false,\"pixels\":[0,4,187,255,0,5,187,255,1,2,221,255,1,3,153,255,1,4,155,112,1,5,205,85,1,6,228,171,1,7,224,232,2,1,169,255,2,3,221,0,2,4,153,0,2,7,194,135,2,8,237,183,3,1,255,255,3,2,170,0,3,8,255,255,3,9,170,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,255,255,5,2,255,0,5,8,255,255,5,9,255,0,6,1,169,255,6,2,255,102,6,8,169,255,6,9,255,0,7,2,181,48,7,9,170,0]},{\"width\":8,\"chr\":\"D\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,1,255,255,2,2,255,0,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,8,255,255,3,9,255,0,4,1,203,255,4,2,255,68,4,8,203,255,4,9,255,0,5,2,248,227,5,3,168,207,5,7,221,255,5,9,204,0,6,3,237,128,6,4,223,214,6,5,205,233,6,6,155,196,6,8,221,0,7,5,187,0,7,6,187,0]},{\"width\":6,\"chr\":\"E\",\"bonus\":180,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,0,3,8,255,255,3,9,255,0,4,1,153,255,4,2,255,0,4,6,255,0,4,8,221,255,4,9,255,0,5,2,153,0,5,9,221,0]},{\"width\":6,\"chr\":\"F\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,0,4,2,255,0,4,6,255,0]},{\"width\":9,\"chr\":\"G\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,4,169,255,0,5,187,255,1,2,203,255,1,3,153,255,1,5,193,90,1,6,224,155,1,7,237,238,2,1,169,255,2,3,204,0,2,4,153,0,2,7,175,124,2,8,246,194,3,1,255,255,3,2,170,0,3,8,255,255,3,9,187,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,255,255,5,2,255,0,5,8,237,255,5,9,255,0,6,1,169,255,6,2,255,85,6,5,255,255,6,7,153,255,6,8,169,255,6,9,238,0,7,2,175,25,7,5,153,255,7,6,255,221,7,7,225,251,7,8,234,222,7,9,170,0,8,6,153,0,8,7,221,0,8,8,221,0,8,9,204,0]},{\"width\":8,\"chr\":\"H\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,5,255,255,2,6,255,0,3,5,255,255,3,6,255,0,4,5,255,255,4,6,255,0,5,5,255,255,5,6,255,34,6,1,203,255,6,2,225,251,6,3,225,251,6,4,225,251,6,5,225,251,6,6,255,221,6,7,225,251,6,8,210,247,7,2,204,0,7,3,221,0,7,4,221,0,7,5,221,0,7,6,221,0,7,7,221,0,7,8,221,0,7,9,204,0]},{\"width\":4,\"chr\":\"I\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,1,191,255,0,8,191,255,1,1,255,255,1,2,255,255,1,3,255,255,1,4,255,255,1,5,255,255,1,6,255,255,1,7,255,255,1,8,255,255,1,9,191,0,2,1,191,255,2,2,255,0,2,3,255,0,2,4,255,0,2,5,255,0,2,6,255,0,2,7,255,0,2,8,255,191,2,9,255,0,3,2,192,0,3,9,191,0]},{\"width\":6,\"chr\":\"J\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,6,153,255,0,7,153,255,1,7,194,135,1,8,234,222,2,1,221,255,2,8,255,255,2,9,204,0,3,1,255,255,3,2,226,39,3,8,203,255,3,9,255,0,4,1,203,255,4,2,255,221,4,3,225,251,4,4,225,251,4,5,225,251,4,6,225,251,4,7,166,235,4,9,204,0,5,2,204,0,5,3,221,0,5,4,221,0,5,5,221,0,5,6,221,0,5,7,221,0,5,8,153,0]},{\"width\":7,\"chr\":\"K\",\"bonus\":155,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,255,255,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,4,255,255,2,5,255,102,3,3,221,255,3,5,254,171,3,6,224,232,4,1,203,255,4,2,153,255,4,4,221,0,4,6,193,90,4,7,251,242,4,8,173,226,5,2,204,0,5,3,153,0,5,8,247,141,5,9,153,0]},{\"width\":6,\"chr\":\"L\",\"bonus\":115,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,8,255,255,2,9,255,0,3,8,255,255,3,9,255,0,4,8,255,255,4,9,255,0,5,9,255,0]},{\"width\":9,\"chr\":\"M\",\"bonus\":240,\"secondary\":false,\"pixels\":[0,1,245,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,0,8,255,255,1,2,251,173,1,3,255,225,1,4,255,85,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,0,1,9,255,0,2,3,191,83,2,4,249,212,2,5,212,229,3,5,226,119,3,6,249,237,3,7,165,227,4,6,241,245,4,7,245,155,4,8,155,32,5,4,207,255,5,5,191,254,5,7,232,0,6,2,169,255,6,3,223,255,6,5,207,0,6,6,190,0,7,1,245,255,7,2,255,255,7,3,255,255,7,4,255,255,7,5,255,255,7,6,255,255,7,7,255,255,7,8,255,255,8,2,245,0,8,3,255,0,8,4,255,0,8,5,255,0,8,6,255,0,8,7,255,0,8,8,255,0,8,9,255,0]},{\"width\":8,\"chr\":\"N\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,255,255,1,3,235,111,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,255,221,2,4,163,160,3,4,246,194,3,5,214,223,4,5,214,122,4,6,246,229,5,6,163,160,5,7,255,255,6,1,203,255,6,2,225,251,6,3,225,251,6,4,225,251,6,5,225,251,6,6,225,251,6,7,235,240,6,8,254,204,7,2,204,0,7,3,221,0,7,4,221,0,7,5,221,0,7,6,221,0,7,7,221,0,7,8,221,0,7,9,204,0]},{\"width\":10,\"chr\":\"O\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,4,187,255,0,5,169,255,1,2,203,255,1,3,153,255,1,5,205,85,1,6,226,192,1,7,224,232,2,1,153,255,2,3,204,0,2,4,153,0,2,7,209,145,2,8,234,167,3,1,255,255,3,2,153,0,3,8,255,255,3,9,153,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,255,255,5,2,255,0,5,8,255,255,5,9,255,0,6,1,153,255,6,2,255,102,6,8,153,255,6,9,255,0,7,2,234,222,7,3,194,201,7,6,169,255,7,7,203,255,7,9,153,0,8,3,225,116,8,4,228,209,8,5,192,225,8,7,170,0,8,8,204,0,9,5,187,0,9,6,170,0]},{\"width\":7,\"chr\":\"P\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,0,4,1,187,255,4,2,255,136,4,5,187,255,4,6,255,0,5,2,224,155,5,3,239,236,5,6,187,0,6,4,221,0]},{\"width\":9,\"chr\":\"Q\",\"bonus\":185,\"secondary\":false,\"pixels\":[0,4,187,255,0,5,187,255,1,2,221,255,1,4,155,112,1,5,205,85,1,6,228,171,1,7,235,240,2,1,187,255,2,3,221,0,2,7,187,116,2,8,243,178,3,1,255,255,3,2,187,0,3,8,255,255,3,9,170,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,237,255,5,2,255,0,5,8,237,255,5,9,255,0,6,2,251,207,6,7,255,255,6,9,238,0,7,3,255,255,7,4,203,255,7,5,221,255,7,6,255,255,7,7,155,196,7,8,254,204,8,4,255,17,8,5,207,21,8,6,221,0,8,7,255,0,8,9,204,0]},{\"width\":7,\"chr\":\"R\",\"bonus\":180,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,187,4,2,254,239,4,3,203,255,4,4,255,255,4,6,255,68,4,7,250,243,4,8,181,239,5,3,239,18,5,4,204,0,5,5,255,0,5,8,245,107,5,9,170,0]},{\"width\":6,\"chr\":\"S\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,2,153,255,0,3,169,255,1,1,203,255,1,3,187,116,1,4,244,231,1,8,243,249,2,1,255,255,2,2,204,0,2,4,198,219,2,5,232,93,2,8,255,255,2,9,238,0,3,1,255,255,3,2,255,0,3,5,255,255,3,8,255,255,3,9,255,0,4,1,169,255,4,2,255,68,4,5,160,217,4,6,255,221,4,7,237,255,4,9,255,0,5,2,170,0,5,7,223,19,5,8,238,0]},{\"width\":8,\"chr\":\"T\",\"bonus\":125,\"secondary\":false,\"pixels\":[0,1,255,255,1,1,255,255,1,2,255,0,2,1,255,255,2,2,255,34,3,1,255,255,3,2,255,221,3,3,225,251,3,4,225,251,3,5,225,251,3,6,225,251,3,7,225,251,3,8,210,247,4,1,255,255,4,2,255,0,4,3,221,0,4,4,221,0,4,5,221,0,4,6,221,0,4,7,221,0,4,8,221,0,4,9,204,0,5,1,255,255,5,2,255,0,6,2,255,0]},{\"width\":8,\"chr\":\"U\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,187,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,230,75,1,7,232,187,1,8,184,189,2,8,255,255,3,8,255,255,3,9,255,0,4,8,221,255,4,9,255,0,5,1,203,255,5,2,221,255,5,3,221,255,5,4,221,255,5,5,221,255,5,6,255,255,5,7,237,255,5,9,221,0,6,2,211,41,6,3,226,39,6,4,226,39,6,5,226,39,6,6,223,19,6,7,255,0,6,8,238,0]},{\"width\":7,\"chr\":\"V\",\"bonus\":125,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,187,255,1,2,255,68,1,3,228,171,1,4,255,255,1,5,153,255,2,4,153,0,2,5,255,85,2,6,228,209,2,7,242,251,3,6,164,185,3,7,255,255,3,8,251,207,4,4,203,255,4,5,237,255,4,8,255,0,4,9,204,0,5,1,169,255,5,2,255,255,5,3,153,255,5,5,204,0,5,6,238,0,6,2,170,0,6,3,255,0,6,4,153,0]},{\"width\":10,\"chr\":\"W\",\"bonus\":245,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,221,255,1,2,255,17,1,3,237,128,1,4,223,214,1,5,255,255,1,6,203,255,2,5,191,23,2,6,255,136,2,7,255,255,2,8,255,255,3,3,153,255,3,4,237,255,3,5,221,255,3,7,168,103,3,8,255,0,3,9,255,0,4,1,255,255,4,2,255,255,4,3,187,209,4,4,153,0,4,5,238,0,4,6,221,0,5,2,255,102,5,3,254,171,5,4,248,244,5,5,203,255,6,4,170,0,6,5,241,54,6,6,231,150,6,7,255,255,6,8,255,255,7,4,153,255,7,5,237,255,7,6,241,252,7,7,207,188,7,8,255,85,7,9,255,0,8,1,237,255,8,2,237,255,8,3,153,255,8,4,153,171,8,5,153,0,8,6,238,0,8,7,238,0,8,8,153,0,9,2,238,0,9,3,238,0,9,4,153,0]},{\"width\":7,\"chr\":\"X\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,8,169,255,1,1,187,255,1,2,220,236,1,7,237,255,1,9,170,0,2,2,205,85,2,3,248,227,2,4,166,235,2,5,255,255,2,6,153,255,2,8,238,0,3,3,155,196,3,4,255,255,3,5,248,244,3,6,255,51,3,7,153,0,4,2,237,255,4,5,255,51,4,6,251,207,4,7,186,233,5,1,203,255,5,3,238,0,5,7,225,116,5,8,255,255,6,2,204,0,6,9,255,0]},{\"width\":7,\"chr\":\"Y\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,1,169,255,1,2,249,243,2,3,248,157,2,4,255,255,3,4,241,234,3,5,254,204,3,6,232,243,3,7,225,251,3,8,210,247,4,3,255,255,4,5,221,0,4,6,204,0,4,7,221,0,4,8,221,0,4,9,204,0,5,1,237,255,5,4,255,0,6,2,238,0]},{\"width\":7,\"chr\":\"Z\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,8,187,255,1,1,255,255,1,7,221,255,1,8,255,255,1,9,187,0,2,1,255,255,2,2,255,0,2,5,203,255,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,4,203,255,3,6,204,0,3,8,255,255,3,9,255,0,4,1,255,255,4,2,255,221,4,5,204,0,4,8,255,255,4,9,255,0,5,1,187,255,5,2,255,34,5,3,221,0,5,8,153,255,5,9,255,0,6,2,187,0,6,9,153,0]},{\"width\":7,\"chr\":\"0\",\"bonus\":170,\"secondary\":false,\"pixels\":[0,2,153,255,0,3,221,255,0,4,255,255,0,5,255,255,0,6,237,255,0,7,169,255,1,1,187,255,1,3,153,0,1,4,221,0,1,5,255,0,1,6,255,0,1,7,243,71,1,8,237,219,2,1,187,255,2,2,187,0,2,8,205,233,2,9,211,41,3,1,221,255,3,2,205,85,3,8,203,255,3,9,187,0,4,2,243,178,4,3,255,255,4,4,187,255,4,5,187,255,4,6,237,255,4,7,169,255,4,9,204,0,5,3,170,0,5,4,255,0,5,5,187,0,5,6,187,0,5,7,238,0,5,8,170,0]},{\"width\":7,\"chr\":\"1\",\"bonus\":100,\"secondary\":false,\"pixels\":[1,8,187,255,2,1,203,255,2,2,224,232,2,3,219,218,2,4,187,255,2,5,187,255,2,6,187,255,2,7,187,255,2,8,237,255,2,9,187,0,3,2,218,80,3,3,218,80,3,4,205,85,3,5,205,85,3,6,205,85,3,7,205,85,3,8,241,215,3,9,238,0,4,8,168,207,4,9,204,0]},{\"width\":7,\"chr\":\"2\",\"bonus\":105,\"secondary\":false,\"pixels\":[1,8,255,255,2,1,187,255,2,6,153,255,2,8,223,214,2,9,255,0,3,1,203,255,3,2,187,0,3,5,153,255,3,7,153,0,3,8,219,218,3,9,187,0,4,1,187,255,4,2,234,167,4,4,203,255,4,6,153,0,4,8,187,255,4,9,187,0,5,2,214,122,5,3,200,152,5,5,204,0,5,9,187,0]},{\"width\":7,\"chr\":\"3\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,8,203,255,1,1,187,255,1,8,191,250,1,9,204,0,2,1,187,255,2,2,196,45,2,4,187,255,2,5,174,150,2,8,203,255,2,9,187,0,3,2,246,229,3,3,210,247,3,5,241,215,3,6,173,175,3,7,169,255,3,9,204,0,4,3,227,57,4,4,204,0,4,6,228,133,4,7,174,150,4,8,170,0]},{\"width\":7,\"chr\":\"4\",\"bonus\":150,\"secondary\":false,\"pixels\":[0,6,237,255,1,4,187,255,1,6,219,218,1,7,238,0,2,3,169,255,2,5,187,0,2,6,219,218,2,7,187,0,3,1,187,255,3,2,153,255,3,3,155,112,3,4,193,90,3,6,203,255,3,7,205,85,4,1,187,255,4,2,237,201,4,3,228,209,4,4,205,233,4,5,205,233,4,6,242,251,4,7,241,198,4,8,205,233,5,2,187,0,5,3,187,0,5,4,187,0,5,5,187,0,5,6,224,155,5,7,238,0,5,8,187,0,5,9,187,0]},{\"width\":7,\"chr\":\"5\",\"bonus\":130,\"secondary\":false,\"pixels\":[1,1,237,255,1,2,187,255,1,3,187,255,1,4,187,255,1,8,207,251,2,1,187,255,2,2,238,0,2,3,187,0,2,4,237,201,2,5,187,0,2,8,187,255,2,9,204,0,3,1,187,255,3,2,187,0,3,4,203,255,3,5,191,23,3,8,203,255,3,9,187,0,4,2,187,0,4,5,251,242,4,6,191,250,4,7,221,255,4,9,204,0,5,6,243,71,5,7,191,23,5,8,221,0]},{\"width\":7,\"chr\":\"6\",\"bonus\":150,\"secondary\":false,\"pixels\":[0,3,169,255,0,4,255,255,0,5,255,255,0,6,237,255,0,7,153,255,1,2,187,255,1,4,209,145,1,5,255,68,1,6,255,0,1,7,246,123,1,8,228,209,2,1,203,255,2,3,187,0,2,4,200,238,2,8,219,218,2,9,187,0,3,1,187,255,3,2,204,0,3,4,203,255,3,5,205,85,3,8,187,255,3,9,187,0,4,2,187,0,4,5,248,227,4,6,255,255,4,7,187,255,4,9,187,0,5,6,221,0,5,7,255,0,5,8,187,0]},{\"width\":7,\"chr\":\"7\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,1,187,255,1,1,187,255,1,2,187,0,1,8,203,255,2,1,187,255,2,2,187,0,2,6,237,255,2,7,153,255,2,9,204,0,3,1,187,255,3,2,205,85,3,3,153,255,3,4,221,255,3,7,238,0,3,8,153,0,4,1,255,255,4,2,237,201,4,4,153,0,4,5,221,0,5,2,255,0,5,3,187,0]},{\"width\":7,\"chr\":\"8\",\"bonus\":165,\"secondary\":false,\"pixels\":[1,2,237,255,1,3,221,255,1,6,203,255,1,7,228,247,2,1,203,255,2,3,241,54,2,4,248,209,2,5,186,233,2,7,207,21,2,8,250,226,3,1,187,255,3,2,204,0,3,4,186,233,3,5,221,98,3,6,170,0,3,8,191,250,3,9,221,0,4,1,221,255,4,2,209,104,4,4,169,255,4,5,237,219,4,8,187,255,4,9,187,0,5,2,243,178,5,3,187,209,5,5,204,128,5,6,251,242,5,7,240,253,5,9,187,0,6,3,170,0,6,4,153,0,6,7,238,0,6,8,238,0]},{\"width\":7,\"chr\":\"9\",\"bonus\":160,\"secondary\":false,\"pixels\":[1,2,221,255,1,3,191,250,1,4,242,251,1,8,153,255,2,1,203,255,2,3,221,0,2,4,191,23,2,5,253,223,2,8,191,250,2,9,153,0,3,1,187,255,3,2,204,0,3,5,191,250,3,6,221,0,3,8,203,255,3,9,187,0,4,1,187,255,4,2,218,139,4,6,200,65,4,7,169,255,4,9,204,0,5,2,228,171,5,3,245,247,5,4,255,255,5,5,255,255,5,6,223,214,5,8,170,0,6,3,153,0,6,4,238,0,6,5,255,0,6,6,255,0,6,7,187,0]},{\"width\":8,\"chr\":\"%\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,3,255,255,0,8,255,255,1,2,255,255,1,4,255,255,1,7,255,255,1,9,255,0,2,3,255,255,2,5,255,41,2,6,255,255,2,8,255,0,3,4,255,41,3,5,255,255,3,7,255,0,4,4,255,255,4,6,255,92,4,7,255,255,5,3,255,255,5,5,255,0,5,6,255,255,5,8,255,255,6,2,255,255,6,4,255,0,6,7,255,255,6,9,255,0,7,3,255,0,7,8,255,0]},{\"width\":4,\"chr\":\"/\",\"bonus\":80,\"secondary\":false,\"pixels\":[0,7,153,255,0,8,237,255,0,9,221,255,1,4,187,255,1,5,237,255,1,6,169,255,1,8,153,0,1,9,238,0,1,10,221,0,2,1,221,255,2,2,221,255,2,5,187,0,2,6,238,0,2,7,170,0,3,2,221,0,3,3,221,0]},{\"width\":7,\"chr\":\"+\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,5,221,255,1,5,255,255,1,6,221,0,2,5,255,255,2,6,255,34,3,2,153,255,3,3,223,253,3,4,225,251,3,5,255,255,3,6,255,221,3,7,225,251,3,8,210,247,4,3,153,0,4,4,221,0,4,5,255,255,4,6,255,0,4,7,221,0,4,8,221,0,4,9,204,0,5,5,255,255,5,6,255,0,6,6,255,0]},{\"width\":5,\"chr\":\"?\",\"bonus\":75,\"secondary\":false,\"pixels\":[0,1,169,255,1,1,255,255,1,2,170,0,1,6,221,255,1,8,255,255,2,1,255,255,2,2,255,0,2,5,169,255,2,7,221,0,2,9,255,0,3,2,255,255,3,3,221,255,3,6,170,0,4,3,255,17,4,4,221,0]},{\"width\":2,\"chr\":\"!\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,1,169,255,0,2,187,255,0,3,187,255,0,4,187,255,0,5,187,255,0,6,169,255,0,8,255,255,1,2,181,48,1,3,196,45,1,4,196,45,1,5,196,45,1,6,196,45,1,7,170,0,1,9,255,0]},{\"width\":8,\"chr\":\"@\",\"bonus\":230,\"secondary\":false,\"pixels\":[0,4,255,255,0,5,255,255,0,6,221,255,0,7,255,255,0,8,187,255,1,3,221,255,1,5,255,0,1,6,255,34,1,7,221,0,1,8,255,68,1,9,250,243,2,2,221,255,2,4,232,93,2,5,255,255,2,6,237,255,2,7,255,255,2,10,248,157,3,2,255,255,3,3,221,0,3,4,255,255,3,6,255,0,3,7,241,54,3,8,254,204,3,10,214,223,3,11,153,0,4,2,237,255,4,3,255,0,4,4,255,255,4,5,255,0,4,8,255,255,4,9,204,0,4,11,187,0,5,3,253,240,5,4,255,255,5,5,255,221,5,6,221,255,5,7,221,255,5,8,237,255,5,9,255,0,6,4,240,36,6,5,255,34,6,6,226,39,6,7,226,39,6,8,250,226,6,9,238,0,7,9,221,0]},{\"width\":8,\"chr\":\"#\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,6,255,255,1,3,255,255,1,6,255,255,1,7,254,171,1,8,237,255,2,1,169,255,2,2,237,255,2,3,255,255,2,4,255,221,2,5,175,247,2,6,255,255,2,7,255,85,2,8,170,0,2,9,238,0,3,2,170,0,3,3,255,255,3,4,255,0,3,5,221,0,3,6,255,255,3,7,255,0,4,3,255,255,4,4,255,153,4,5,203,255,4,6,255,255,4,7,254,239,4,8,187,255,5,1,255,255,5,2,187,255,5,3,255,255,5,4,255,85,5,5,159,27,5,6,255,255,5,7,255,0,5,8,238,0,5,9,187,0,6,2,255,0,6,3,255,255,6,4,255,0,6,7,255,0,7,4,255,0]},{\"width\":6,\"chr\":\"$\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,2,153,255,0,3,169,255,1,1,203,255,1,3,187,116,1,4,244,231,1,8,243,249,2,0,203,255,2,1,237,255,2,2,204,0,2,4,176,197,2,5,237,128,2,8,240,253,2,9,251,207,3,1,251,242,3,2,239,18,3,5,247,245,3,6,164,132,3,8,255,255,3,9,240,36,3,10,204,0,4,2,240,36,4,6,249,174,4,7,198,219,4,9,255,0,5,7,170,0,5,8,170,0]},{\"width\":6,\"chr\":\"^\",\"bonus\":75,\"secondary\":false,\"pixels\":[0,4,153,255,0,5,237,255,1,2,203,255,1,3,221,255,1,5,153,0,1,6,238,0,2,1,221,255,2,2,230,245,2,3,218,80,2,4,221,0,3,2,227,57,3,3,246,194,3,4,230,245,4,4,187,0,4,5,239,145]},{\"width\":6,\"chr\":\"~\",\"bonus\":35,\"secondary\":false,\"pixels\":[1,5,255,255,2,5,221,255,2,6,255,51,3,6,250,226,4,5,203,255,4,7,221,0,5,6,204,0]},{\"width\":7,\"chr\":\"&\",\"bonus\":175,\"secondary\":false,\"pixels\":[0,6,187,255,1,2,237,255,1,3,255,255,1,4,191,250,1,5,187,255,1,7,224,155,1,8,223,214,2,1,255,255,2,3,238,0,2,4,255,255,2,5,191,23,2,6,187,0,2,8,255,255,2,9,187,0,3,1,255,255,3,2,255,0,3,4,255,255,3,5,255,0,3,8,255,255,3,9,255,0,4,2,255,0,4,4,255,255,4,5,255,34,4,8,187,255,4,9,255,0,5,3,203,255,5,4,255,255,5,5,255,221,5,6,196,243,5,7,155,196,5,9,187,0,6,4,234,167,6,5,255,0,6,6,221,0,6,7,187,0]},{\"width\":6,\"chr\":\"*\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,2,169,255,1,2,169,255,1,3,237,219,1,4,255,255,2,1,203,255,2,2,240,253,2,3,255,255,2,4,228,133,2,5,255,0,3,2,237,183,3,3,245,107,3,4,255,153,4,3,170,0,4,5,153,0]},{\"width\":4,\"chr\":\"(\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,3,173,255,0,4,239,255,0,5,253,255,0,6,229,255,0,7,171,255,1,1,193,255,1,2,203,255,1,4,188,64,1,5,241,25,1,6,252,46,1,7,240,112,1,8,238,218,1,9,210,232,2,0,209,255,2,2,194,2,2,3,204,0,2,9,223,111,2,10,245,224,3,1,210,0,3,11,216,0]},{\"width\":4,\"chr\":\")\",\"bonus\":75,\"secondary\":false,\"pixels\":[1,0,211,255,1,10,215,255,2,1,244,203,2,2,222,234,2,8,203,255,2,9,191,255,2,11,216,0,3,2,213,94,3,3,238,186,3,4,246,248,3,5,253,255,3,6,231,253,3,7,186,234,3,9,203,1,3,10,191,0]},{\"width\":7,\"chr\":\"_\",\"bonus\":60,\"secondary\":false,\"pixels\":[0,9,153,255,1,9,255,255,1,10,153,0,2,9,255,255,2,10,255,0,3,9,255,255,3,10,255,0,4,9,255,255,4,10,255,0,5,9,255,255,5,10,255,0,6,10,255,0]},{\"width\":4,\"chr\":\"-\",\"bonus\":30,\"secondary\":true,\"pixels\":[0,5,255,255,1,5,255,255,1,6,255,0,2,5,255,255,2,6,255,0,3,6,255,0]},{\"width\":8,\"chr\":\"=\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,4,255,255,0,6,255,255,1,4,255,255,1,5,255,0,1,6,255,255,1,7,255,0,2,4,255,255,2,5,255,0,2,6,255,255,2,7,255,0,3,4,255,255,3,5,255,0,3,6,255,255,3,7,255,0,4,4,255,255,4,5,255,0,4,6,255,255,4,7,255,0,5,5,255,0,5,7,255,0]},{\"width\":3,\"chr\":\"[\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,0,203,255,0,1,221,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,0,237,255,1,1,211,41,1,2,226,39,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,252,241,1,9,204,0,2,1,238,0,2,9,238,0]},{\"width\":3,\"chr\":\"]\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,0,237,255,0,8,237,255,1,0,203,255,1,1,253,223,1,2,225,251,1,3,225,251,1,4,225,251,1,5,225,251,1,6,225,251,1,7,225,251,1,8,210,247,1,9,238,0,2,1,204,0,2,2,221,0,2,3,221,0,2,4,221,0,2,5,221,0,2,6,221,0,2,7,221,0,2,8,221,0,2,9,204,0]},{\"width\":5,\"chr\":\"{\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,5,153,255,1,2,169,255,1,3,221,255,1,4,221,255,1,5,203,255,1,6,255,255,1,7,221,255,1,8,169,255,2,1,237,255,2,3,181,48,2,4,223,19,2,5,221,0,2,6,207,21,2,7,255,34,2,8,232,93,2,9,249,243,3,2,238,0,3,10,238,0]},{\"width\":5,\"chr\":\"}\",\"bonus\":90,\"secondary\":false,\"pixels\":[1,1,237,255,1,9,237,255,2,2,249,174,2,3,232,243,2,4,225,251,2,5,207,251,2,6,255,255,2,7,223,253,2,8,181,239,2,10,238,0,3,3,170,0,3,4,221,0,3,5,241,162,3,6,204,0,3,7,255,0,3,8,221,0,3,9,170,0,4,6,153,0]},{\"width\":3,\"chr\":\":\",\"bonus\":20,\"secondary\":true,\"pixels\":[1,3,255,255,1,7,255,255,2,4,255,0,2,8,255,0]},{\"width\":3,\"chr\":\";\",\"bonus\":40,\"secondary\":true,\"pixels\":[0,9,201,255,1,3,255,255,1,7,241,255,1,8,255,255,1,10,201,0,2,4,255,0,2,8,241,0,2,9,255,0]},{\"width\":3,\"chr\":\"\\\"\",\"bonus\":30,\"secondary\":true,\"pixels\":[0,1,255,255,0,2,255,255,1,2,255,0,1,3,255,0,2,1,255,255,2,2,255,255]},{\"width\":2,\"chr\":\"'\",\"bonus\":20,\"secondary\":true,\"pixels\":[0,1,255,255,0,2,177,255,1,2,255,30,1,3,177,0]},{\"width\":7,\"chr\":\"<\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,5,203,255,1,5,255,255,1,6,228,133,2,4,237,255,2,6,254,239,3,4,169,255,3,5,238,0,3,6,175,247,3,7,243,89,4,3,221,255,4,5,170,0,4,7,244,231,5,4,221,0,5,8,221,0]},{\"width\":7,\"chr\":\">\",\"bonus\":80,\"secondary\":false,\"pixels\":[0,3,203,255,0,7,203,255,1,4,228,133,1,7,187,255,1,8,204,0,2,4,247,245,2,6,255,255,2,8,187,0,3,4,175,247,3,5,248,157,3,6,203,255,3,7,255,0,4,5,255,255,4,6,173,75,4,7,204,0,5,6,255,0]},{\"width\":5,\"chr\":\"\\\\\",\"bonus\":70,\"secondary\":false,\"pixels\":[1,1,153,255,1,2,255,255,1,3,203,255,2,2,153,0,2,3,255,51,2,4,231,150,2,5,255,255,2,6,203,255,3,6,255,34,3,7,231,150,3,8,255,255,3,9,207,251,4,9,255,0,4,10,204,0]},{\"width\":2,\"chr\":\".\",\"bonus\":10,\"secondary\":true,\"pixels\":[0,8,255,255,1,9,255,0]},{\"width\":3,\"chr\":\",\",\"bonus\":30,\"secondary\":true,\"pixels\":[0,9,205,255,1,7,205,255,1,8,255,255,1,10,205,0,2,8,205,0,2,9,255,0]},{\"width\":3,\"chr\":\"|\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,1,221,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,221,255,0,9,221,255,0,10,203,255,1,2,226,39,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,226,39,1,10,226,39,1,11,204,0]}],\"width\":10,\"spacewidth\":3,\"shadow\":true,\"height\":12,\"basey\":8}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json\n");

/***/ }),

/***/ "../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json":
/*!*****************************************************************************!*\
  !*** ../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\"chars\":[{\"width\":7,\"chr\":\"0\",\"bonus\":120,\"secondary\":false,\"pixels\":[0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,1,1,255,255,1,3,255,0,1,4,255,0,1,5,255,0,1,6,255,255,2,0,255,255,2,2,255,0,2,7,255,255,3,1,255,255,3,6,255,255,3,8,255,0,4,2,255,255,4,3,255,255,4,4,255,255,4,5,255,255,4,7,255,0,5,3,255,0,5,4,255,0,5,5,255,0,5,6,255,0]},{\"width\":4,\"chr\":\"1\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,1,255,255,0,7,255,255,1,0,255,255,1,1,255,255,1,2,255,255,1,3,255,255,1,4,255,255,1,5,255,255,1,6,255,255,1,7,255,255,1,8,255,0,2,1,255,0,2,2,255,0,2,3,255,0,2,4,255,0,2,5,255,0,2,6,255,0,2,7,255,255,2,8,255,0]},{\"width\":7,\"chr\":\"2\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,1,255,255,0,6,255,255,0,7,255,255,1,0,255,255,1,2,255,0,1,5,255,255,1,7,255,255,1,8,255,0,2,0,255,255,2,1,255,0,2,4,255,255,2,6,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,3,255,255,3,5,255,0,3,7,255,255,3,8,255,0,4,1,255,255,4,2,255,255,4,4,255,0,4,7,255,255,4,8,255,0,5,2,255,0,5,3,255,0,5,8,255,0]},{\"width\":6,\"chr\":\"3\",\"bonus\":115,\"secondary\":false,\"pixels\":[0,1,255,255,0,6,255,255,1,0,255,255,1,2,255,0,1,3,255,255,1,7,255,255,2,0,255,255,2,1,255,0,2,3,255,255,2,4,255,0,2,7,255,255,2,8,255,0,3,1,255,255,3,2,255,255,3,4,255,255,3,5,255,255,3,6,255,255,3,8,255,0,4,2,255,0,4,3,255,0,4,5,255,0,4,6,255,0,4,7,255,0]},{\"width\":5,\"chr\":\"4\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,0,255,255,0,1,255,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,1,1,255,0,1,2,255,0,1,3,255,0,1,4,255,0,1,5,255,255,1,6,255,0,2,3,255,255,2,4,255,255,2,5,255,255,2,6,255,255,2,7,255,255,3,4,255,0,3,5,255,255,3,6,255,0,3,7,255,0,3,8,255,0]},{\"width\":6,\"chr\":\"5\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,0,255,255,0,1,255,255,0,2,255,255,0,3,255,255,0,6,255,255,1,0,255,255,1,1,255,0,1,2,255,0,1,3,255,255,1,4,255,0,1,7,255,255,2,0,255,255,2,1,255,0,2,3,255,255,2,4,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,4,255,255,3,5,255,255,3,6,255,255,3,8,255,0,4,1,255,0,4,5,255,0,4,6,255,0,4,7,255,0]},{\"width\":7,\"chr\":\"6\",\"bonus\":160,\"secondary\":false,\"pixels\":[0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,1,1,255,255,1,3,255,0,1,4,255,255,1,5,255,0,1,6,255,0,1,7,255,255,2,0,255,255,2,2,255,0,2,3,255,255,2,5,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,3,255,255,3,4,255,0,3,7,255,255,3,8,255,0,4,1,255,255,4,4,255,255,4,5,255,255,4,6,255,255,4,8,255,0,5,2,255,0,5,5,255,0,5,6,255,0,5,7,255,0]},{\"width\":6,\"chr\":\"7\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,0,255,255,0,6,255,255,0,7,255,255,1,0,255,255,1,1,255,0,1,4,255,255,1,5,255,255,1,7,255,0,1,8,255,0,2,0,255,255,2,1,255,0,2,2,255,255,2,3,255,255,2,5,255,0,2,6,255,0,3,0,255,255,3,1,255,255,3,3,255,0,3,4,255,0,4,1,255,0,4,2,255,0]},{\"width\":7,\"chr\":\"8\",\"bonus\":170,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,0,4,255,255,0,5,255,255,0,6,255,255,1,0,255,255,1,2,255,0,1,3,255,255,1,5,255,0,1,6,255,0,1,7,255,255,2,0,255,255,2,1,255,0,2,3,255,255,2,4,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,3,255,255,3,4,255,0,3,7,255,255,3,8,255,0,4,1,255,255,4,2,255,255,4,4,255,255,4,5,255,255,4,6,255,255,4,8,255,0,5,2,255,0,5,3,255,0,5,5,255,0,5,6,255,0,5,7,255,0]},{\"width\":7,\"chr\":\"9\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,1,0,255,255,1,2,255,0,1,3,255,255,2,0,255,255,2,1,255,0,2,4,255,255,3,0,255,255,3,1,255,0,3,4,255,255,3,5,255,0,4,1,255,255,4,2,255,255,4,3,255,255,4,4,255,255,4,5,255,255,4,6,255,255,4,7,255,255,5,2,255,0,5,3,255,0,5,4,255,0,5,5,255,0,5,6,255,0,5,7,255,0,5,8,255,0]},{\"width\":7,\"chr\":\"m\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,1,3,255,255,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,0,2,4,255,255,2,5,255,255,2,6,255,255,2,7,255,255,3,3,255,255,3,5,255,0,3,6,255,0,3,7,255,0,3,8,255,0,4,4,255,255,4,5,255,255,4,6,255,255,4,7,255,255,5,5,255,0,5,6,255,0,5,7,255,0,5,8,255,0]},{\"width\":3,\"chr\":\"(\",\"bonus\":85,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,0,8,255,25,1,0,255,255,1,2,255,0,1,3,255,0,1,4,255,0,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,255,2,1,255,0]},{\"width\":2,\"chr\":\")\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,1,2,255,0,1,3,255,0,1,4,255,0,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,0]}],\"width\":7,\"spacewidth\":4,\"shadow\":true,\"height\":9,\"basey\":7}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9vY3IvZm9udHMvcGl4ZWxfZGlnaXRzXzhweF9zaGFkb3cuZm9udG1ldGEuanNvbj8yNTNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixVQUFVLHlVQUF5VSxFQUFFLGdSQUFnUixFQUFFLG1YQUFtWCxFQUFFLDZUQUE2VCxFQUFFLG1UQUFtVCxFQUFFLHlXQUF5VyxFQUFFLGlhQUFpYSxFQUFFLHFTQUFxUyxFQUFFLHViQUF1YixFQUFFLCtWQUErVixFQUFFLDZWQUE2VixFQUFFLHlQQUF5UCxFQUFFLHNOQUFzTiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvb2NyL2ZvbnRzL3BpeGVsX2RpZ2l0c184cHhfc2hhZG93LmZvbnRtZXRhLmpzb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcImNoYXJzXCI6W3tcIndpZHRoXCI6NyxcImNoclwiOlwiMFwiLFwiYm9udXNcIjoxMjAsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDIsMjU1LDI1NSwwLDMsMjU1LDI1NSwwLDQsMjU1LDI1NSwwLDUsMjU1LDI1NSwxLDEsMjU1LDI1NSwxLDMsMjU1LDAsMSw0LDI1NSwwLDEsNSwyNTUsMCwxLDYsMjU1LDI1NSwyLDAsMjU1LDI1NSwyLDIsMjU1LDAsMiw3LDI1NSwyNTUsMywxLDI1NSwyNTUsMyw2LDI1NSwyNTUsMyw4LDI1NSwwLDQsMiwyNTUsMjU1LDQsMywyNTUsMjU1LDQsNCwyNTUsMjU1LDQsNSwyNTUsMjU1LDQsNywyNTUsMCw1LDMsMjU1LDAsNSw0LDI1NSwwLDUsNSwyNTUsMCw1LDYsMjU1LDBdfSx7XCJ3aWR0aFwiOjQsXCJjaHJcIjpcIjFcIixcImJvbnVzXCI6OTUsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDEsMjU1LDI1NSwwLDcsMjU1LDI1NSwxLDAsMjU1LDI1NSwxLDEsMjU1LDI1NSwxLDIsMjU1LDI1NSwxLDMsMjU1LDI1NSwxLDQsMjU1LDI1NSwxLDUsMjU1LDI1NSwxLDYsMjU1LDI1NSwxLDcsMjU1LDI1NSwxLDgsMjU1LDAsMiwxLDI1NSwwLDIsMiwyNTUsMCwyLDMsMjU1LDAsMiw0LDI1NSwwLDIsNSwyNTUsMCwyLDYsMjU1LDAsMiw3LDI1NSwyNTUsMiw4LDI1NSwwXX0se1wid2lkdGhcIjo3LFwiY2hyXCI6XCIyXCIsXCJib251c1wiOjE0MCxcInNlY29uZGFyeVwiOmZhbHNlLFwicGl4ZWxzXCI6WzAsMSwyNTUsMjU1LDAsNiwyNTUsMjU1LDAsNywyNTUsMjU1LDEsMCwyNTUsMjU1LDEsMiwyNTUsMCwxLDUsMjU1LDI1NSwxLDcsMjU1LDI1NSwxLDgsMjU1LDAsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsNCwyNTUsMjU1LDIsNiwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsMywyNTUsMjU1LDMsNSwyNTUsMCwzLDcsMjU1LDI1NSwzLDgsMjU1LDAsNCwxLDI1NSwyNTUsNCwyLDI1NSwyNTUsNCw0LDI1NSwwLDQsNywyNTUsMjU1LDQsOCwyNTUsMCw1LDIsMjU1LDAsNSwzLDI1NSwwLDUsOCwyNTUsMF19LHtcIndpZHRoXCI6NixcImNoclwiOlwiM1wiLFwiYm9udXNcIjoxMTUsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDEsMjU1LDI1NSwwLDYsMjU1LDI1NSwxLDAsMjU1LDI1NSwxLDIsMjU1LDAsMSwzLDI1NSwyNTUsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsMywyNTUsMjU1LDIsNCwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywxLDI1NSwyNTUsMywyLDI1NSwyNTUsMyw0LDI1NSwyNTUsMyw1LDI1NSwyNTUsMyw2LDI1NSwyNTUsMyw4LDI1NSwwLDQsMiwyNTUsMCw0LDMsMjU1LDAsNCw1LDI1NSwwLDQsNiwyNTUsMCw0LDcsMjU1LDBdfSx7XCJ3aWR0aFwiOjUsXCJjaHJcIjpcIjRcIixcImJvbnVzXCI6MTEwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwwLDI1NSwyNTUsMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMSwxLDI1NSwwLDEsMiwyNTUsMCwxLDMsMjU1LDAsMSw0LDI1NSwwLDEsNSwyNTUsMjU1LDEsNiwyNTUsMCwyLDMsMjU1LDI1NSwyLDQsMjU1LDI1NSwyLDUsMjU1LDI1NSwyLDYsMjU1LDI1NSwyLDcsMjU1LDI1NSwzLDQsMjU1LDAsMyw1LDI1NSwyNTUsMyw2LDI1NSwwLDMsNywyNTUsMCwzLDgsMjU1LDBdfSx7XCJ3aWR0aFwiOjYsXCJjaHJcIjpcIjVcIixcImJvbnVzXCI6MTM1LFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwwLDI1NSwyNTUsMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw2LDI1NSwyNTUsMSwwLDI1NSwyNTUsMSwxLDI1NSwwLDEsMiwyNTUsMCwxLDMsMjU1LDI1NSwxLDQsMjU1LDAsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsMywyNTUsMjU1LDIsNCwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsNCwyNTUsMjU1LDMsNSwyNTUsMjU1LDMsNiwyNTUsMjU1LDMsOCwyNTUsMCw0LDEsMjU1LDAsNCw1LDI1NSwwLDQsNiwyNTUsMCw0LDcsMjU1LDBdfSx7XCJ3aWR0aFwiOjcsXCJjaHJcIjpcIjZcIixcImJvbnVzXCI6MTYwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMCw2LDI1NSwyNTUsMSwxLDI1NSwyNTUsMSwzLDI1NSwwLDEsNCwyNTUsMjU1LDEsNSwyNTUsMCwxLDYsMjU1LDAsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwyLDI1NSwwLDIsMywyNTUsMjU1LDIsNSwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsMywyNTUsMjU1LDMsNCwyNTUsMCwzLDcsMjU1LDI1NSwzLDgsMjU1LDAsNCwxLDI1NSwyNTUsNCw0LDI1NSwyNTUsNCw1LDI1NSwyNTUsNCw2LDI1NSwyNTUsNCw4LDI1NSwwLDUsMiwyNTUsMCw1LDUsMjU1LDAsNSw2LDI1NSwwLDUsNywyNTUsMF19LHtcIndpZHRoXCI6NixcImNoclwiOlwiN1wiLFwiYm9udXNcIjoxMDUsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDAsMjU1LDI1NSwwLDYsMjU1LDI1NSwwLDcsMjU1LDI1NSwxLDAsMjU1LDI1NSwxLDEsMjU1LDAsMSw0LDI1NSwyNTUsMSw1LDI1NSwyNTUsMSw3LDI1NSwwLDEsOCwyNTUsMCwyLDAsMjU1LDI1NSwyLDEsMjU1LDAsMiwyLDI1NSwyNTUsMiwzLDI1NSwyNTUsMiw1LDI1NSwwLDIsNiwyNTUsMCwzLDAsMjU1LDI1NSwzLDEsMjU1LDI1NSwzLDMsMjU1LDAsMyw0LDI1NSwwLDQsMSwyNTUsMCw0LDIsMjU1LDBdfSx7XCJ3aWR0aFwiOjcsXCJjaHJcIjpcIjhcIixcImJvbnVzXCI6MTcwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMCw2LDI1NSwyNTUsMSwwLDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMjU1LDEsNSwyNTUsMCwxLDYsMjU1LDAsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsMywyNTUsMjU1LDIsNCwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsMywyNTUsMjU1LDMsNCwyNTUsMCwzLDcsMjU1LDI1NSwzLDgsMjU1LDAsNCwxLDI1NSwyNTUsNCwyLDI1NSwyNTUsNCw0LDI1NSwyNTUsNCw1LDI1NSwyNTUsNCw2LDI1NSwyNTUsNCw4LDI1NSwwLDUsMiwyNTUsMCw1LDMsMjU1LDAsNSw1LDI1NSwwLDUsNiwyNTUsMCw1LDcsMjU1LDBdfSx7XCJ3aWR0aFwiOjcsXCJjaHJcIjpcIjlcIixcImJvbnVzXCI6MTMwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMSwwLDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMjU1LDIsMCwyNTUsMjU1LDIsMSwyNTUsMCwyLDQsMjU1LDI1NSwzLDAsMjU1LDI1NSwzLDEsMjU1LDAsMyw0LDI1NSwyNTUsMyw1LDI1NSwwLDQsMSwyNTUsMjU1LDQsMiwyNTUsMjU1LDQsMywyNTUsMjU1LDQsNCwyNTUsMjU1LDQsNSwyNTUsMjU1LDQsNiwyNTUsMjU1LDQsNywyNTUsMjU1LDUsMiwyNTUsMCw1LDMsMjU1LDAsNSw0LDI1NSwwLDUsNSwyNTUsMCw1LDYsMjU1LDAsNSw3LDI1NSwwLDUsOCwyNTUsMF19LHtcIndpZHRoXCI6NyxcImNoclwiOlwibVwiLFwiYm9udXNcIjoxMzAsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDQsMjU1LDI1NSwwLDUsMjU1LDI1NSwwLDYsMjU1LDI1NSwwLDcsMjU1LDI1NSwxLDMsMjU1LDI1NSwxLDUsMjU1LDAsMSw2LDI1NSwwLDEsNywyNTUsMCwxLDgsMjU1LDAsMiw0LDI1NSwyNTUsMiw1LDI1NSwyNTUsMiw2LDI1NSwyNTUsMiw3LDI1NSwyNTUsMywzLDI1NSwyNTUsMyw1LDI1NSwwLDMsNiwyNTUsMCwzLDcsMjU1LDAsMyw4LDI1NSwwLDQsNCwyNTUsMjU1LDQsNSwyNTUsMjU1LDQsNiwyNTUsMjU1LDQsNywyNTUsMjU1LDUsNSwyNTUsMCw1LDYsMjU1LDAsNSw3LDI1NSwwLDUsOCwyNTUsMF19LHtcIndpZHRoXCI6MyxcImNoclwiOlwiKFwiLFwiYm9udXNcIjo4NSxcInNlY29uZGFyeVwiOmZhbHNlLFwicGl4ZWxzXCI6WzAsMSwyNTUsMjU1LDAsMiwyNTUsMjU1LDAsMywyNTUsMjU1LDAsNCwyNTUsMjU1LDAsNSwyNTUsMjU1LDAsNiwyNTUsMjU1LDAsNywyNTUsMjU1LDAsOCwyNTUsMjUsMSwwLDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMCwxLDQsMjU1LDAsMSw1LDI1NSwwLDEsNiwyNTUsMCwxLDcsMjU1LDAsMSw4LDI1NSwyNTUsMiwxLDI1NSwwXX0se1wid2lkdGhcIjoyLFwiY2hyXCI6XCIpXCIsXCJib251c1wiOjcwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMCw2LDI1NSwyNTUsMCw3LDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMCwxLDQsMjU1LDAsMSw1LDI1NSwwLDEsNiwyNTUsMCwxLDcsMjU1LDAsMSw4LDI1NSwwXX1dLFwid2lkdGhcIjo3LFwic3BhY2V3aWR0aFwiOjQsXCJzaGFkb3dcIjp0cnVlLFwiaGVpZ2h0XCI6OSxcImJhc2V5XCI6N30iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json\n");

/***/ }),

/***/ "../node_modules/@alt1/ocr/index.ts":
/*!******************************************!*\
  !*** ../node_modules/@alt1/ocr/index.ts ***!
  \******************************************/
/*! exports provided: debug, debugout, debugFont, unblendBlackBackground, unblendKnownBg, unblendTrans, canblend, decompose2col, decomposeblack, decompose3col, findChar, findReadLine, GetChatColorMono, getChatColor, readLine, readSmallCapsBackwards, readChar, generatefont */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debug\", function() { return debug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debugout\", function() { return debugout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debugFont\", function() { return debugFont; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unblendBlackBackground\", function() { return unblendBlackBackground; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unblendKnownBg\", function() { return unblendKnownBg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unblendTrans\", function() { return unblendTrans; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canblend\", function() { return canblend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decompose2col\", function() { return decompose2col; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decomposeblack\", function() { return decomposeblack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decompose3col\", function() { return decompose3col; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findChar\", function() { return findChar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findReadLine\", function() { return findReadLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetChatColorMono\", function() { return GetChatColorMono; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChatColor\", function() { return getChatColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readLine\", function() { return readLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readSmallCapsBackwards\", function() { return readSmallCapsBackwards; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readChar\", function() { return readChar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generatefont\", function() { return generatefont; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n\r\nvar debug = {\r\n    printcharscores: false,\r\n    trackread: false\r\n};\r\nvar debugout = {};\r\n/**\r\n * draws the font definition to a buffer and displays it in the dom for debugging purposes\r\n * @param font\r\n */\r\nfunction debugFont(font) {\r\n    var spacing = font.width + 2;\r\n    var buf = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](spacing * font.chars.length, font.height + 1);\r\n    for (var a = 0; a < buf.data.length; a += 4) {\r\n        buf.data[a] = buf.data[a + 1] = buf.data[a + 2] = 0;\r\n        buf.data[a + 3] = 255;\r\n    }\r\n    for (var a = 0; a < font.chars.length; a++) {\r\n        var bx = a * spacing;\r\n        var chr = font.chars[a];\r\n        for (var b = 0; b < chr.pixels.length; b += (font.shadow ? 4 : 3)) {\r\n            buf.setPixel(bx + chr.pixels[b], chr.pixels[b + 1], [chr.pixels[b + 2], chr.pixels[b + 2], chr.pixels[b + 2], 255]);\r\n            if (font.shadow) {\r\n                buf.setPixel(bx + chr.pixels[b], chr.pixels[b + 1], [chr.pixels[b + 3], 0, 0, 255]);\r\n            }\r\n        }\r\n    }\r\n    buf.show();\r\n}\r\nfunction unblendBlackBackground(img, r, g, b) {\r\n    var rimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](img.width, img.height);\r\n    for (var i = 0; i < img.data.length; i += 4) {\r\n        var col = decomposeblack(img.data[i], img.data[i + 1], img.data[i + 2], r, g, b);\r\n        rimg.data[i + 0] = col[0] * 255;\r\n        rimg.data[i + 1] = rimg.data[i + 0];\r\n        rimg.data[i + 2] = rimg.data[i + 0];\r\n        rimg.data[i + 3] = 255;\r\n    }\r\n    return rimg;\r\n}\r\n/**\r\n * unblends a imagebuffer into match strength with given color\r\n * the bgimg argument should contain a second image with pixel occluded by the font visible.\r\n * @param img\r\n * @param shadow detect black as second color\r\n * @param bgimg optional second image to\r\n */\r\nfunction unblendKnownBg(img, bgimg, shadow, r, g, b) {\r\n    if (bgimg && (img.width != bgimg.width || img.height != bgimg.height)) {\r\n        throw \"bgimg size doesn't match\";\r\n    }\r\n    var rimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](img.width, img.height);\r\n    var totalerror = 0;\r\n    for (var i = 0; i < img.data.length; i += 4) {\r\n        var col = decompose2col(img.data[i], img.data[i + 1], img.data[i + 2], r, g, b, bgimg.data[i + 0], bgimg.data[i + 1], bgimg.data[i + 2]);\r\n        if (shadow) {\r\n            if (col[2] > 0.01) {\r\n                console.log(\"high error component: \" + (col[2] * 100).toFixed(1) + \"%\");\r\n            }\r\n            totalerror += col[2];\r\n            var m = 1 - col[1] - Math.abs(col[2]); //main color+black=100%-bg-error\r\n            rimg.data[i + 0] = m * 255;\r\n            rimg.data[i + 1] = col[0] / m * 255;\r\n            rimg.data[i + 2] = rimg.data[i + 0];\r\n        }\r\n        else {\r\n            rimg.data[i + 0] = col[0] * 255;\r\n            rimg.data[i + 1] = rimg.data[i + 0];\r\n            rimg.data[i + 2] = rimg.data[i + 0];\r\n        }\r\n        rimg.data[i + 3] = 255;\r\n    }\r\n    return rimg;\r\n}\r\n/**\r\n * Unblends a font image that is already conpletely isolated to the raw image used ingame. This is the easiest mode for pixel fonts where alpha is 0 or 255, or for extracted font files.\r\n * @param img\r\n * @param r\r\n * @param g\r\n * @param b\r\n * @param shadow whether the font has a black shadow\r\n */\r\nfunction unblendTrans(img, shadow, r, g, b) {\r\n    var rimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](img.width, img.height);\r\n    var pxlum = r + g + b;\r\n    for (var i = 0; i < img.data.length; i += 4) {\r\n        if (shadow) {\r\n            var lum = img.data[i + 0] + img.data[i + 1] + img.data[i + 2];\r\n            rimg.data[i + 0] = img.data[i + 3];\r\n            rimg.data[i + 1] = lum / pxlum * 255;\r\n            rimg.data[i + 2] = rimg.data[i + 0];\r\n        }\r\n        else {\r\n            rimg.data[i + 0] = img.data[i + 3];\r\n            rimg.data[i + 1] = rimg.data[i + 0];\r\n            rimg.data[i + 2] = rimg.data[i + 0];\r\n        }\r\n        rimg.data[i + 3] = 255;\r\n    }\r\n    return rimg;\r\n}\r\n/**\r\n * Determised wether color [rgb]m can be a result of a blend with color [rgb]1 that is p (0-1) of the mix\r\n * It returns the number that the second color has to lie outside of the possible color ranges\r\n * @param rm resulting color\r\n * @param r1 first color of the mix (the other color is unknown)\r\n * @param p the portion of the [rgb]1 in the mix (0-1)\r\n */\r\nfunction canblend(rm, gm, bm, r1, g1, b1, p) {\r\n    var m = Math.min(50, p / (1 - p));\r\n    var r = rm + (rm - r1) * m;\r\n    var g = gm + (gm - g1) * m;\r\n    var b = bm + (bm - b1) * m;\r\n    return Math.max(-r, -g, -b, r - 255, g - 255, b - 255);\r\n}\r\n/**\r\n * decomposes a color in 2 given component colors and returns the amount of each color present\r\n * also return a third (noise) component which is the the amount leftover orthagonal from the 2 given colors\r\n */\r\nfunction decompose2col(rp, gp, bp, r1, g1, b1, r2, g2, b2) {\r\n    //get the normal of the error (cross-product of both colors)\r\n    var r3 = g1 * b2 - g2 * b1;\r\n    var g3 = b1 * r2 - b2 * r1;\r\n    var b3 = r1 * g2 - r2 * g1;\r\n    //normalize to length 255\r\n    var norm = 255 / Math.sqrt(r3 * r3 + g3 * g3 + b3 * b3);\r\n    r3 *= norm;\r\n    g3 *= norm;\r\n    b3 *= norm;\r\n    return decompose3col(rp, gp, bp, r1, g1, b1, r2, g2, b2, r3, g3, b3);\r\n}\r\n/**\r\n * decomposes a pixel in a given color component and black and returns what proportion of the second color it contains\r\n * this is not as formal as decompose 2/3 and only give a \"good enough\" number\r\n */\r\nfunction decomposeblack(rp, gp, bp, r1, g1, b1) {\r\n    var dr = Math.abs(rp - r1);\r\n    var dg = Math.abs(gp - g1);\r\n    var db = Math.abs(bp - b1);\r\n    var maxdif = Math.max(dr, dg, db);\r\n    return [1 - maxdif / 255];\r\n}\r\n/**\r\n * decomposes a color in 3 given component colors and returns the amount of each color present\r\n */\r\nfunction decompose3col(rp, gp, bp, r1, g1, b1, r2, g2, b2, r3, g3, b3) {\r\n    //P=x*C1+y*C2+z*C3\r\n    //assemble as matrix \r\n    //M*w=p\r\n    //get inverse of M\r\n    //dirty written out version of cramer's rule\r\n    var A = g2 * b3 - b2 * g3;\r\n    var B = g3 * b1 - b3 * g1;\r\n    var C = g1 * b2 - b1 * g2;\r\n    var D = b2 * r3 - r2 * b3;\r\n    var E = b3 * r1 - r3 * b1;\r\n    var F = b1 * r2 - r1 * b2;\r\n    var G = r2 * g3 - g2 * r3;\r\n    var H = r3 * g1 - g3 * r1;\r\n    var I = r1 * g2 - g1 * r2;\r\n    var det = r1 * A + g1 * D + b1 * G;\r\n    //M^-1*p=w\r\n    var x = (A * rp + D * gp + G * bp) / det;\r\n    var y = (B * rp + E * gp + H * bp) / det;\r\n    var z = (C * rp + F * gp + I * bp) / det;\r\n    return [x, y, z];\r\n}\r\n/**\r\n * brute force to the exact position of the text\r\n */\r\nfunction findChar(buffer, font, col, x, y, w, h) {\r\n    if (x < 0) {\r\n        return null;\r\n    }\r\n    if (y - font.basey < 0) {\r\n        return null;\r\n    }\r\n    if (x + w + font.width > buffer.width) {\r\n        return null;\r\n    }\r\n    if (y + h - font.basey + font.height > buffer.height) {\r\n        return null;\r\n    }\r\n    var best = 1000; //TODO finetune score constants\r\n    var bestchar = null;\r\n    for (var cx = x; cx < x + w; cx++) {\r\n        for (var cy = y; cy < y + h; cy++) {\r\n            var chr = readChar(buffer, font, col, cx, cy, false, false);\r\n            if (chr != null && chr.sizescore < best) {\r\n                best = chr.sizescore;\r\n                bestchar = chr;\r\n            }\r\n        }\r\n    }\r\n    return bestchar;\r\n}\r\n/**\r\n * reads text with unknown exact coord or color. The given coord should be inside the text\r\n * color selection not implemented yet\r\n */\r\nfunction findReadLine(buffer, font, cols, x, y, w = -1, h = -1) {\r\n    if (w == -1) {\r\n        w = font.width + font.spacewidth;\r\n        x -= Math.ceil(w / 2);\r\n    }\r\n    if (h == -1) {\r\n        h = 7;\r\n        y -= 1;\r\n    }\r\n    var chr = null;\r\n    if (cols.length > 1) {\r\n        var sorted = GetChatColorMono(buffer, new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](x, y - font.basey, w, h), cols);\r\n        //loop until we have a match (max 2 cols)\r\n        for (var a = 0; a < 2 && a < sorted.length && chr == null; a++) {\r\n            chr = findChar(buffer, font, sorted[a].col, x, y, w, h);\r\n        }\r\n    }\r\n    else {\r\n        chr = findChar(buffer, font, cols[0], x, y, w, h);\r\n    }\r\n    if (chr == null) {\r\n        return { text: \"\", debugArea: { x, y, w, h } };\r\n    }\r\n    return readLine(buffer, font, cols, chr.x, chr.y, true, true);\r\n}\r\nfunction GetChatColorMono(buf, rect, colors) {\r\n    var colormap = colors.map(c => ({ col: c, score: 0 }));\r\n    if (rect.x < 0 || rect.y < 0 || rect.x + rect.width > buf.width || rect.y + rect.height > buf.height) {\r\n        return colormap;\r\n    }\r\n    var data = buf.data;\r\n    var maxd = 50;\r\n    for (var colobj of colormap) {\r\n        var score = 0;\r\n        var col = colobj.col;\r\n        for (var y = rect.y; y < rect.y + rect.height; y++) {\r\n            for (var x = rect.x; x < rect.x + rect.width; x++) {\r\n                var i = x * 4 + y * 4 * buf.width;\r\n                var d = Math.abs(data[i] - col[0]) + Math.abs(data[i + 1] - col[1]) + Math.abs(data[i + 2] - col[2]);\r\n                if (d < maxd) {\r\n                    score += maxd - d;\r\n                }\r\n            }\r\n        }\r\n        colobj.score = score;\r\n    }\r\n    return colormap;\r\n}\r\nfunction unblend(r, g, b, R, G, B) {\r\n    var m = Math.sqrt(r * r + g * g + b * b);\r\n    var n = Math.sqrt(R * R + G * G + B * B);\r\n    var x = (r * R + g * G + b * B) / n;\r\n    var y = Math.sqrt(Math.max(0, m * m - x * x));\r\n    var r1 = Math.max(0, (63.75 - y) * 4);\r\n    var r2 = x / n * 255;\r\n    if (r2 > 255) //brighter than refcol\r\n     {\r\n        r1 = Math.max(0, r1 - r2 + 255);\r\n        r2 = 255;\r\n    }\r\n    return [r1, r2];\r\n}\r\nfunction getChatColor(buf, rect, colors) {\r\n    var bestscore = -1.0;\r\n    var best = null;\r\n    var b2 = 0.0;\r\n    var data = buf.data;\r\n    for (let col of colors) {\r\n        var score = 0.0;\r\n        for (var y = rect.y; y < rect.y + rect.height; y++) {\r\n            for (var x = rect.x; x < rect.x + rect.width; x++) {\r\n                if (x < 0 || x + 1 >= buf.width) {\r\n                    continue;\r\n                }\r\n                if (y < 0 || y + 1 >= buf.width) {\r\n                    continue;\r\n                }\r\n                let i1 = buf.pixelOffset(x, y);\r\n                let i2 = buf.pixelOffset(x + 1, y + 1);\r\n                var pixel1 = unblend(data[i1 + 0], data[i1 + 1], data[i1 + 2], col[0], col[1], col[2]);\r\n                var pixel2 = unblend(data[i2 + 0], data[i2 + 1], data[i2 + 2], col[0], col[1], col[2]);\r\n                //TODO this is from c# can simplify a bit\r\n                var s = (pixel1[0] / 255 * pixel1[1] / 255) * (pixel2[0] / 255 * (255.0 - pixel2[1]) / 255);\r\n                score += s;\r\n            }\r\n        }\r\n        if (score > bestscore) {\r\n            b2 = bestscore;\r\n            bestscore = score;\r\n            best = col;\r\n        }\r\n        else if (score > b2) {\r\n            b2 = score;\r\n        }\r\n    }\r\n    //Console.WriteLine(\"color: \" + bestcol + \" - \" + (bestscore - b2));\r\n    //bestscore /= rect.width * rect.height;\r\n    return best;\r\n}\r\n/**\r\n * reads a line of text with exactly known position and color. y should be the y coord of the text base line, x should be the first pixel of a new character\r\n */\r\nfunction readLine(buffer, font, colors, x, y, forward, backward = false) {\r\n    if (typeof colors[0] != \"number\" && colors.length == 1) {\r\n        colors = colors[0];\r\n    }\r\n    var multicol = typeof colors[0] != \"number\";\r\n    var allcolors = multicol ? colors : [colors];\r\n    var detectcolor = function (sx, sy, backward) {\r\n        var w = Math.floor(font.width * 1.5);\r\n        if (backward) {\r\n            sx -= w;\r\n        }\r\n        sy -= font.basey;\r\n        return getChatColor(buffer, { x: sx, y: sy, width: w, height: font.height }, allcolors);\r\n    };\r\n    var fragments = [];\r\n    var x1 = x;\r\n    var x2 = x;\r\n    var maxspaces = (typeof font.maxspaces == \"number\" ? font.maxspaces : 1);\r\n    let fragtext = \"\";\r\n    var lastcol = null;\r\n    let addfrag = (forward) => {\r\n        if (!fragtext) {\r\n            return;\r\n        }\r\n        let frag = {\r\n            text: fragtext,\r\n            color: lastcol,\r\n            index: 0,\r\n            xstart: x + (forward ? fragstartdx : fragenddx),\r\n            xend: x + (forward ? fragenddx : fragstartdx)\r\n        };\r\n        if (forward) {\r\n            fragments.push(frag);\r\n        }\r\n        else {\r\n            fragments.unshift(frag);\r\n        }\r\n        fragtext = \"\";\r\n        fragstartdx = dx;\r\n    };\r\n    for (var dirforward of [true, false]) {\r\n        //init vars\r\n        if (dirforward && !forward) {\r\n            continue;\r\n        }\r\n        if (!dirforward && !backward) {\r\n            continue;\r\n        }\r\n        var dx = 0;\r\n        var fragstartdx = dx;\r\n        var fragenddx = dx;\r\n        var triedspaces = 0;\r\n        var triedrecol = false;\r\n        var col = multicol ? null : colors;\r\n        while (true) {\r\n            col = col || detectcolor(x + dx, y, !dirforward);\r\n            var chr = (col ? readChar(buffer, font, col, x + dx, y, !dirforward, true) : null);\r\n            if (col == null || chr == null) {\r\n                if (triedspaces < maxspaces) {\r\n                    dx += (dirforward ? 1 : -1) * font.spacewidth;\r\n                    triedspaces++;\r\n                    continue;\r\n                }\r\n                if (multicol && !triedrecol) {\r\n                    dx -= (dirforward ? 1 : -1) * triedspaces * font.spacewidth;\r\n                    triedspaces = 0;\r\n                    col = null;\r\n                    triedrecol = true;\r\n                    continue;\r\n                }\r\n                if (dirforward) {\r\n                    x2 = x + dx - font.spacewidth;\r\n                }\r\n                else {\r\n                    x1 = x + dx + font.spacewidth;\r\n                }\r\n                break;\r\n            }\r\n            else {\r\n                if (lastcol && (col[0] != lastcol[0] || col[1] != lastcol[1] || col[2] != lastcol[2])) {\r\n                    addfrag(dirforward);\r\n                }\r\n                var spaces = \"\";\r\n                for (var a = 0; a < triedspaces; a++) {\r\n                    spaces += \" \";\r\n                }\r\n                if (dirforward) {\r\n                    fragtext += spaces + chr.chr;\r\n                }\r\n                else {\r\n                    fragtext = chr.chr + spaces + fragtext;\r\n                }\r\n                triedspaces = 0;\r\n                triedrecol = false;\r\n                dx += (dirforward ? 1 : -1) * chr.basechar.width;\r\n                fragenddx = dx;\r\n                lastcol = col;\r\n            }\r\n        }\r\n        if (lastcol) {\r\n            addfrag(dirforward);\r\n        }\r\n    }\r\n    fragments.forEach((f, i) => f.index = i);\r\n    return {\r\n        debugArea: { x: x1, y: y - 9, w: x2 - x1, h: 10 },\r\n        text: fragments.map(f => f.text).join(\"\"),\r\n        fragments\r\n    };\r\n}\r\n/**\r\n * Reads a line of text that uses a smallcaps font, these fonts can have duplicate chars that only have a different amount of\r\n * empty space after the char before the next char starts.\r\n * The coordinates should be near the end of the string, or a rectangle with high 1 containing all points where the string can end.\r\n */\r\nfunction readSmallCapsBackwards(buffer, font, cols, x, y, w = -1, h = -1) {\r\n    if (w == -1) {\r\n        w = font.width + font.spacewidth;\r\n        x -= Math.ceil(w / 2);\r\n    }\r\n    if (h == -1) {\r\n        h = 7;\r\n        y -= 1;\r\n    }\r\n    var matchedchar = null;\r\n    var sorted = (cols.length == 1 ? [{ col: cols[0], score: 1 }] : GetChatColorMono(buffer, new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](x, y - font.basey, w, h), cols));\r\n    //loop until we have a match (max 2 cols)\r\n    for (var a = 0; a < 2 && a < sorted.length && matchedchar == null; a++) {\r\n        for (var cx = x + w - 1; cx >= x; cx--) {\r\n            var best = 1000; //TODO finetune score constants\r\n            var bestchar = null;\r\n            for (var cy = y; cy < y + h; cy++) {\r\n                var chr = readChar(buffer, font, sorted[a].col, cx, cy, true, false);\r\n                if (chr != null && chr.sizescore < best) {\r\n                    best = chr.sizescore;\r\n                    bestchar = chr;\r\n                }\r\n            }\r\n            if (bestchar) {\r\n                matchedchar = bestchar;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (matchedchar == null) {\r\n        return { text: \"\", debugArea: { x, y, w, h } };\r\n    }\r\n    return readLine(buffer, font, cols, matchedchar.x, matchedchar.y, false, true);\r\n}\r\n/**\r\n * Reads a single character at the exact given location\r\n * @param x exact x location of the start of the character domain (includes part of the spacing between characters)\r\n * @param y exact y location of the baseline pixel of the character\r\n * @param backwards read in backwards direction, the x location should be the first pixel after the character domain in that case\r\n */\r\nfunction readChar(buffer, font, col, x, y, backwards, allowSecondary) {\r\n    y -= font.basey;\r\n    var shiftx = 0;\r\n    var shifty = font.basey;\r\n    var shadow = font.shadow;\r\n    var debugobj = null;\r\n    var debugimg = null;\r\n    if (debug.trackread) {\r\n        var name = x + \";\" + y + \" \" + JSON.stringify(col);\r\n        if (!debugout[name]) {\r\n            debugout[name] = [];\r\n        }\r\n        debugobj = debugout[name];\r\n    }\r\n    //===== make sure the full domain is inside the bitmap/buffer ======\r\n    if (y < 0 || y + font.height >= buffer.height) {\r\n        return null;\r\n    }\r\n    if (!backwards) {\r\n        if (x < 0 || x + font.width > buffer.width) {\r\n            return null;\r\n        }\r\n    }\r\n    else {\r\n        if (x - font.width < 0 || x > buffer.width) {\r\n            return null;\r\n        }\r\n    }\r\n    //====== start reading the char ======\r\n    var scores = [];\r\n    for (var chr = 0; chr < font.chars.length; chr++) {\r\n        var chrobj = font.chars[chr];\r\n        if (chrobj.secondary && !allowSecondary) {\r\n            continue;\r\n        }\r\n        scores[chr] = { score: 0, sizescore: 0, chr: chrobj };\r\n        var chrx = (backwards ? x - chrobj.width : x);\r\n        if (debug.trackread) {\r\n            debugimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](font.width, font.height);\r\n        }\r\n        for (var a = 0; a < chrobj.pixels.length;) {\r\n            var i = (chrx + chrobj.pixels[a]) * 4 + (y + chrobj.pixels[a + 1]) * buffer.width * 4;\r\n            var penalty = 0;\r\n            if (!shadow) {\r\n                penalty = canblend(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], col[0], col[1], col[2], chrobj.pixels[a + 2] / 255);\r\n                a += 3;\r\n            }\r\n            else {\r\n                var lum = chrobj.pixels[a + 3] / 255;\r\n                penalty = canblend(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], col[0] * lum, col[1] * lum, col[2] * lum, chrobj.pixels[a + 2] / 255);\r\n                a += 4;\r\n            }\r\n            scores[chr].score += Math.max(0, penalty);\r\n            //TODO add compiler flag to this to remove it for performance\r\n            if (debugimg) {\r\n                debugimg.setPixel(chrobj.pixels[a], chrobj.pixels[a + 1], [penalty, penalty, penalty, 255]);\r\n            }\r\n        }\r\n        scores[chr].sizescore = scores[chr].score - chrobj.bonus;\r\n        if (debugobj) {\r\n            debugobj.push({ chr: chrobj.chr, score: scores[chr].sizescore, rawscore: scores[chr].score, img: debugimg });\r\n        }\r\n    }\r\n    scores.sort((a, b) => a.sizescore - b.sizescore);\r\n    if (debug.printcharscores) {\r\n        scores.slice(0, 5).forEach(q => console.log(q.chr.chr, q.score.toFixed(3), q.sizescore.toFixed(3)));\r\n    }\r\n    var winchr = scores[0];\r\n    if (!winchr || winchr.score > 400) {\r\n        return null;\r\n    }\r\n    return { chr: winchr.chr.chr, basechar: winchr.chr, x: x + shiftx, y: y + shifty, score: winchr.score, sizescore: winchr.sizescore };\r\n}\r\n/**\r\n * Generates a font json description to use in reader functions\r\n * @param unblended A source image with all characters lined up. The image should be unblended into components using the unblend functions\r\n * The lowest pixel line of this image is used to mark the location and size of the charecters if the red component is 255 it means there is a character on that pixel column\r\n * @param chars A string containing all the characters of the image in the same order\r\n * @param seconds A string with characters that are considered unlikely and should only be detected if no other character is possible.\r\n * For example the period (.) character matches positive inside many other characters and should be marked as secondary\r\n * @param bonusses An object that contains bonus scores for certain difficult characters to make the more likely to be red.\r\n * @param basey The y position of the baseline pixel of the font\r\n * @param spacewidth the number of pixels a space takes\r\n * @param treshold minimal color match proportion (0-1) before a pixel is used for the font\r\n * @param shadow whether this font also uses the black shadow some fonts have. The \"unblended\" image should be unblended correspondingly\r\n * @returns a javascript object describing the font which is used as input for the different read functions\r\n */\r\nfunction generatefont(unblended, chars, seconds, bonusses, basey, spacewidth, treshold, shadow) {\r\n    //settings vars\r\n    treshold *= 255;\r\n    //initial vars\r\n    var miny = unblended.height - 1;\r\n    var maxy = 0;\r\n    var font = { chars: [], width: 0, spacewidth: spacewidth, shadow: shadow, height: 0, basey: 0 };\r\n    var ds = false;\r\n    var chardata = [];\r\n    //index all chars\r\n    for (var dx = 0; dx < unblended.width; dx++) {\r\n        var i = 4 * dx + 4 * unblended.width * (unblended.height - 1);\r\n        if (unblended.data[i] == 255 && unblended.data[i + 3] == 255) {\r\n            if (ds === false) {\r\n                ds = dx;\r\n            }\r\n        }\r\n        else {\r\n            if (ds !== false) {\r\n                //char found, start detection\r\n                var de = dx;\r\n                var char = chars[chardata.length];\r\n                var chr = {\r\n                    ds: ds,\r\n                    de: de,\r\n                    width: de - ds,\r\n                    chr: char,\r\n                    bonus: (bonusses && bonusses[char]) || 0,\r\n                    secondary: seconds.indexOf(chars[chardata.length]) != -1,\r\n                    pixels: []\r\n                };\r\n                chardata.push(chr);\r\n                font.width = Math.max(font.width, chr.width);\r\n                for (x = 0; x < de - ds; x++) {\r\n                    for (y = 0; y < unblended.height - 1; y++) {\r\n                        var i = (x + ds) * 4 + y * unblended.width * 4;\r\n                        if (unblended.data[i] >= treshold) {\r\n                            miny = Math.min(miny, y);\r\n                            maxy = Math.max(maxy, y);\r\n                        }\r\n                    }\r\n                }\r\n                ds = false;\r\n            }\r\n        }\r\n    }\r\n    font.height = maxy + 1 - miny;\r\n    font.basey = basey - miny;\r\n    //detect all pixels\r\n    for (var a in chardata) {\r\n        var chr = chardata[a];\r\n        for (var x = 0; x < chr.width; x++) {\r\n            for (var y = 0; y < maxy + 1 - miny; y++) {\r\n                var i = (x + chr.ds) * 4 + (y + miny) * unblended.width * 4;\r\n                if (unblended.data[i] >= treshold) {\r\n                    chr.pixels.push(x, y);\r\n                    chr.pixels.push(unblended.data[i]);\r\n                    if (shadow) {\r\n                        chr.pixels.push(unblended.data[i + 1]);\r\n                    }\r\n                    chr.bonus += 5;\r\n                }\r\n            }\r\n        }\r\n        //remove process vars from final json obj\r\n        delete chr.ds;\r\n        delete chr.de;\r\n        //prevent js from doing the thing with unnecessary output precision\r\n        chr.bonus = +chr.bonus.toFixed(3);\r\n        font.chars.push(chr);\r\n    }\r\n    return font;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ocr/index.ts\n");

/***/ }),

/***/ "../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png":
/*!******************************************************************************!*\
  !*** ../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"Prayer.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vUHJheWVyLnBuZz83OTc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLGVBQWUiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzP25hbWU9W25hbWVdLltleHRdIS4vUHJheWVyLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJQcmF5ZXIucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png\n");

/***/ }),

/***/ "../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json":
/*!**********************************************************************************!*\
  !*** ../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"appconfig.json\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vYXBwY29uZmlnLmpzb24/ZmIyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixtQkFBbUIiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzP25hbWU9W25hbWVdLltleHRdIS4vYXBwY29uZmlnLmpzb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXBwY29uZmlnLmpzb25cIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json\n");

/***/ }),

/***/ "../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html":
/*!******************************************************************************!*\
  !*** ../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"index.html\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vaW5kZXguaHRtbD8xMmRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLGVBQWUiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzP25hbWU9W25hbWVdLltleHRdIS4vaW5kZXguaHRtbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbmRleC5odG1sXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html\n");

/***/ }),

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/*! exports provided: capture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capture\", function() { return capture; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _alt1_ability__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @alt1/ability */ \"../node_modules/@alt1/ability/index.ts\");\n\r\n\r\n__webpack_require__(/*! file-loader?name=[name].[ext]!./appconfig.json */ \"../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json\");\r\n__webpack_require__(/*! file-loader?name=[name].[ext]!./index.html */ \"../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html\");\r\n__webpack_require__(/*! file-loader?name=[name].[ext]!./Prayer.png */ \"../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png\");\r\nvar img = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"captureHoldFullRs\"]();\r\nconst ability = new _alt1_ability__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([]);\r\nfunction capture() {\r\n    ability.actionbarReader.find(img);\r\n    return ability.actionbarReader.read();\r\n}\r\nif (window.alt1) {\r\n    alt1.identifyAppUrl(\"https://tengju.github.io/better-bars/release/appconfig.json\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vaW5kZXgudHM/NDZmNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvQztBQUNBO0FBQ3BDLG1CQUFPLENBQUMsa0lBQWlEO0FBQ3pELG1CQUFPLENBQUMsMEhBQTZDO0FBQ3JELG1CQUFPLENBQUMsMEhBQTZDO0FBQ3JELFVBQVUsNERBQXVCO0FBQ2pDLG9CQUFvQixxREFBTztBQUNwQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYTFsaWIgZnJvbSBcIkBhbHQxL2Jhc2VcIjtcclxuaW1wb3J0IEFiaWxpdHkgZnJvbSBcIkBhbHQxL2FiaWxpdHlcIjtcclxucmVxdWlyZShcIiFmaWxlLWxvYWRlcj9uYW1lPVtuYW1lXS5bZXh0XSEuL2FwcGNvbmZpZy5qc29uXCIpO1xyXG5yZXF1aXJlKFwiIWZpbGUtbG9hZGVyP25hbWU9W25hbWVdLltleHRdIS4vaW5kZXguaHRtbFwiKTtcclxucmVxdWlyZShcIiFmaWxlLWxvYWRlcj9uYW1lPVtuYW1lXS5bZXh0XSEuL1ByYXllci5wbmdcIik7XHJcbnZhciBpbWcgPSBhMWxpYi5jYXB0dXJlSG9sZEZ1bGxScygpO1xyXG5jb25zdCBhYmlsaXR5ID0gbmV3IEFiaWxpdHkoW10pO1xyXG5leHBvcnQgZnVuY3Rpb24gY2FwdHVyZSgpIHtcclxuICAgIGFiaWxpdHkuYWN0aW9uYmFyUmVhZGVyLmZpbmQoaW1nKTtcclxuICAgIHJldHVybiBhYmlsaXR5LmFjdGlvbmJhclJlYWRlci5yZWFkKCk7XHJcbn1cclxuaWYgKHdpbmRvdy5hbHQxKSB7XHJcbiAgICBhbHQxLmlkZW50aWZ5QXBwVXJsKFwiaHR0cHM6Ly90ZW5nanUuZ2l0aHViLmlvL2JldHRlci1iYXJzL3JlbGVhc2UvYXBwY29uZmlnLmpzb25cIik7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./index.ts\n");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** multi ./index.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\a\better-bars\better-bars\src\index.ts */"./index.ts");


/***/ })

/******/ });
});