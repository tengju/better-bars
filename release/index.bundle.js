(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["testpackage"] = factory();
	else
		root["ALT1"] = factory();
})((typeof self!='undefined'?self:this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/@alt1/ability/actionbar.ts":
/*!**************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbar.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ActionbarReader; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @alt1/ocr */ \"../node_modules/@alt1/ocr/index.ts\");\n\n\nvar chatfont = __webpack_require__(/*! @alt1/ocr/fonts/aa_8px_new.fontmeta.json */ \"../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json\");\nvar imgs = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].webpackImages({\n    dren: __webpack_require__(/*! ./actionbarimgs/dren.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/dren.data.png\"),\n    drenretal: __webpack_require__(/*! ./actionbarimgs/drenretal.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png\"),\n    lifepoints: __webpack_require__(/*! ./actionbarimgs/lifepoints.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png\"),\n    lifepointspoison: __webpack_require__(/*! ./actionbarimgs/lifepointspoison.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png\"),\n    prayer: __webpack_require__(/*! ./actionbarimgs/prayer.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/prayer.data.png\"),\n    prayeron: __webpack_require__(/*! ./actionbarimgs/prayeron.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png\"),\n    sumpoints: __webpack_require__(/*! ./actionbarimgs/sumpoints.data.png */ \"../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png\"),\n});\nclass ActionbarReader {\n    constructor() {\n        this.pos = null;\n    }\n    find(img) {\n        if (!img) {\n            img = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"captureHoldFullRs\"]();\n        }\n        if (!img) {\n            return false;\n        }\n        var sumpos = img.findSubimage(imgs.sumpoints);\n        if (sumpos.length == 0) {\n            return false;\n        }\n        var hppos = img.findSubimage(imgs.lifepoints);\n        if (hppos.length == 0) {\n            hppos = img.findSubimage(imgs.lifepointspoison);\n        }\n        if (hppos.length == 0) {\n            return false;\n        }\n        var layout = null;\n        for (var a in ActionbarReader.layouts) {\n            var l = ActionbarReader.layouts[a];\n            if (sumpos[0].x - hppos[0].x == l.sum.x - l.hp.x && sumpos[0].y - hppos[0].y == l.sum.y - l.hp.y) {\n                layout = l;\n                break;\n            }\n        }\n        if (!layout) {\n            return false;\n        }\n        this.pos = {\n            x: hppos[0].x - layout.hp.x,\n            y: hppos[0].y - layout.hp.y,\n            layout: layout\n        };\n        return true;\n    }\n    read(buffer, bufx, bufy) {\n        if (!this.pos) {\n            throw new Error(\"interface is not found yet\");\n        }\n        if (!buffer) {\n            //TODO fix the capture dimensions!!!\n            let fixoffset = 10;\n            buffer = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"capture\"](this.pos.x, this.pos.y - fixoffset, this.pos.layout.width, this.pos.layout.height + fixoffset);\n            bufx = this.pos.x;\n            bufy = this.pos.y - fixoffset;\n        }\n        var dx = this.pos.x - bufx;\n        var dy = this.pos.y - bufy;\n        var hptext = this.readBarNumber(buffer, this.pos.layout.hp.x + dx, this.pos.layout.hp.y + dy, this.pos.layout.hor);\n        var drentext = this.readBarNumber(buffer, this.pos.layout.dren.x + dx, this.pos.layout.dren.y + dy, this.pos.layout.hor);\n        var sumtext = this.readBarNumber(buffer, this.pos.layout.sum.x + dx, this.pos.layout.sum.y + dy, this.pos.layout.hor);\n        var praytext = this.readBarNumber(buffer, this.pos.layout.pray.x + dx, this.pos.layout.pray.y + dy, this.pos.layout.hor);\n        var hpbar = this.readBar(buffer, this.pos.layout.hp.x + dx, this.pos.layout.hp.y + dy, this.pos.layout.hor);\n        var drenbar = this.readBar(buffer, this.pos.layout.dren.x + dx, this.pos.layout.dren.y + dy, this.pos.layout.hor);\n        var praybar = this.readBar(buffer, this.pos.layout.pray.x + dx, this.pos.layout.pray.y + dy, this.pos.layout.hor);\n        var sumbar = this.readBar(buffer, this.pos.layout.sum.x + dx, this.pos.layout.sum.y + dy, this.pos.layout.hor);\n        return {\n            hp: (hptext ? hptext.cur / hptext.max : hpbar),\n            dren: (drentext ? drentext.cur / drentext.max : drenbar),\n            sum: (sumtext ? sumtext.cur / sumtext.max : sumbar),\n            pray: (praytext ? praytext.cur / praytext.max : praybar),\n            exacthp: hptext,\n            exactdren: drentext,\n            exactpray: praytext,\n            exactsum: sumtext\n        };\n    }\n    readBarNumber(buffer, x, y, hor) {\n        if (hor) {\n            var line = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](buffer, chatfont, [255, 255, 255], x + 22, y + 5, true, false);\n            var m = line.text.match(/^(\\d+)(\\/(\\d+)|%)$/);\n            if (m) {\n                return { cur: +m[1], max: (m[2] == \"%\" ? 100 : +m[3]) };\n            }\n        }\n        return null;\n    }\n    readBar(buffer, x, y, hor) {\n        if (!this.pos) {\n            throw new Error(\"interface not found yet\");\n        }\n        if (hor) {\n            x += 25;\n            y += 11;\n        }\n        else {\n            x += 7;\n            y += 26;\n        }\n        var width = this.pos.layout.barlength;\n        for (var b = 0; b < width; b++) {\n            var i = buffer.pixelOffset(x + (hor ? b : 0), y + (hor ? 0 : b));\n            if (_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].coldif(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], 25, 31, 34, 255) < 20) {\n                break;\n            }\n        }\n        return b / width;\n    }\n}\nActionbarReader.layouts = {\n    mainflat: { hp: { x: 0, y: 0 }, dren: { x: 118, y: 0 }, pray: { x: 236, y: 0 }, sum: { x: 354, y: 0 }, width: 465, height: 25, hor: true, barlength: 80, type: \"mainflat\" },\n    mainhor: { hp: { x: 0, y: 0 }, dren: { x: 100, y: 0 }, pray: { x: 16, y: 22 }, sum: { x: 116, y: 22 }, width: 210, height: 45, hor: true, barlength: 62, type: \"mainhor\" },\n    mainver: { hp: { x: 0, y: 0 }, dren: { x: 0, y: 100 }, pray: { x: 22, y: 16 }, sum: { x: 22, y: 116 }, width: 35, height: 210, hor: false, barlength: 62, type: \"mainver\" },\n    maintower: { hp: { x: 0, y: 0 }, dren: { x: 0, y: 119 }, pray: { x: 0, y: 238 }, sum: { x: 0, y: 357 }, width: 20, height: 465, hor: false, barlength: 80, type: \"maintower\" }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbar.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/dren.data.png":
/*!*****************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/dren.data.png ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAJJSURBVChTJZDfS1NRAMfPuefe3bO2ufmL6dzMpKY0nducMEYSVCZTCyKmSSyIIvojeuglEqlQevGhRyN68FHoFw3BJc3KrYlam6t0tB/ldre29st7bucSfDmch+/5fL/fA0OhsKmra/HJvCk/Z7cpGQag/0KAQTyE4MWauLBUKZRE5J32Rb9+uXBpMhjDws6q0cgyEDIMlE9E76D3KLKZUeAzQKmf+2dGPNQ9dvFyLK+LrLypQvxbgBqVhHkWyW+Avplp0THo3lRhcXnH7R6Oxr7Zzk6Hk7rHC/7ILn75niUStByTm9AaZhOD7lzTsDi9tLzbb3Nl9mL206NYrfsQ8Ct5bvs7AABajwM6QN5wa0Jj0gIgJJ++3uuzWA72492nzikR3gi+Uym5WAJ43ADzMhjdHFfToDLh3q5lgltx19BQOZU42TfA8qrwp3XKphMdPYA2Rjc8akkCB3+YeOpIKZsOhjZdLjchpMdizRM+tvnxR5J79gpSoeueBkrlFXA9qsI8Lgq5YCjidAxSt33AJhSymURCoeDKNYk5FOEhgSwCzhNVuqK1US3mU3Pzj9KlGqgXR8enCpXi30ppcHgM+c43SASI1bqhsUbxaYFVYr4oZAOra01tpm6TXtPW63A4LHYXfHC709pZIRIQCaQqVphkjqVRv3KSf6vc3OmcnZmhaVeu+pDEGjqaRDWm3QAhkH6KChOek5Q8JITTtvfrDcbnKxu5fBZ1tGrjaZWCAy0aUWZL1CHjMwVYb5+Y9Hrv3p/FiDwcMf8DoSn35z60AhIAAAAASUVORK5CYII=\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvZHJlbi5kYXRhLnBuZz9iNzgyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9hY3Rpb25iYXJpbWdzL2RyZW4uZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUE0QUFBQU9DQUlBQUFDUUtycUdBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBSkpTVVJCVkNoVEpaRGZTMU5SQU1mUHVlZmUzYk8ydWZtTDZkek1wS1kwbmR1Y01FWVNWQ1pUQ3lLbVNTeUlJdm9qZXVnbEVxbFFldkdoUnlONjhGSG9GdzNCSmMzS3JZbGFtNnQwdEIvbGRyZTI5c3Q3YnVjU2ZEbWNoKy81ZkwvZkEwT2hzS21yYS9ISnZDay9aN2NwR1FhZy8wS0FRVHlFNE1XYXVMQlVLWlJFNUozMlJiOSt1WEJwTWhqRHdzNnEwY2d5RURJTWxFOUU3NkQzS0xLWlVlQXpRS21mKzJkR1BOUTlkdkZ5TEsrTHJMeXBRdnhiZ0JxVmhIa1d5VytBdnBscDBUSG8zbFJoY1huSDdSNk94cjdaems2SGs3ckhDLzdJTG43NW5pVVN0QnlUbTlBYVpoT0Q3bHpUc0RpOXRMemJiM05sOW1MMjA2TllyZnNROEN0NWJ2czdBQUJhandNNlFONXdhMEpqMGdJZ0pKKyszdXV6V0E3MjQ5Mm56aWtSM2dpK1V5bTVXQUo0M0FEek1oamRIRmZUb0RMaDNxNWxnbHR4MTlCUU9aVTQyVGZBOHFyd3AzWEtwaE1kUFlBMlJqYzhha2tDQjMrWWVPcElLWnNPaGpaZExqY2hwTWRpelJNK3R2bnhSNUo3OWdwU29ldWVCa3JsRlhBOXFzSThMZ3E1WUNqaWRBeFN0MzNBSmhTeW1VUkNvZURLTllrNUZPRWhnU3dDemhOVnVxSzFVUzNtVTNQemo5S2xHcWdYUjhlbkNwWGkzMHBwY0hnTStjNDNTQVNJMWJxaHNVYnhhWUZWWXI0b1pBT3JhMDF0cG02VFh0UFc2M0E0TEhZWGZIQzcwOXBaSVJJUUNhUXFWcGhranFWUnYzS1NmNnZjM09tY25abWhhVmV1K3BERUdqcWFSRFdtM1FBaGtINktDaE9lazVROEpJVFR0dmZyRGNibkt4dTVmQloxdEdyamFaV0NBeTBhVVdaTDFDSGpNd1ZZYjUrWTlIcnYzcC9GaUR3Y01mOERvU24zNXo2MEFoSUFBQUFBU1VWT1JLNUNZSUk9XCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/dren.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png":
/*!**********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAJlSURBVChTAVoCpf0B0NDRHSAgrKGRI/WQNDIKAQEAAgIAAQEAAQEAAQIHyMz32wdpVF5u4+DgAu3x9MPCw1Rfb90Od8jH+gEBAAD/AAEAAAEAAMnK7tsKcVRebsPCw+3x9APv6+M/Q0nb2tlJTVPX7hDbxLwQEAb29gG+2Pn2HYFMU2LDwsMNDxGek30Dk1/xn7LYODk929zfMENZz+cQvbK9y9X9BCqBP1BnzMO+DQoFm5WGYk3QA4llDgcJ6Kez3SwvOOri3C49R+D5EuP2D1djb9vLwAAAAKGcj2g51T4uDQNxUwwgEAEG9OeiueIpKSvt494mO0T77u7Cwb8ZExChnphWPM9JOgwBAQAC/f0A/P0AJiAGHPzSlZqYAAAA7dDHNzU1FAkEh4eFHPzSHgcOAQEAAQEAA2tODP7+APP1AtHdAvkGGs7Q0jEwMP7+/iUoK/799fbl1fr3BcnNAMbK/wNSPQwMCAHn6QDkCkIoMj/p6uq6wcM1Ly3+/v4sLjTi6+75690KBgLw9vwDLjpS693awdsDQlV6DAgG9/j02NPT0dHMJDE5EggAGR4qtrWsAf79DCpTA2pyhvIGJgQbPyIdF9Tb4LewqzMU8Q//77i+yQ4WHiIdFwMTKh8pNSQtOgEvNjihmpkAAAB2eHgN8cVNNAwNCf79/gDm7QGx0PkFFzeKiIgAAABcXVwDIi0w5fYDFAkD6OXjMxbhKx77BwX/BAMACggAAP4FBhQvFhocqcHP8PHtA7h2WbvV3cW+umdnZubv9AHv4gkH/v3+AefvAuoSUFJUVYSIiQgD/YtFJyQrDVak1lyKAAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvZHJlbnJldGFsLmRhdGEucG5nPzg4YzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFZIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvZHJlbnJldGFsLmRhdGEucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIkBhbHQxL2Jhc2VcIikuSW1hZ2VEZXRlY3QuaW1hZ2VEYXRhRnJvbUJhc2U2NChcImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBNEFBQUFPQ0FJQUFBQ1FLcnFHQUFBQUFXNXZVRVVBWXRkTWxBQUFBQVJ1YjFCRkFBQUFBRUVnamlJQUFBQUpibTlRUlFBQUFBQUFBQUFBQUtHS2N0VUFBQUpsU1VSQlZDaFRBVm9DcGYwQjBORFJIU0FncktHUkkvV1FORElLQVFFQUFnSUFBUUVBQVFFQUFRSUh5TXozMndkcFZGNXU0K0RnQXUzeDlNUEN3MVJmYjkwT2Q4akgrZ0VCQUFEL0FBRUFBQUVBQU1uSzd0c0tjVlJlYnNQQ3crM3g5QVB2NitNL1EwbmIydGxKVFZQWDdoRGJ4THdRRUFiMjlnRysyUG4ySFlGTVUyTER3c01ORHhHZWszMERrMS94bjdMWU9EazkyOXpmTUVOWnorY1F2Yks5eTlYOUJDcUJQMUJuek1PK0RRb0ZtNVdHWWszUUE0bGxEZ2NKNktlejNTd3ZPT3JpM0M0OVIrRDVFdVAyRDFkamI5dkx3QUFBQUtHY2oyZzUxVDR1RFFOeFV3d2dFQUVHOU9laXVlSXBLU3Z0NDk0bU8wVDc3dTdDd2I4WkV4Q2hucGhXUE05Sk9nd0JBUUFDL2YwQS9QMEFKaUFHSFB6U2xacVlBQUFBN2RESE56VTFGQWtFaDRlRkhQelNIZ2NPQVFFQUFRRUFBMnRPRFA3K0FQUDFBdEhkQXZrR0dzN1EwakV3TVA3Ky9pVW9LLzc5OWZibDFmcjNCY25OQU1iSy93TlNQUXdNQ0FIbjZRRGtDa0lvTWovcDZ1cTZ3Y00xTHkzKy92NHNMalRpNis3NTY5MEtCZ0x3OXZ3RExqcFM2OTNhd2RzRFFsVjZEQWdHOS9qMDJOUFQwZEhNSkRFNUVnZ0FHUjRxdHJXc0FmNzlEQ3BUQTJweWh2SUdKZ1FiUHlJZEY5VGI0TGV3cXpNVThRLy83N2kreVE0V0hpSWRGd01US2g4cE5TUXRPZ0V2TmppaG1wa0FBQUIyZUhnTjhjVk5OQXdOQ2Y3OS9nRG03UUd4MFBrRkZ6ZUtpSWdBQUFCY1hWd0RJaTB3NWZZREZBa0Q2T1hqTXhiaEt4NzdCd1gvQkFNQUNnZ0FBUDRGQmhRdkZob2NxY0hQOFBIdEE3aDJXYnZWM2NXK3VtZG5adWJ2OUFIdjRna0gvdjMrQWVmdkF1b1NVRkpVVllTSWlRZ0QvWXRGSnlRckRWYWsxbHlLQUFBQUFFbEZUa1N1UW1DQ1wiKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/drenretal.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png":
/*!***********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAFKSURBVChThZE9T8NADIZtX9I2AdokVEwIWoJYEEKMjCAx8A/4BaysLAjEwN9hQYhPMbMyI5aqHRCpQiu1iXq9w+mVqHyJV5Fj+318d8mhPNggBKPHSJ89tV+7xPncjDpcCzarY09pQLW/Cp2BqaFspwq2HyIf8HwrsHlkwkK1t8KJfh9gxTbNl1bSXQrWk54p2eLILg5367E0TfCsLJoZQ0xaGO3UOeul0i2OwB/KrREaJz3nd87I7UvwSmQ2/VfZAbKzviVcdKQ23W8qW+jjUM9OZb/Qq5ZM9y8xx5Eu2im/eI6nR/0vMktywph4pul5Wy4HrtNPNRFfQa5868t2ctoCUat4dx21wDRoB3VO5+tdJcPjJhTREou+R4A3saxXKPykizTmrpFOGrpANhGJMPD5ywXSfSxrHoU6o/lh7hbpqKEsURBEqOEDcNuAKOescgUAAAAASUVORK5CYII=\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvbGlmZXBvaW50cy5kYXRhLnBuZz9hYTgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9hY3Rpb25iYXJpbWdzL2xpZmVwb2ludHMuZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUE0QUFBQU9DQUlBQUFDUUtycUdBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBRktTVVJCVkNoVGhaRTlUOE5BREladFg5STJBZG9rVkV3SVdvSllFRUtNakNBeDhBLzRCYXlzTEFqRXdOOWhRWWhQTWJNeUk1YXFIUkNwUWl1MWlYcTl3K21WcUh5SlY1RmorMzE4ZDhtaFBOZ2dCS1BIU0o4OXRWKzd4UG5jakRwY0N6YXJZMDlwUUxXL0NwMkJxYUZzcHdxMkh5SWY4SHdyc0hsa3drSzF0OEtKZmg5Z3hUYk5sMWJTWFFyV2s1NHAyZUxJTGc1MzY3RTBUZkNzTEpvWlEweGFHTzNVT2V1bDBpMk93Qi9LclJFYUp6M25kODdJN1V2d1NtUTIvVmZaQWJLenZpVmNkS1EyM1c4cVcrampVTTlPWmIvUXE1Wk05eTh4eDVFdTJpbS9lSTZuUi8wdk1rdHl3cGg0cHVsNVd5NEhydE5QTlJGZlFhNTg2OHQyY3RvQ1VhdDRkeDIxd0RSb0IzVk81K3RkSmNQakpoVFJFb3UrUjRBM3NheFhLUHlraXpUbXJwRk9HcnBBTmhHSk1QRDV5d1hTZlN4ckhvVTZvL2xoN2hicHFLRXNVUkJFcU9FRGNOdUFLT2VzY2dVQUFBQUFTVVZPUks1Q1lJST1cIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/lifepoints.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png":
/*!*****************************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAEzSURBVChTjZI9SwNBEIbfyXnnXZJLIggKRjCFCHb5Hf4IO/+FINjbWmlhZWdhJVyhNtYiRKOIqMUhOcyHkPu+cZc9ziSF5GGK+Xhnd4ZdugsMIii87sLZsW+ZHKVIY9rZ1bbaJVViBl25hgoUaYKTgzjLsHeol7Q8qSDnpeKNIxUsl2Xb22csrtlY14U/WaLze308kBOUG6yyMxRVOr2ZGuAf6OhyXmm+4DzQ/sXfnsaPXGWSyI5zrzhViEYDeGk8YyJZ9Jc6T3JxkVWxwB9JK1AlIdOWDAQVNJsUBlKRhEogHWH6ImoNPHbZvWVts43+MwIbtSr1fA4Yk2ab9PrO7jWbNmutbdna6zCtEk2/pGA4xIeTVeriE0Bba4EJhoGvB8YKWVYuEnz34TpZtY6MkYT4BQQSkh1bM5DyAAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvbGlmZXBvaW50c3BvaXNvbi5kYXRhLnBuZz84ZDA2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9hY3Rpb25iYXJpbWdzL2xpZmVwb2ludHNwb2lzb24uZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUE0QUFBQU9DQUlBQUFDUUtycUdBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBRXpTVVJCVkNoVGpaSTlTd05CRUliZnlYbm5YWkpMSWdnS1JqQ0ZDSGI1SGY0SU8vK0ZJTmpiV21saFpXZGhKVnloTnRZaVJLT0lxTVVoT2N5SGtQdStjWmM5emlTRjVHR0srWGhuZDRaZHVnc01JaWk4N3NMWnNXK1pIS1ZJWTlyWjFiYmFKVlZpQmwyNWhnb1VhWUtUZ3pqTHNIZW9sN1E4cVNEbnBlS05JeFVzbDJYYjIyY3NydGxZMTRVL1dhTHplMzA4a0JPVUc2eXlNeFJWT3IyWkd1QWY2T2h5WG1tKzREelEvc1hmbnNhUFhHV1N5STV6cnpoVmlFWURlR2s4WXlKWjlKYzZUM0p4a1ZXeHdCOUpLMUFsSWRPV0RBUVZOSnNVQmxLUmhFb2dIV0g2SW1vTlBIYlp2V1Z0czQzK013SWJ0U3IxZkE0WWsyYWI5UHJPN2pXYk5tdXRiZG5hNnpDdEVrMi9wR0E0eEllVFZlcmlFMEJiYTRFSmhvR3ZCOFlLV1ZZdUVuejM0VHBadFk2TWtZVDRCUVFTa2gxYk01RHlBQUFBQUVsRlRrU3VRbUNDXCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/lifepointspoison.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/prayer.data.png":
/*!*******************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/prayer.data.png ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAHxSURBVChTXZFLaxNhFIa/28x8mYmxjc2NtM1giNhEam2zEnXhykjBjSCCuy78Af4Df4F0VbeCgiu1duFCFNRQFDeWoITaJG3SlF4cp2YymczV06YE8SwOh/d9OO93+PD8vYXd77sKG+NiWKDcdnvTNy4Xb81/fbWy9mZVZNzxLMs2uu4BPc3SwMl8NCRFEMJyIjxbup6IjGJFaq3XAgtLoowxxT4hA46LCqMiol72UkFNq8IpN5PO5OYugEIJAxcYIrIQTCjApnU4NpW4VirFotIIU+JRDjMovX4HXGDoOfUKQoHjm8np9O2F+/EzHCE0EiaWHSgyU6dmttpVfWc/CBAdT+ZDsXD+6tzNO3eHHHQu4iM6xDLnL5qeqWl7+MHDJ9nZGXVchcQhNyzd8KHvaVaj1cDP1w4jAYE74H3/cYMCWne7TofRTCqPFR6RopAFiZB7ghzXYGtH9+utBsW/hc1q1TCN+ERWkYV/6ZP0X713K8ufXr6mZyeKTtdqr29sbf/MForD3QNuX7OePV788eGLY/TpZKpACCOIHmy2mjsbR/Tx7sG+p0uP6p8r8OEIfiwVyxGMMaGYEG27bWMvOZlzhP4f3X+7/KLyvswYB9/zbOJSw3YsmALfCzxUWS3XmjW4t96sfSt/BAV0cG3H+gvHq+CsjxcGZQAAAABJRU5ErkJggg==\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvcHJheWVyLmRhdGEucG5nPzEzY2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFZIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvcHJheWVyLmRhdGEucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIkBhbHQxL2Jhc2VcIikuSW1hZ2VEZXRlY3QuaW1hZ2VEYXRhRnJvbUJhc2U2NChcImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBNEFBQUFPQ0FJQUFBQ1FLcnFHQUFBQUFXNXZVRVVBWXRkTWxBQUFBQVJ1YjFCRkFBQUFBRUVnamlJQUFBQUpibTlRUlFBQUFBQUFBQUFBQUtHS2N0VUFBQUh4U1VSQlZDaFRYWkZMYXhOaEZJYS8yOHg4bVlteGpjMk50TTFnaU5oRWFtMnpFblhoeWtqQmpTQ0N1eTc4QWY0RGY0RjBWYmVDZ2l1MWR1RkNGTlJRRkRlV29JVGFKRzNTbEY0Y3AyWXltY3pWMDZZRThTd09oL2Q5T085MytQRDh2WVhkNzdzS0crTmlXS0RjZG52VE55NFhiODEvZmJXeTltWlZaTnp4TE1zMnV1NEJQYzNTd01sOE5DUkZFTUp5SWp4YnVwNklqR0pGYXEzWEFndExvb3d4eFQ0aEE0NkxDcU1pb2w3MlVrRk5xOElwTjVQTzVPWXVnRUlKQXhjWUlySVFUQ2pBcG5VNE5wVzRWaXJGb3RJSVUrSlJEak1vdlg0SFhHRG9PZlVLUW9Iam04bnA5TzJGKy9FekhDRTBFaWFXSFNneVU2ZG10dHBWZldjL0NCQWRUK1pEc1hEKzZ0ek5PM2VISEhRdTRpTTZ4RExuTDVxZXFXbDcrTUhESjluWkdYVmNoY1FoTnl6ZDhLSHZhVmFqMWNEUDF3NGpBWUU3NEgzL2NZTUNXbmU3VG9mUlRDcVBGUjZSb3BBRmlaQjdnaHpYWUd0SDkrdXRCc1cvaGMxcTFUQ04rRVJXa1lWLzZaUDBYNzEzSzh1ZlhyNm1aeWVLVHRkcXIyOXNiZi9NRm9yRDNRTnVYN09lUFY3ODhlR0xZL1RwWktwQUNDT0lIbXkybWpzYlIvVHg3c0crcDB1UDZwOHI4T0VJZml3Vnl4R01NYUdZRUcyN2JXTXZPWmx6aFA0ZjNYKzcvS0x5dnN3WUI5L3piT0pTdzNZc21BTGZDenhVV1MzWG1qVzR0OTZzZlN0L0JBVjBjRzNIK2d2SHErQ3NqeGNHWlFBQUFBQkpSVTVFcmtKZ2dnPT1cIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/prayer.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png":
/*!*********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAHYSURBVChTXc9NaxNBGAfwnZnNzuxmd5OUbJNN0uiKCrah2EtVPLTQi+DNozc/ime/hHjTgwcPRQrtxR5EUVAEEdTQhrhtYvc1a/ctOz6aUkKfw7D8/z/mmUWPtnYy/tEyr9bKusQqYeSjHrK21vu778SviDEtjX03Cvr2d9KzVsBV1K6uGQTJkRIs3uoaqj5l2B14FdSkTBcEWaYENxrL4FSlSdDCJD0Vl2jbbJW0vN1sSZdk9zSGHFowWJcWETUEQXEmnlc/Wt1YM2q0KpaNBbq6cTNq2JBDCwYjXC0yNAp/uUb/zoO7IARBqKoYTviGBHJowZC16w8jeqLcSG/fX593TEJxysuyWLdaR5MD9yREj5/smb3OkmnOu/PxJgWcYycZ2DZ6/tnXOYb/gPddcLMB7eVRFopk+fIml4lGq7ALNsLeM/J/ZreGPj8cDskV6Z79w/bDca3VvqBnbuQkb3f2v+3+xIyqxFcO3xxvP3s5dpNzcfZKN4EcWjA4yQOOU0o090v86umLkRPP3fcvgRxaMORaZxNjxIVpqcSCYyfMvHqnm5WSwCv2t/fsDyNJVKDNpwnpNFYQwpgQgRdFwX3/t24ZOqsdDAefXr/HCRWxmBfpn9j9C/Fr4hM9D4PKAAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3MvcHJheWVyb24uZGF0YS5wbmc/ZDI5OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQVkiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvYWN0aW9uYmFyaW1ncy9wcmF5ZXJvbi5kYXRhLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCJAYWx0MS9iYXNlXCIpLkltYWdlRGV0ZWN0LmltYWdlRGF0YUZyb21CYXNlNjQoXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQTRBQUFBT0NBSUFBQUNRS3JxR0FBQUFBVzV2VUVVQVl0ZE1sQUFBQUFSdWIxQkZBQUFBQUVFZ2ppSUFBQUFKYm05UVJRQUFBQUFBQUFBQUFLR0tjdFVBQUFIWVNVUkJWQ2hUWGM5TmF4TkJHQWZ3blpuTnp1eG1kNU9VYkpOTjB1aUtDcmFoMkV0VlBMVFFpK0ROb3pjL2ltZS9oSGpUZ3djUFJRcnR4UjVFVVZBRUVkVFFocmh0WXZjMWEvY3RPejZhVWtLZnc3RDgvei9tbVVXUHRuWXkvdEV5cjliS3VzUXFZZVNqSHJLMjF2dTc3OFN2aURFdGpYMDNDdnIyZDlLelZzQlYxSzZ1R1FUSmtSSXMzdW9hcWo1bDJCMTRGZFNrVEJjRVdhWUVOeHJMNEZTbFNkRENKRDBWbDJqYmJKVzB2TjFzU1pkazl6U0dIRm93V0pjV0VUVUVRWEVtbmxjL1d0MVlNMnEwS3BhTkJicTZjVE5xMkpCREN3WWpYQzB5TkFwL3VVYi96b083SUFSQnFLb1lUdmlHQkhKb3daQzE2dzhqZXFMY1NHL2ZYNTkzVEVKeHlzdXlXTGRhUjVNRDl5UkVqNS9zbWIzT2ttbk91L1B4SmdXY1l5Y1oyRFo2L3RuWE9ZYi9nUGRkY0xNQjdlVlJGb3BrK2ZJbWw0bEdxN0FMTnNMZU0vSi9acmVHUGo4Y0Rza1Y2Wjc5dy9iRGNhM1Z2cUJuYnVRa2IzZjJ2KzMreEl5cXhGY08zeHh2UDNzNWRwTnpjZlpLTjRFY1dqQTR5UU9PVTBvMDkwdjg2dW1Ma1JQUDNmY3ZnUnhhTU9SYVp4Tmp4SVZwcWNTQ1l5Zk12SHFubTVXU3dDdjJ0L2ZzRHlOSlZLRE5wd25wTkZZUXdwZ1FnUmRGd1gzL3QyNFpPcXNkREFlZlhyL0hDUld4bUJmcG45ajlDL0ZyNGhNOUQ0UEtBQUFBQUVsRlRrU3VRbUNDXCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/prayeron.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png":
/*!**********************************************************************!*\
  !*** ../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAIAAACQKrqGAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAAJfSURBVChTDZHda9NgFMaTN23TdUm7ds3SpG36tdaum7IxmQNl4gc4v7Z5OdCJt4J388YL8U/YbkQQREGGV0OFgUNwDJUJbk7xe3UptaySreva9CtN3uT1vTs85/dwznMOmTl+2mg1zkxOf1pb4YToifFx1QQeN+OnbY/uzxt624mshq5rmkYJsV4LGgflPaeLAQDZnEwx+7NUVhmpd3R4bH31lWZCRJA2QFLdQsjt8zf2d8OJjBRPRo4MLs3fW11cqO0Wfan00LlJPhQ121qzWiZHxicxd3X2Lp7bKCn7B6qUTMoba3wk3unnCYJo1dUOxp1OpyhRDE7N3I73Sh/evFZyslYpO2m7QTlbWttB2+0OujsUpTtZjhVs2Kfs5ZbuzDVbrWCqP31sTIwnsFhV6zhcTBrAdVC0B4CDCkZiRfk36WKbpd3RqemJS5eR3c6ybCiQ9Hp6MFSrWW6WqiMTYMgbjmNrlxQTeC4nKxvv3iYkvpuxNFjW1HZV2Vl8sTx7/Ro1MXOzXms065WglBwYGvzy+ePeTmE7K2dl2c8EvF7m5bPHywsPTYSokfNXPCz7r5Dri4Y2N78qBdnUTdOCv9bfP38yR9Adq0uLDpcLAECdvXGrh/PtK6VKo21alofjXXzY2+UpFQvqQXX7x3eCJJGFTAhBxMcghBJDw3hdKRYXDvVzAh+OSIdPXUCWRdlsJAC4ZUId5L5trjx9kEklIn0ZnosFRBEfnOx0D/YdpSkAdfxX3dI1aJhUuVrLbm2dvDghCIIBoN8tFpUCw7JdPd5K/k8+/5cgSAgNCxr/AZQMC0FN97E9AAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3Mvc3VtcG9pbnRzLmRhdGEucG5nPzk5NzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHVEQUFZIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2FjdGlvbmJhcmltZ3Mvc3VtcG9pbnRzLmRhdGEucG5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIkBhbHQxL2Jhc2VcIikuSW1hZ2VEZXRlY3QuaW1hZ2VEYXRhRnJvbUJhc2U2NChcImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBNEFBQUFPQ0FJQUFBQ1FLcnFHQUFBQUFXNXZVRVVBWXRkTWxBQUFBQVJ1YjFCRkFBQUFBRUVnamlJQUFBQUpibTlRUlFBQUFBQUFBQUFBQUtHS2N0VUFBQUpmU1VSQlZDaFREWkhkYTlOZ0ZNYVROMjNUZFVtN2RzM1NwRzM2dGRhdW03SXhtUU5sNGdjNHY3WjVPZENKdDRKMzg4WUw4VS9ZYmtRUVJFR0dWME9GZ1VOd0RKVUpiazd4ZTNVcHRheVNyZXZhOUN0TjN1VDF2VHM4NS9kd3puTU9tVGwrMm1nMXpreE9mMXBiNFlUb2lmRngxUVFlTitPbmJZL3V6eHQ2MjRtc2hxNXJta1lKc1Y0TEdnZmxQYWVMQVFEWm5Fd3grN05VVmhtcGQzUjRiSDMxbFdaQ1JKQTJRRkxkUXNqdDh6ZjJkOE9KakJSUFJvNE1MczNmVzExY3FPMFdmYW4wMExsSlBoUTEyMXF6V2laSHhpY3hkM1gyTHA3YktDbjdCNnFVVE1vYmEzd2szdW5uQ1lKbzFkVU94cDFPcHloUkRFN04zSTczU2gvZXZGWnlzbFlwTzJtN1FUbGJXdHRCMiswT3Vqc1VwVHRaamhWczJLZnM1WmJ1ekRWYnJXQ3FQMzFzVEl3bnNGaFY2emhjVEJyQWRWQzBCNENEQ2taaVJmazM2V0ticGQzUnFlbUpTNWVSM2M2eWJDaVE5SHA2TUZTcldXNldxaU1UWU1nYmptTnJseFFUZUM0bkt4dnYzaVlrdnB1eE5GalcxSFpWMlZsOHNUeDcvUm8xTVhPelhtczA2NVdnbEJ3WUd2enkrZVBlVG1FN0syZGwyYzhFdkY3bTViUEh5d3NQVFlTb2tmTlhQQ3o3cjVEcmk0WTJONzhxQmRuVVRkT0N2OWJmUDM4eVI5QWRxMHVMRHBjTEFFQ2R2WEdyaC9QdEs2VktvMjFhbG9malhYelkyK1VwRlF2cVFYWDd4M2VDSkpHRlRBaEJ4TWNnaEJKRHczaGRLUllYRHZWekFoK09TSWRQWFVDV1JkbHNKQUM0WlVJZDVMNXRyang5a0VrbEluMFpub3NGUkJFZm5PeDBEL1lkcFNrQWRmeFgzZEkxYUpoVXVWckxibTJkdkRnaENJSUJvTjh0RnBVQ3c3SmRQZDVLL2s4Ky81Y2dTQWdOQ3hyL0FaUU1DMEZOOTdFOUFBQUFBRWxGVGtTdVFtQ0NcIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/actionbarimgs/sumpoints.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png":
/*!********************************************************************!*\
  !*** ../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAIIAAAAICAMAAAAC9tdxAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAMUExURQAAAA8UFrN6LwAAAMHCSL8AAAAEdFJOU////wBAKqn0AAAACW5vUEUAAAAAAAAAAAChinLVAAAA90lEQVQ4T4WS2xLDIBBCXf3/fy4se9POtD7EExSCSdY5x2ybGeDY3sCHMISQIErL1aERbsKV5p1kRa3tzQpwrAi0tRTYpG2euDhc47JWoXjIt1ex3Jrk49Gw12N4R7NhVuAgbMM6yD35kCCluFaOIMXSG4SpqDV3axvNkCIQkCQfiGeICkV0xPugdlXw2HHBVISR2lsBKRndr5Xr1PjSpRW1A3NqbPinwijzVGBeRFMlMQ/nuzXsErV3aijzuwIgtaeCNwiiSvKz+z/TGvfHapUeGgDBvHVHXijHLU1BXqGOOai/rFv1IVobxKBX4yMiDGaNgots7w/2HAa69Wye5gAAAABJRU5ErkJggg==\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2ltZ3MvYWN0aW9uYmFybnVtYmVycy5kYXRhLnBuZz84NWRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1REFBWSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYWJpbGl0eS9pbWdzL2FjdGlvbmJhcm51bWJlcnMuZGF0YS5wbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiQGFsdDEvYmFzZVwiKS5JbWFnZURldGVjdC5pbWFnZURhdGFGcm9tQmFzZTY0KFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUlJQUFBQUlDQU1BQUFBQzl0ZHhBQUFBQVc1dlVFVUFZdGRNbEFBQUFBUnViMUJGQUFBQUFFRWdqaUlBQUFBTVVFeFVSUUFBQUE4VUZyTjZMd0FBQU1IQ1NMOEFBQUFFZEZKT1UvLy8vd0JBS3FuMEFBQUFDVzV2VUVVQUFBQUFBQUFBQUFDaGluTFZBQUFBOTBsRVFWUTRUNFdTMnhMRElCQkNYZjMvZnk0c2U5UE90RDdFRXhTQ1NkWTV4MnliR2VEWTNzQ0hNSVNRSUVyTDFhRVJic0tWNXAxa1JhM3R6UXB3ckFpMHRSVFlwRzJldURoYzQ3SldvWGpJdDFleDNKcms0OUd3MTJONFI3TmhWdUFnYk1NNnlEMzVrQ0NsdUZhT0lNWFNHNFNwcURWM2F4dk5rQ0lRa0NRZmlHZUlDa1YweFB1Z2RsWHcySEhCVklTUjJsc0JLUm5kcjVYcjFQalNwUlcxQTNOcWJQaW53aWp6VkdCZVJGTWxNUS9udXpYc0VyVjNhaWp6dXdJZ3RhZUNOd2lpU3ZLeit6L1RHdmZIYXBVZUdnREJ2SFZIWGlqSExVMUJYcUdPT2FpL3JGdjFJVm9ieEtCWDR5TWlER2FOZ290czd3LzJIQWE2OVd5ZTVnQUFBQUJKUlU1RXJrSmdnZz09XCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/imgs/settingsCog.data.png":
/*!***************************************************************!*\
  !*** ../node_modules/@alt1/ability/imgs/settingsCog.data.png ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAAcAAAAKCAYAAAB4zEQNAAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAAJbm9QRQAAAAAAAAAAAKGKctUAAADHSURBVChTY7y2O+y/NAcjw7ajbxgMNYUZpIQZGUDgyct3DIxPNzj/Z+JhBQuAwJev/8A0DzcTA9OhCx8Z/n/9zfD+3WeGs1feMaj47WQE4XNANuPJ+Y7/JQW+M1x68I/Bu+AkxEwoYAJJ/PnCgCEBAkzf3nyCMjEB041nDAy/fnxiOD3D7D9UDA6YXr58DmbwsXxFUXBmpvl/xkuTlP9DLPsGxFxgFgywnL/7joGV5T/DjUcMDKoy3xnE+FkZBHkZGG4++c0AAHRPSyvaocp9AAAAAElFTkSuQmCC\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2ltZ3Mvc2V0dGluZ3NDb2cuZGF0YS5wbmc/ZWIwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQVkiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvaW1ncy9zZXR0aW5nc0NvZy5kYXRhLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCJAYWx0MS9iYXNlXCIpLkltYWdlRGV0ZWN0LmltYWdlRGF0YUZyb21CYXNlNjQoXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQWNBQUFBS0NBWUFBQUI0ekVRTkFBQUFBVzV2VUVVQVl0ZE1sQUFBQUFSdWIxQkZBQUFBQUVFZ2ppSUFBQUFKYm05UVJRQUFBQUFBQUFBQUFLR0tjdFVBQUFESFNVUkJWQ2hUWTd5Mk8reS9OQWNqdzdhamJ4Z01OWVVacElRWkdVRGd5Y3QzREl4UE56ai9aK0poQlF1QXdKZXYvOEEwRHpjVEE5T2hDeDhaL24vOXpmRCszV2VHczFmZU1hajQ3V1FFNFhOQU51UEorWTcvSlFXK00xeDY4SS9CdStBa3hFd29ZQUpKL1BuQ2dDRUJBa3pmM255Q01qRUIwNDFuREF5L2ZueGlPRDNEN0Q5VURBNllYcjU4RG1id3NYeEZVWEJtcHZsL3hrdVRsUDlETFBzR3hGeGdGZ3l3bkwvN2pvR1Y1VC9EalVjTURLb3kzeG5FK0ZrWkJIa1pHRzQrK2MwQUFIUlBTeXZhb2NwOUFBQUFBRWxGVGtTdVFtQ0NcIikiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/imgs/settingsCog.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/imgs/smallbarnumber.data.png":
/*!******************************************************************!*\
  !*** ../node_modules/@alt1/ability/imgs/smallbarnumber.data.png ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports=__webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\").ImageDetect.imageDataFromBase64(\"iVBORw0KGgoAAAANSUhEUgAAAAwAAAAQCAMAAAAVv241AAAAAW5vUEUAYtdMlAAAAARub1BFAAAAAEEgjiIAAAASUExURQ8UFqBnC8qCDkc1FAAAAAAAAGC4B/sAAAAGdFJOU///////ALO/pL8AAAAJbm9QRQAAAAAAAAAAAKGKctUAAAA+SURBVBhXlY4xEgAgCMNoOf7/ZalwiqNZSBmgJsANyl3DeT1TeRTTw+htifHsP8I8ALYletqq8NR5iyoJYgHlIAI/8NoYcAAAAABJRU5ErkJggg==\")//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9hYmlsaXR5L2ltZ3Mvc21hbGxiYXJudW1iZXIuZGF0YS5wbmc/M2Y2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdURBQVkiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0BhbHQxL2FiaWxpdHkvaW1ncy9zbWFsbGJhcm51bWJlci5kYXRhLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCJAYWx0MS9iYXNlXCIpLkltYWdlRGV0ZWN0LmltYWdlRGF0YUZyb21CYXNlNjQoXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQXdBQUFBUUNBTUFBQUFWdjI0MUFBQUFBVzV2VUVVQVl0ZE1sQUFBQUFSdWIxQkZBQUFBQUVFZ2ppSUFBQUFTVUV4VVJROFVGcUJuQzhxQ0RrYzFGQUFBQUFBQUFHQzRCL3NBQUFBR2RGSk9VLy8vLy8vL0FMTy9wTDhBQUFBSmJtOVFSUUFBQUFBQUFBQUFBS0dLY3RVQUFBQStTVVJCVkJoWGxZNHhFZ0FnQ01Ob09mNy9aYWx3aXFOWlNCbWdKc0FOeWwzRGVUMVRlUlRUdytodGlmSHNQOEk4QUxZbGV0cXE4TlI1aXlvSllnSGxJQUkvOE5vWWNBQUFBQUJKUlU1RXJrSmdnZz09XCIpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/imgs/smallbarnumber.data.png\n");

/***/ }),

/***/ "../node_modules/@alt1/ability/index.ts":
/*!**********************************************!*\
  !*** ../node_modules/@alt1/ability/index.ts ***!
  \**********************************************/
/*! exports provided: ActionbarReader, default, AbilityState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AbilityReader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbilityState\", function() { return AbilityState; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @alt1/ocr */ \"../node_modules/@alt1/ocr/index.ts\");\n/* harmony import */ var _actionbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actionbar */ \"../node_modules/@alt1/ability/actionbar.ts\");\n/* harmony import */ var _alt1_base_imagedetect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @alt1/base/imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActionbarReader\", function() { return _actionbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n\n\n\n\n\n\n;\nvar cdfont = __webpack_require__(/*! @alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json */ \"../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json\");\nvar hotkeyfont = __webpack_require__(/*! @alt1/ocr/fonts/aa_8px_new.fontmeta.json */ \"../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json\");\nvar imgs = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].webpackImages({\n    settingscog: __webpack_require__(/*! ./imgs/settingsCog.data.png */ \"../node_modules/@alt1/ability/imgs/settingsCog.data.png\"),\n    smallbarnumber: __webpack_require__(/*! ./imgs/smallbarnumber.data.png */ \"../node_modules/@alt1/ability/imgs/smallbarnumber.data.png\"),\n    actionbarnumbers: __webpack_require__(/*! ./imgs/actionbarnumbers.data.png */ \"../node_modules/@alt1/ability/imgs/actionbarnumbers.data.png\")\n});\nvar barnumimgs = null;\nvar barnummap = {};\nimgs.promise.then(() => {\n    barnumimgs = _alt1_base_imagedetect__WEBPACK_IMPORTED_MODULE_3__[\"ImageDataSet\"].fromFilmStrip(imgs.actionbarnumbers, 10);\n    for (let a = 0; a < 13; a++) {\n        barnummap[a] = (a + 1) + \"\";\n    }\n});\nclass AbilityReader {\n    constructor(abilityimgs) {\n        this.bars = [];\n        this.mainbar = null;\n        this.barstates = {};\n        this.captureRect = null;\n        this.actionbarReader = new _actionbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n        this.abilityimgs = null;\n        this.lifestate = null;\n        //event when ocluded bar is visible again, before any further reading happens\n        this.hooks = {\n            onbarshown: null\n        };\n        this.abilityimgs = abilityimgs;\n    }\n    find(img) {\n        if (!img) {\n            img = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"captureHoldFullRs\"]();\n        }\n        this.bars = [];\n        var locs = img.findSubimage(imgs.smallbarnumber);\n        var cog = imgs.settingscog;\n        for (var loc of locs) {\n            for (var key in AbilityBar.types) {\n                var t = AbilityBar.types[key];\n                if (!t.cog) {\n                    continue;\n                }\n                var rect = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](loc.x - t.detect.x + t.cog.x, loc.y - t.detect.y + t.cog.y, cog.width, cog.height);\n                if (_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"].fromArgs(img).contains(rect)) {\n                    var buf = img.read(loc.x - t.detect.x + t.cog.x, loc.y - t.detect.y + t.cog.y, cog.width, cog.height);\n                    if (buf.pixelCompare(cog) < 10) {\n                        var bar = new AbilityBar(this, loc.x - t.detect.x, loc.y - t.detect.y, t, this.barstates);\n                        bar.overlay();\n                        this.bars.push(bar);\n                        break;\n                    }\n                }\n            }\n        }\n        this.actionbarReader.find(img);\n        if (this.actionbarReader.pos) {\n            var mainpos = this.actionbarReader.pos;\n            var t = AbilityBar.types[mainpos.layout.type];\n            var bar = new AbilityBar(this, mainpos.x - t.action.x, mainpos.y - t.action.y, AbilityBar.types[mainpos.layout.type], this.barstates);\n            bar.overlay();\n            this.bars.unshift(bar);\n            this.mainbar = bar;\n        }\n        if (this.bars.length == 0) {\n            return null;\n        }\n        this.captureRect = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"].fromArgs(this.bars[0].bounds);\n        for (var i = 1; i < this.bars.length; i++) {\n            this.captureRect.union(this.bars[i].bounds);\n        }\n        return this.bars.length;\n    }\n    getCaptAreas() {\n        var r = {};\n        for (var b in this.bars) {\n            r[\"bar\" + b] = this.bars[b].bounds;\n        }\n        return r;\n    }\n    /**\n     * @deprecated kinda needs rewrite to be efficient, use readallslotsinner manually instead\n     * @param img\n     */\n    readAllSlots(img) {\n        var data;\n        if (!this.captureRect) {\n            throw new Error(\"no capturerect set \");\n        }\n        if (img instanceof _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImgRef\"]) {\n            data = img.toData(this.captureRect.x, this.captureRect.y, this.captureRect.width, this.captureRect.height);\n        }\n        else {\n            data = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"capture\"](this.captureRect.x, this.captureRect.y, this.captureRect.width, this.captureRect.height);\n        }\n        var capts = {};\n        var captareas = {};\n        for (var a in this.bars) {\n            capts[\"bar\" + a] = data;\n            captareas[\"bar\" + a] = this.captureRect;\n        }\n        return this.readAllSlotsInner(capts, captareas);\n    }\n    readAllSlotsInner(capts, captareas) {\n        var visiblebars = [];\n        for (var b in this.bars) {\n            var bar = this.bars[b];\n            var capt = capts[\"bar\" + b];\n            var captarea = captareas[\"bar\" + b];\n            var nr = bar.readBarNr(capt, captarea.x, captarea.y);\n            if (!nr) {\n                continue;\n            }\n            var state = this.barstates[nr];\n            visiblebars.push(state);\n            if (!state.visible && this.hooks.onbarshown) {\n                this.hooks.onbarshown(state);\n            }\n            for (var a = 0; a < bar.slots.length; a++) {\n                state.slots[a].readAbility(capt, bar.slots[a].x - captarea.x, bar.slots[a].y - captarea.y);\n            }\n        }\n        for (var id in this.barstates) {\n            var barstate = this.barstates[id];\n            barstate.visible = visiblebars.indexOf(this.barstates[id]) != -1;\n        }\n    }\n    finishTick() {\n        for (var b in this.barstates) {\n            var bar = this.barstates[b];\n            for (var slot of bar.slots) {\n                slot.lastcooldown = slot.cooldown;\n                slot.lasttickcooldown = slot.tickcooldown;\n            }\n        }\n    }\n    readLife(buffer, bufx, bufy) {\n        if (this.actionbarReader.pos == null) {\n            return null;\n        }\n        this.lifestate = this.actionbarReader.read(buffer, bufx, bufy);\n        return this.lifestate;\n    }\n    overlayState() {\n        alt1.overLaySetGroup(\"abildebug\");\n        alt1.overLayFreezeGroup(\"abildebug\");\n        alt1.overLayClearGroup(\"abildebug\");\n        for (var bar of this.bars) {\n            var state = this.barstates[bar.barid];\n            if (state) {\n                for (var a = 0; a < bar.slots.length; a++) {\n                    state.slots[a].overlayState(bar.slots[a].x, bar.slots[a].y);\n                }\n            }\n        }\n        alt1.overLayRefreshGroup(\"abildebug\");\n    }\n    *visibleAbilities() {\n        for (var bar of this.bars) {\n            if (bar.barid) {\n                yield* this.barstates[bar.barid].slots;\n            }\n        }\n    }\n    *allAbilities() {\n        for (var barid in this.barstates) {\n            var bar = this.barstates[barid];\n            yield* bar.slots;\n        }\n    }\n    *mainbarAbilities() {\n        if (this.mainbar) {\n            var bar = this.barstates[this.mainbar.barid];\n            if (bar) {\n                yield* bar.slots;\n            }\n        }\n    }\n    *allslots() {\n        for (var bar of this.bars) {\n            yield* bar.slots;\n        }\n    }\n}\nAbilityReader.imgs = {\n    smallbarnumber: null,\n    settingscog: null\n};\n;\nclass AbilityBarSlot {\n    constructor(x, y, index, bar) {\n        this.x = x;\n        this.y = y;\n        this.index = index;\n        this.bar = bar;\n    }\n    getState() {\n        return this.bar.barstates[this.bar.barid].slots[this.index];\n    }\n}\nclass AbilityBar {\n    constructor(reader, x, y, layout, barstates) {\n        this.barid = \"\"; //TODO find out when and where this is assigned, currently no proper initialization\n        this.slots = [];\n        this.reader = reader;\n        this.layout = layout;\n        this.barstates = barstates;\n        this.x = x;\n        this.y = y;\n        var bounds = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](this.x + layout.num.x, this.y + layout.num.y, 10, 15);\n        var cx = x;\n        var cy = y;\n        for (var a = 0; a < layout.length; a++) {\n            this.slots.push(new AbilityBarSlot(cx, cy, a, this));\n            bounds.union(new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](cx, cy, AbilityState.iconwidth, AbilityState.iconheight));\n            cx += layout.step.x;\n            cy += layout.step.y;\n            if ((a + 1) % layout.rowlen == 0) {\n                cx += layout.rowstep.x - layout.rowlen * layout.step.x;\n                cy += layout.rowstep.y - layout.rowlen * layout.step.y;\n            }\n        }\n        if (layout.action) {\n            var mainlayout = _actionbar__WEBPACK_IMPORTED_MODULE_2__[\"default\"].layouts[layout.id];\n            var mainrect = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](x + layout.action.x, y + layout.action.y, mainlayout.width, mainlayout.height);\n            mainrect.inflate(10, 10);\n            bounds.union(mainrect);\n        }\n        this.bounds = bounds;\n    }\n    readBarNr(buffer, bufx, bufy) {\n        let match = barnumimgs.matchBest(buffer, this.x + this.layout.num.x - bufx, this.y + this.layout.num.y - bufy);\n        //1st secondary ability bar has one pixel offset!!@#!@#\n        match = match || barnumimgs.matchBest(buffer, this.x + this.layout.num.x - bufx, this.y + this.layout.num.y - bufy - 1);\n        if (!match) {\n            return \"\";\n        }\n        this.barid = barnummap[match.index];\n        if (!this.barstates[this.barid]) {\n            this.barstates[this.barid] = { barid: this.barid, slots: [], visible: false };\n            for (var b = 0; b < this.layout.length; b++) {\n                this.barstates[this.barid].slots[b] = new AbilityState(this.reader);\n            }\n        }\n        return this.barid;\n    }\n    overlay() {\n        if (_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"hasAlt1\"]) {\n            alt1.overLayRect(_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 255, 255), this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height, 3000, 2);\n        }\n    }\n}\nAbilityBar.types = {\n    flat: { id: \"flat\", sec: true, step: { x: 36, y: 0 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, cog: { x: 504, y: 17 }, detect: { x: 501, y: -2 }, num: { x: 503, y: 2 } },\n    hor: { id: \"hor\", sec: true, step: { x: 35, y: 0 }, rowstep: { x: 0, y: 35 }, rowlen: 7, length: 14, cog: { x: 245, y: 54 }, detect: { x: 242, y: -1 }, num: { x: 244, y: 3 } },\n    ver: { id: \"ver\", sec: true, step: { x: 0, y: 35 }, rowstep: { x: 35, y: 0 }, rowlen: 7, length: 14, cog: { x: 56, y: 245 }, detect: { x: -3, y: 242 }, num: { x: -1, y: 246 } },\n    tower: { id: \"tower\", sec: true, step: { x: 0, y: 36 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, cog: { x: 20, y: 504 }, detect: { x: -3, y: 501 }, num: { x: -1, y: 505 } },\n    mainflat: { id: \"mainflat\", sec: false, step: { x: 36, y: 0 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, detect: { x: 12, y: -29 }, action: { x: 54, y: -31 }, num: { x: 14, y: -25 } },\n    mainhor: { id: \"mainhor\", sec: false, step: { x: 36, y: 0 }, rowstep: { x: 0, y: 36 }, rowlen: 7, length: 14, detect: { x: 10, y: -45 }, action: { x: 43, y: -47 }, num: { x: 12, y: -41 } },\n    mainver: { id: \"mainver\", sec: false, step: { x: 0, y: 35 }, rowstep: { x: 35, y: 0 }, rowlen: 7, length: 14, detect: { x: 84, y: 232 }, action: { x: 75, y: 10 }, num: { x: 86, y: 236 } },\n    maintower: { id: \"maintower\", sec: false, step: { x: 0, y: 36 }, rowstep: { x: 0, y: 0 }, rowlen: 14, length: 14, detect: { x: 40, y: 15 }, action: { x: 43, y: 45 }, num: { x: 42, y: 19 } },\n};\nclass AbilityState {\n    constructor(reader) {\n        //internal\n        this.nextdetecttry = 0; //timestamp of next ability read attempt\n        //stateful\n        this.lastcooldown = -1; //cooldown at last confirmed tick\n        this.lasttickcooldown = -1; //number of ticks cooldown on last comfirmed read\n        this.tickcooldown = 0; //number of ticks left on cooldown\n        this.cdchange = 0; //cd change since last tick\n        this.gcd = true; //current cooldown is coused by global cooldown and is 1.8sec\n        this.donetime = 0; //timestamp of when cd will be done\n        this.hadcd = false; //has been on cooldown in the last minute\n        //only function of pixel\n        this.cooldown = 0; //current visible cooldown (whole sec)\n        this.available = false; //false if the ability can't be used even when off cd (wrong weapon)\n        this.cdfraction = -1; //fraction of cooldown completed as read by darker pixel clock\n        this.ability = null; //the detected ability \n        this.hotkey = \"\"; //hotkey text of ability\n        this.reader = null;\n        this.debug = null;\n        this.reader = reader;\n    }\n    readAbility(data, x, y) {\n        var res = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](data, cdfont, [206, 213, 135], x + 31, y + 8, false, true);\n        var t = 0;\n        if (res.text == \"\") {\n            //don't trust a failed read as \"0\", only read it as 0 if we have a pixel match on the icon in the cd area\n            var allow = this.cooldown <= 1 || this.ability && this.confirmCdArea(data, x, y);\n            t = (allow ? 0 : Math.ceil((this.lasttickcooldown - 1) * 0.6));\n        }\n        else if (res.text.endsWith(\"m\")) {\n            t = 60 * +res.text.slice(0, -1);\n        }\n        else {\n            t = +res.text;\n        }\n        var now = Date.now();\n        this.cdchange = (this.lastcooldown != -1 ? t - this.lastcooldown : 0);\n        this.cooldown = t;\n        if (this.cdchange >= 1) {\n            this.gcd = this.cooldown <= 2;\n        }\n        if (this.cooldown != Math.ceil((this.lasttickcooldown - 1) * 0.6)) {\n            var tickcd = Math.floor(this.cooldown / 0.6);\n            //detect 2nd tick in same second\n            if (this.cooldown != 0 && this.cdchange == 0 && Math.ceil(tickcd * 0.6) == Math.ceil((tickcd - 1) * 0.6)) {\n                tickcd--;\n            }\n            this.tickcooldown = tickcd;\n        }\n        else {\n            this.tickcooldown--;\n        }\n        if (this.cooldown != 0) {\n            this.donetime = now + this.cooldown * 1000;\n        }\n        this.hadcd = this.donetime - now > -60 * 1000;\n        this.cdfraction = -1;\n        this.debug = null;\n        if (!this.ability && this.nextdetecttry < now) {\n            this.ability = this.getAbility(data, x, y);\n            this.nextdetecttry = now + 1000 * 20 * (1 + Math.random()); //5-10 sec delay to spread load\n        }\n        if (this.ability) {\n            this.readClock(data, x, y);\n            if (!this.hotkey && this.available) {\n                this.readhotkey(data, x, y);\n            }\n        }\n        //if (this.ability && this.ability.id == \"immortality\") { console.log(this.tickcooldown, this.cooldown, this.cdchange); }\n    }\n    confirmCdArea(buffer, x, y) {\n        var icon = this.ability.icon;\n        for (var dy = 1; dy < 10; dy++) {\n            for (var dx = 24; dx < 30; dx++) {\n                var i1 = (x + dx) * 4 + (y + dy) * 4 * buffer.width;\n                var i2 = dx * 4 + dy * 4 * icon.width;\n                //calculate portion of icon color vs pure white per channel\n                var gradr = (255 - buffer.data[i1]) / (255 - icon.data[i2]);\n                var gradg = (255 - buffer.data[i1 + 1]) / (255 - icon.data[i2 + 1]);\n                var gradb = (255 - buffer.data[i1 + 2]) / (255 - icon.data[i2 + 2]);\n                //if it's a pure mix of white and the icon, all channels will have the same portion of white\n                var d = Math.max(gradr, gradg, gradb) - Math.min(gradr, gradg, gradb);\n                if (d > 0.25) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    readClock(buf, abilx, abily) {\n        var alpha = 0.20;\n        var size = 30;\n        var template = this.ability.icon;\n        var dirs = [\n            { n: size / 2, ox: size / 2, oy: 0, sx: 1, sy: 0 },\n            { n: size, ox: size - 1, oy: 1, sx: 0, sy: 1 },\n            { n: size, ox: size - 1, oy: size - 1, sx: -1, sy: 0 },\n            { n: size, ox: 0, oy: size - 1, sx: 0, sy: -1 },\n            { n: size / 2, ox: 0, oy: 0, sx: 1, sy: 0 }\n        ];\n        var pixels = 0;\n        var nbright = 0;\n        var nmatch = 0;\n        var lastbright = 0;\n        var streak = 10;\n        var lumpixels = 0;\n        var lummatch = 0;\n        var nwhite = 0;\n        if (AbilityState.overlayState) {\n            this.debug = new ImageData(30, 30);\n        }\n        for (var dir of dirs) {\n            for (var a = 0; a < dir.n; a++) {\n                var x = dir.ox + a * dir.sx;\n                var y = dir.oy + a * dir.sy;\n                var i1 = (abilx + x) * 4 + (abily + y) * buf.width * 4;\n                var i2 = x * 4 + y * template.width * 4;\n                var lum = template.data[i2] + template.data[i2 + 1] + template.data[i2 + 2];\n                var imglum = buf.data[i1] + buf.data[i1 + 1] + buf.data[i1 + 2];\n                var d1 = Math.abs(buf.data[i1] - template.data[i2]) + Math.abs(buf.data[i1 + 1] - template.data[i2 + 1]) + Math.abs(buf.data[i1 + 2] - template.data[i2 + 2]);\n                var d2 = Math.abs(buf.data[i1] - template.data[i2] * alpha) + Math.abs(buf.data[i1 + 1] - template.data[i2 + 1] * alpha) + Math.abs(buf.data[i1 + 2] - template.data[i2 + 2] * alpha);\n                var match = d1 < 5 || d2 < 5;\n                if (match) {\n                    if (d1 < d2) {\n                        if (d2 >= 5) {\n                            streak++;\n                            nbright++;\n                        }\n                        if (streak > 5) {\n                            lastbright = pixels;\n                        }\n                    }\n                    else {\n                        streak = 0;\n                    }\n                    nmatch++;\n                }\n                if (lum > 30) {\n                    if (match) {\n                        lummatch++;\n                    }\n                    lumpixels++;\n                }\n                if (imglum > 70 * 3) {\n                    nwhite++;\n                }\n                //this.debug.setPixel(x, y, [d1, d2, 0, 255]);\n                if (AbilityState.overlayState) {\n                    this.debug.setPixel(x, y, (d1 < 5 || d2 < 5 ? (d1 < d2 ? [255, 255, 255, 255] : [128, 128, 128, 255]) : [255, 0, 0, 255]));\n                }\n                pixels++;\n            }\n        }\n        lastbright = Math.max(lastbright, nbright);\n        this.cdfraction = -1;\n        outer: for (var dir of dirs) {\n            if (lastbright > dir.n) {\n                lastbright -= dir.n;\n            }\n            else {\n                var x = dir.ox + dir.sx * lastbright - size / 2;\n                var y = dir.oy + dir.sy * lastbright - size / 2;\n                if (AbilityState.overlayState) {\n                    this.debug.setPixel(x + size / 2, y + size / 2, [0, 255, 255, 255]);\n                }\n                var angle = Math.atan2(y, x);\n                this.cdfraction = (1.25 + angle / Math.PI / 2) % 1;\n                break outer;\n            }\n        }\n        var avail = false;\n        if (lummatch / lumpixels > 0.5) {\n            if (this.cooldown == 2 && this.cdchange != 0) {\n                avail = true;\n            }\n            else if (this.cdfraction > 0.2) {\n                avail = true;\n            }\n            else if (this.gcd && this.cooldown > 2) {\n                avail = true;\n            }\n            else if (!this.gcd && this.cooldown > this.ability.cooldown * 0.6) {\n                avail = true;\n            }\n        }\n        if (avail) {\n            this.available = true;\n        }\n        else if (nwhite / pixels < 0.7) {\n            this.available = false;\n        } //keep old value if the icon is flashed white\n    }\n    readhotkey(buf, abilx, abily) {\n        var col = [255, 255, 255];\n        var line1 = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](buf, hotkeyfont, col, abilx + 2, abily + 26, true, false);\n        if (line1.text) {\n            var line2 = _alt1_ocr__WEBPACK_IMPORTED_MODULE_1__[\"readLine\"](buf, hotkeyfont, col, abilx + 2, abily + 15, true, false);\n            if (line2.text) {\n                this.hotkey = line2.text + \" \" + line1.text;\n            }\n            else {\n                this.hotkey = line1.text;\n            }\n        }\n    }\n    overlayState(x, y) {\n        if (this.available) {\n            var angle = (0.75 + this.cdfraction) * Math.PI * 2;\n            alt1.overLayLine(_alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 0, 0), 1, x + 15, y + 15, x + 15 + Math.round(Math.cos(angle) * 15), y + 15 + Math.round(Math.sin(angle) * 15), 600);\n        }\n        if (!this.available) {\n            alt1.overLayRect((this.ability ? _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 0, 0) : _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](1, 1, 1)), x - 1, y - 1, 32, 32, 600, 1);\n        }\n        alt1.overLayText(this.tickcooldown + \"\", _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"mixColor\"](255, 255, 0), 7, x, y, 600);\n        //alt1.overLayText(this.matchpercent.toFixed(2), a1lib.mixColor(255, 255, 0), 7, x, y, 600);\n        //alt1.overLayText(this.cdfraction.toFixed(2), a1lib.mixColor(255, 255, 0), 7, x, y + 15, 600);\n        //if (this.cooldown != 0 && this.gcd) { alt1.overLayText(\"gcd\", a1lib.mixColor(255, 255, 0), 8, x, y, 600); }\n        //alt1.overLayText(this.hotkey || \"?\", a1lib.mixColor(255, 255, 255), 11, x + 12, y + 12, 600);\n        //if (this.debug) { alt1.overLayImage(x, y, a1lib.encodeImageString(this.debug), this.debug.width, 600); }\n    }\n    getAbility(buf, abilx, abily) {\n        var a = 0.20;\n        var best = null;\n        var bestscore = 30 * 30 * 10;\n        for (var abil of this.reader.abilityimgs) {\n            var icon = abil.icon;\n            var score = 0;\n            for (var x = 0; x < 30; x++) {\n                for (var y = 0; y < 30; y++) {\n                    var i1 = (x + abilx) * 4 + (y + abily) * 4 * buf.width;\n                    var i2 = x * 4 + y * 4 * icon.width;\n                    var d1 = Math.abs(buf.data[i1] - icon.data[i2]) + Math.abs(buf.data[i1 + 1] - icon.data[i2 + 1]) + Math.abs(buf.data[i1 + 2] - icon.data[i2 + 2]);\n                    var d2 = Math.abs(buf.data[i1] - icon.data[i2] * a) + Math.abs(buf.data[i1 + 1] - icon.data[i2 + 1] * a) + Math.abs(buf.data[i1 + 2] - icon.data[i2 + 2] * a);\n                    var d = Math.min(d1, d2, 20);\n                    score += d;\n                }\n            }\n            if (score < bestscore) {\n                bestscore = score;\n                best = abil;\n            }\n        }\n        return best;\n    }\n}\nAbilityState.iconwidth = 30 + 1; //the cooldown text overlays the box by one pixel\nAbilityState.iconheight = 30 + 1; //also need one extra px here to read the hotkey\nAbilityState.overlayState = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ability/index.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/alt1api.ts":
/*!*********************************************!*\
  !*** ../node_modules/@alt1/base/alt1api.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYmFzZS9hbHQxYXBpLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/alt1api.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/declarations.ts":
/*!**************************************************!*\
  !*** ../node_modules/@alt1/base/declarations.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYmFzZS9kZWNsYXJhdGlvbnMudHMuanMiLCJzb3VyY2VzQ29udGVudCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/declarations.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/imagedata-extensions.ts":
/*!**********************************************************!*\
  !*** ../node_modules/@alt1/base/imagedata-extensions.ts ***!
  \**********************************************************/
/*! exports provided: ImageData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageData\", function() { return ImageData; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _nodeimports__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodeimports */ \"../node_modules/@alt1/base/nodeimports.ts\");\n\n\n//export this so node.js can also use it\nvar ImageData;\n// //TODO revamp this madness a bit?\n// (function () {\n// \tvar globalvar = (typeof self != \"undefined\" ? self : (typeof (global as any) != \"undefined\" ? (global as any) : null)) as any;\n// \t//use the node-canvas version when on node\n// \tif (typeof globalvar.ImageData == \"undefined\") {\n// \t\tlet nodecnv = requireNodeCanvas();\n// \t\tglobalvar.ImageData = nodecnv.ImageData;\n// \t}\n// \tvar fill = typeof globalvar.ImageData == \"undefined\";\n// \t//should never be reach anymore\n// \tvar constr = function (this: any) {\n// \t\tvar i = 0;\n// \t\tvar data = (arguments[i] instanceof Uint8ClampedArray ? arguments[i++] : null);\n// \t\tvar width = arguments[i++];\n// \t\tvar height = arguments[i++];\n// \t\tif (fill) {\n// \t\t\tif (!data) { data = new Uint8ClampedArray(width * height * 4); }\n// \t\t\tthis.width = width;\n// \t\t\tthis.height = height;\n// \t\t\tthis.data = data;\n// \t\t}\n// \t\telse if (oldconstr) {\n// \t\t\treturn (data ? new oldconstr(data, width, height) : new oldconstr(width, height));\n// \t\t} else {\n// \t\t\tvar canvas = document.createElement('canvas');\n// \t\t\tcanvas.width = width;\n// \t\t\tcanvas.height = height;\n// \t\t\tvar ctx = canvas.getContext(\"2d\")!;\n// \t\t\tvar imageData = ctx.createImageData(width, height);\n// \t\t\tif (data) { imageData.data.set(data); }\n// \t\t\treturn imageData;\n// \t\t}\n// \t}\n// \tvar oldconstr = globalvar.ImageData;\n// \tif (typeof document != \"undefined\") {\n// \t\ttry {\n// \t\t\tnew oldconstr(1, 1);\n// \t\t} catch (e) {\n// \t\t\t//direct constructor call not allowed in ie\n// \t\t\toldconstr = null;\n// \t\t}\n// \t}\n// \tif (!fill) { constr.prototype = globalvar.ImageData.prototype; }\n// \tglobalvar.ImageData = constr;\n// \tImageData = constr as any;\n// })();\n(function () {\n    var globalvar = (typeof self != \"undefined\" ? self : (typeof global != \"undefined\" ? global : null));\n    var filltype = typeof globalvar.ImageData == \"undefined\" || typeof globalvar.document == \"undefined\";\n    var fillconstr = filltype;\n    if (!filltype) {\n        var oldconstr = globalvar.ImageData;\n        try {\n            let data = new Uint8ClampedArray(4);\n            data[0] = 1;\n            let a = new globalvar.ImageData(data, 1, 1);\n            fillconstr = a.data[0] != 1;\n        }\n        catch (e) {\n            fillconstr = true;\n        }\n    }\n    if (fillconstr) {\n        var constr = function () {\n            var i = 0;\n            var data = (arguments[i] instanceof Uint8ClampedArray ? arguments[i++] : null);\n            var width = arguments[i++];\n            var height = arguments[i++];\n            if (filltype) {\n                if (!data) {\n                    data = new Uint8ClampedArray(width * height * 4);\n                }\n                this.width = width;\n                this.height = height;\n                this.data = data;\n            }\n            else if (fillconstr) {\n                //WARNING This branch of code does not use the same pixel data backing store\n                //(problem with wasm, however all wasm browser have a native constructor (unless asm.js is used))\n                var canvas = document.createElement('canvas');\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                var imageData = ctx.createImageData(width, height);\n                if (data) {\n                    imageData.data.set(data);\n                }\n                return imageData;\n            }\n            // else {\n            // \t//oh no...\n            // \t//we need this monstrocity in order to call the native constructor with variable number of args\n            // \t//when es5 transpile is enable (that strips the spread operator)\n            // \treturn new (Function.prototype.bind.apply(oldconstr, [null,...arguments]));\n            // }\n        };\n        if (!filltype) {\n            constr.prototype = globalvar.ImageData.prototype;\n        }\n        globalvar.ImageData = constr;\n        ImageData = constr;\n    }\n    else {\n        ImageData = globalvar.ImageData;\n    }\n})();\n//Recast into a drawable imagedata class on all platforms, into a normal browser ImageData on browsers or a node-canvas imagedata on nodejs\nImageData.prototype.toDrawableData = function () {\n    if (typeof document == \"undefined\") {\n        let nodecnv = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_1__[\"requireNodeCanvas\"])();\n        return new nodecnv.ImageData(this.data, this.width, this.height);\n    }\n    else {\n        return this;\n    }\n};\nImageData.prototype.putImageData = function (buf, cx, cy) {\n    for (var dx = 0; dx < buf.width; dx++) {\n        for (var dy = 0; dy < buf.height; dy++) {\n            var i1 = (dx + cx) * 4 + (dy + cy) * 4 * this.width;\n            var i2 = dx * 4 + dy * 4 * buf.width;\n            this.data[i1] = buf.data[i2];\n            this.data[i1 + 1] = buf.data[i2 + 1];\n            this.data[i1 + 2] = buf.data[i2 + 2];\n            this.data[i1 + 3] = buf.data[i2 + 3];\n        }\n    }\n};\nImageData.prototype.pixelOffset = function (x, y) {\n    return x * 4 + y * this.width * 4;\n};\n//creates a hash of a portion of the buffer used to check for changes\nImageData.prototype.getPixelHash = function (rect) {\n    if (!rect) {\n        rect = new _index__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](0, 0, this.width, this.height);\n    }\n    var hash = 0;\n    for (var x = rect.x; x < rect.x + rect.width; x++) {\n        for (var y = rect.y; y < rect.y + rect.height; y++) {\n            var i = x * 4 + y * 4 * this.width;\n            hash = (((hash << 5) - hash) + this.data[i]) | 0;\n            hash = (((hash << 5) - hash) + this.data[i + 1]) | 0;\n            hash = (((hash << 5) - hash) + this.data[i + 2]) | 0;\n            hash = (((hash << 5) - hash) + this.data[i + 3]) | 0;\n        }\n    }\n    return hash;\n};\nImageData.prototype.clone = function (rect) {\n    return this.toImage(rect).getContext(\"2d\").getImageData(0, 0, rect.width, rect.height);\n};\nImageData.prototype.show = function (x = 5, y = 5, zoom = 1) {\n    if (typeof document == \"undefined\") {\n        console.error(\"need a document to show an imagedata object\");\n        return;\n    }\n    var imgs = document.getElementsByClassName(\"debugimage\");\n    while (imgs.length > ImageData.prototype.show.maxImages) {\n        imgs[0].remove();\n    }\n    var el = this.toImage();\n    el.classList.add(\"debugimage\");\n    el.style.position = \"absolute\";\n    el.style.zIndex = \"1000\";\n    el.style.left = x / zoom + \"px\";\n    el.style.top = y / zoom + \"px\";\n    el.style.background = \"purple\";\n    el.style.cursor = \"pointer\";\n    el.style.imageRendering = \"pixelated\";\n    el.style.outline = \"1px solid #0f0\";\n    el.style.width = (this.width == 1 ? 100 : this.width) + \"px\";\n    el.style.height = (this.height == 1 ? 100 : this.height) + \"px\";\n    el.style.zoom = \"\" + zoom;\n    el.onclick = function () { el.remove(); };\n    document.body.appendChild(el);\n    return el;\n};\nImageData.prototype.show.maxImages = 10;\nImageData.prototype.toImage = function (rect) {\n    if (!rect) {\n        rect = new _index__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](0, 0, this.width, this.height);\n    }\n    if (typeof document != \"undefined\") {\n        var el = document.createElement(\"canvas\");\n        el.width = rect.width;\n        el.height = rect.height;\n    }\n    else {\n        var nodecnv = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_1__[\"requireNodeCanvas\"])();\n        var el = nodecnv.createCanvas(rect.width, rect.height);\n    }\n    var ctx = el.getContext(\"2d\");\n    ctx.putImageData(this, -rect.x, -rect.y);\n    return el;\n};\nImageData.prototype.getPixel = function (x, y) {\n    var i = x * 4 + y * 4 * this.width;\n    return [this.data[i], this.data[i + 1], this.data[i + 2], this.data[i + 3]];\n};\nImageData.prototype.getPixelInt = function (x, y) {\n    var i = x * 4 + y * 4 * this.width;\n    return (this.data[i + 3] << 24) + (this.data[i + 0] << 16) + (this.data[i + 1] << 8) + (this.data[i + 2] << 0);\n};\nImageData.prototype.getColorDifference = function (x, y, r, g, b, a = 255) {\n    var i = x * 4 + y * 4 * this.width;\n    return Math.abs(this.data[i] - r) + Math.abs(this.data[i + 1] - g) + Math.abs(this.data[i + 2] - b) * a / 255;\n};\nImageData.prototype.setPixel = function (x, y, ...color) {\n    var r, g, b, a;\n    var [r, g, b, a] = (Array.isArray(color[0]) ? color[0] : color);\n    var i = x * 4 + y * 4 * this.width;\n    this.data[i] = r;\n    this.data[i + 1] = g;\n    this.data[i + 2] = b;\n    this.data[i + 3] = a == undefined ? 255 : a;\n};\nImageData.prototype.setPixelInt = function (x, y, color) {\n    var i = x * 4 + y * 4 * this.width;\n    this.data[i] = (color >> 24) & 0xff;\n    this.data[i + 1] = (color >> 16) & 0xff;\n    this.data[i + 2] = (color >> 8) & 0xff;\n    this.data[i + 3] = (color >> 0) & 0xff;\n};\nImageData.prototype.toFileBytes = function (format, quality) {\n    if (typeof HTMLCanvasElement != \"undefined\") {\n        return new Promise(d => this.toImage().toBlob(b => {\n            var r = new FileReader();\n            r.readAsArrayBuffer(b);\n            r.onload = () => d(r.result);\n        }, format, quality));\n    }\n    else {\n        var sharp = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_1__[\"requireSharp\"])();\n        return new Promise(d => {\n            var img = sharp(Buffer.from(this.data.buffer), { raw: { width: this.width, height: this.height, channels: 4 } });\n            if (format == \"image/png\") {\n                img.png();\n            }\n            else if (format == \"image/webp\") {\n                var opts = { quality: 80 };\n                if (typeof quality == \"number\") {\n                    opts.quality = quality * 100;\n                }\n                img.webp(opts);\n            }\n            else {\n                throw new Error(\"unknown image format: \" + format);\n            }\n            img.toBuffer({ resolveWithObject: false }).then(r => d(r.buffer));\n        });\n    }\n};\n//use the implementation using the sharp package in order to support webp\n/*\nImageData.prototype.toFileBytes = function (this: ImageData, format: \"image/png\" | \"image/webp\", quality?: any) {\n    return new Promise<ArrayBuffer>((done, error) => {\n        var cnv = this.toImage();\n        if (typeof cnv.toBlob != \"undefined\") {\n            cnv.toBlob(b => {\n                var r = new FileReader();\n                r.readAsArrayBuffer(b!);\n                r.onload = () => done(r.result as ArrayBuffer);\n                r.onerror = error;\n            }, format, quality);\n        } else {\n            var nodecnv = requireNodeCanvas();\n            var ncnv = cnv as any as InstanceType<typeof nodecnv.Canvas>;\n            //TODO webp not supported right now\n            if (format != \"image/png\") { throw new Error(\"only png compression available on node right now\"); }\n            let stream = ncnv.createPNGStream();\n            var chunks: Buffer[] = [];\n            stream.once(\"error\", error);\n            stream.once(\"end\", () => done(Buffer.concat(chunks)))\n            stream.on(\"data\", c => chunks.push(c as Buffer));\n        }\n    });\n}\n*/\nImageData.prototype.toPngBase64 = function () {\n    if (typeof HTMLCanvasElement != \"undefined\") {\n        var str = this.toImage().toDataURL(\"image/png\");\n        return str.slice(str.indexOf(\",\") + 1);\n    }\n    else {\n        throw new Error(\"synchronous image conversion no supported in nodejs, try using ImageData.prototype.toFileBytes\");\n    }\n};\nImageData.prototype.pixelCompare = function (buf, x = 0, y = 0, max) {\n    return _index__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].simpleCompare(this, buf, x, y, max);\n};\nImageData.prototype.copyTo = function (target, sourcex, sourcey, width, height, targetx, targety) {\n    //convince v8 that these are 31bit uints\n    const targetwidth = width | 0;\n    const thiswidth = this.width | 0;\n    const fastwidth = Math.floor(width / 4) * 4;\n    const thisdata = new Int32Array(this.data.buffer, this.data.byteOffset, this.data.byteLength / 4);\n    const targetdata = new Int32Array(target.data.buffer, target.data.byteOffset, target.data.byteLength / 4);\n    for (let cy = 0; cy < height; cy++) {\n        let cx = 0;\n        let it = (cx + targetx) + (cy + targety) * targetwidth;\n        let is = (cx + sourcex) + (cy + sourcey) * thiswidth;\n        //copy 4 pixels per iter (xmm)\n        for (; cx < fastwidth; cx += 4) {\n            targetdata[it] = thisdata[is];\n            targetdata[it + 1] = thisdata[is + 1];\n            targetdata[it + 2] = thisdata[is + 2];\n            targetdata[it + 3] = thisdata[is + 3];\n            it += 4;\n            is += 4;\n        }\n        //copy remainder per pixel\n        for (; cx < targetwidth; cx++) {\n            targetdata[it] = thisdata[is];\n            it += 1;\n            is += 1;\n        }\n    }\n};\nif (typeof HTMLImageElement != \"undefined\") {\n    HTMLImageElement.prototype.toBuffer = function (x = 0, y = 0, w = this.width, h = this.height) {\n        var cnv = document.createElement(\"canvas\");\n        cnv.width = w;\n        cnv.height = h;\n        var ctx = cnv.getContext(\"2d\");\n        ctx.drawImage(this, -x, -y);\n        return ctx.getImageData(0, 0, w, h);\n    };\n    HTMLImageElement.prototype.toCanvas = function (x = 0, y = 0, w = this.width, h = this.height) {\n        var cnv = document.createElement(\"canvas\");\n        cnv.width = w;\n        cnv.height = h;\n        var ctx = cnv.getContext(\"2d\");\n        ctx.drawImage(this, -x, -y);\n        return cnv;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/imagedata-extensions.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/imagedetect.ts":
/*!*************************************************!*\
  !*** ../node_modules/@alt1/base/imagedetect.ts ***!
  \*************************************************/
/*! exports provided: imageDataFromUrl, imageDataFromNodeBuffer, imageDataFromBase64, isPngBuffer, clearPngColorspace, findSubimage, findSubbuffer, simpleCompare, coldif, asyncMap, webpackImages, ImageDataSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageDataFromUrl\", function() { return imageDataFromUrl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageDataFromNodeBuffer\", function() { return imageDataFromNodeBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageDataFromBase64\", function() { return imageDataFromBase64; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPngBuffer\", function() { return isPngBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearPngColorspace\", function() { return clearPngColorspace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSubimage\", function() { return findSubimage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSubbuffer\", function() { return findSubbuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simpleCompare\", function() { return simpleCompare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coldif\", function() { return coldif; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asyncMap\", function() { return asyncMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"webpackImages\", function() { return webpackImages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageDataSet\", function() { return ImageDataSet; });\n/* harmony import */ var _imgref__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imgref */ \"../node_modules/@alt1/base/imgref.ts\");\n/* harmony import */ var _wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapper */ \"../node_modules/@alt1/base/wrapper.ts\");\n/* harmony import */ var _nodeimports__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodeimports */ \"../node_modules/@alt1/base/nodeimports.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! . */ \"../node_modules/@alt1/base/index.ts\");\n\n\n\n\n/**\n* Downloads an image and returns the ImageData\n* Make sure the png image does not have a sRGB chunk or the resulting pixels will differ for different users!!!\n* @param url http(s) or data url to the image\n*/\nasync function imageDataFromUrl(url) {\n    if (typeof Image != \"undefined\") {\n        var img = new Image();\n        img.crossOrigin = \"crossorigin\";\n        return await new Promise((done, fail) => {\n            img.onload = function () { done(img.toBuffer()); };\n            img.onerror = fail;\n            img.src = url;\n        });\n    }\n    else {\n        var hdr = \"data:image/png;base64,\";\n        if (url.startsWith(hdr)) {\n            return imageDataFromBase64(url.slice(hdr.length));\n        }\n        var nodefetch = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_2__[\"requireNodeFetch\"])();\n        var res = await nodefetch(url).then(r => r.arrayBuffer());\n        return imageDataFromNodeBuffer(new Uint8Array(res));\n    }\n}\n/**\n * Only use in modules that you know for sure that browsers will never call this\n */\nfunction imageDataFromNodeBuffer(buffer) {\n    return new Promise((done, error) => {\n        clearPngColorspace(buffer);\n        var nodecnv = Object(_nodeimports__WEBPACK_IMPORTED_MODULE_2__[\"requireNodeCanvas\"])();\n        let img = new nodecnv.Image();\n        img.onerror = error;\n        img.onload = () => {\n            var cnv = nodecnv.createCanvas(img.naturalWidth, img.naturalHeight);\n            var ctx = cnv.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            var data = ctx.getImageData(0, 0, img.naturalWidth, img.naturalHeight);\n            //use our own class\n            done(new ImageData(data.data, data.width, data.height));\n        };\n        img.src = Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    });\n}\n/**\n* Loads an ImageData object from a base64 encoded png image\n* Make sure the png image does not have a sRGB chunk or the resulting pixels will differ for different users!!!\n* @param data a base64 encoded png image\n*/\nasync function imageDataFromBase64(data) {\n    if (typeof Image != \"undefined\") {\n        return imageDataFromUrl(\"data:image/png;base64,\" + data);\n    }\n    else {\n        var raw = Buffer.from(data, \"base64\");\n        var buffer = new Uint8Array(raw.buffer, raw.byteOffset, raw.byteLength);\n        return imageDataFromNodeBuffer(buffer);\n    }\n}\n/**\n* Checks if a given byte array is a png file (by checking for ?PNG as first 4 bytes)\n* @param bytes Raw bytes of the png file\n*/\nfunction isPngBuffer(bytes) {\n    return bytes[0] == 137 && bytes[1] == 80 && bytes[2] == 78 && bytes[3] == 71;\n}\n/**\n* Resets the colorspace data in the png file.\n* This makes sure the browser renders the exact colors in the file instead of filtering it in order to obtain the best real life representation of\n* what it looked like on the authors screen. (this feature is often broken and not supported)\n* For example a round trip printscreen -> open in browser results in different colors than the original\n* @param data Raw bytes of the png file\n*/\nfunction clearPngColorspace(data) {\n    if (!isPngBuffer(data)) {\n        throw new Error(\"non-png image received\");\n    }\n    var i = 8;\n    while (i < data.length) {\n        var length = data[i++] * 0x1000000 + data[i++] * 0x10000 + data[i++] * 0x100 + data[i++];\n        var ancillary = !!((data[i] >> 5) & 1);\n        var chunkname = String.fromCharCode(data[i], data[i + 1], data[i + 2], data[i + 3]);\n        var chunkid = chunkname.toLowerCase();\n        if (chunkid != \"trns\" && ancillary) {\n            data[i + 0] = \"n\".charCodeAt(0);\n            data[i + 1] = \"o\".charCodeAt(0);\n            data[i + 2] = \"P\".charCodeAt(0);\n            data[i + 3] = \"E\".charCodeAt(0);\n            //calculate new chunk checksum\n            //http://www.libpng.org/pub/png/spec/1.2/PNG-CRCAppendix.html\n            var end = i + 4 + length;\n            var crc = 0xffffffff;\n            //should be fast enough like this\n            var bitcrc = function (bit) {\n                for (var k = 0; k < 8; k++) {\n                    if (bit & 1) {\n                        bit = 0xedb88320 ^ (bit >>> 1);\n                    }\n                    else {\n                        bit = bit >>> 1;\n                    }\n                }\n                return bit;\n            };\n            for (var a = i; a < end; a++) {\n                if (a >= i + 4) {\n                    data[a] = 0;\n                }\n                var bit = data[a];\n                crc = bitcrc((crc ^ bit) & 0xff) ^ (crc >>> 8);\n            }\n            crc = crc ^ 0xffffffff;\n            //new chunk checksum\n            data[i + 4 + length + 0] = (crc >> 24) & 0xff;\n            data[i + 4 + length + 1] = (crc >> 16) & 0xff;\n            data[i + 4 + length + 2] = (crc >> 8) & 0xff;\n            data[i + 4 + length + 3] = (crc >> 0) & 0xff;\n        }\n        if (chunkname == \"IEND\") {\n            break;\n        }\n        i += 4; //type\n        i += length; //data\n        i += 4; //crc\n    }\n}\n/**\n* finds the given needle ImageBuffer in the given haystack ImgRef this function uses the best optimized available\n* code depending on the type of the haystack. It will use fast c# searching if the haystack is an ImgRefBind, js searching\n* is used otherwise.\n* the checklist argument is no longer used and should ignored or null/undefined\n* The optional sx,sy,sw,sh arguments indicate a bounding rectangle in which to search the needle. The rectangle should be bigger than the needle\n* @returns An array of points where the needle is found. The array is empty if none are found\n*/\nfunction findSubimage(haystackImgref, needleBuffer, sx = 0, sy = 0, sw = haystackImgref.width, sh = haystackImgref.height) {\n    if (!haystackImgref) {\n        throw new TypeError();\n    }\n    if (!needleBuffer) {\n        throw new TypeError();\n    }\n    var max = 30;\n    //check if we can do this in alt1\n    if (haystackImgref instanceof _imgref__WEBPACK_IMPORTED_MODULE_0__[\"ImgRefBind\"] && _wrapper__WEBPACK_IMPORTED_MODULE_1__[\"hasAlt1\"] && alt1.bindFindSubImg) {\n        var needlestr = _wrapper__WEBPACK_IMPORTED_MODULE_1__[\"encodeImageString\"](needleBuffer);\n        var r = alt1.bindFindSubImg(haystackImgref.handle, needlestr, needleBuffer.width, sx, sy, sw, sh);\n        if (!r) {\n            throw new _wrapper__WEBPACK_IMPORTED_MODULE_1__[\"Alt1Error\"]();\n        }\n        return JSON.parse(r);\n    }\n    return findSubbuffer(haystackImgref.read(), needleBuffer, sx, sy, sw, sh);\n}\n/**\n* Uses js to find the given needle ImageBuffer in the given haystack ImageBuffer. It is better to use the alt1.bind- functions in\n* combination with a1nxt.findsubimg.\n* the optional sx,sy,sw,sh arguments indicate a bounding rectangle in which to search.\n* @returns An array of points where the needle is found. The array is empty if none are found\n*/\nfunction findSubbuffer(haystack, needle, sx = 0, sy = 0, sw = haystack.width, sh = haystack.height) {\n    var r = [];\n    var maxdif = 30;\n    var maxresults = 50;\n    var needlestride = needle.width * 4;\n    var heystackstride = haystack.width * 4;\n    //built list of non trans pixel to check\n    var checkList = [];\n    for (var x = 0; x < needle.width; x++) {\n        for (var y = 0; y < needle.height; y++) {\n            var i = x * 4 + y * needlestride;\n            if (needle.data[i + 3] == 255) {\n                checkList.push({ x: x, y: y });\n            }\n            if (checkList.length == 10) {\n                break;\n            }\n        }\n        if (checkList.length == 10) {\n            break;\n        }\n    }\n    var cw = (sx + sw) - needle.width;\n    var ch = (sy + sh) - needle.height;\n    var checklength = checkList.length;\n    for (var x = sx; x <= cw; x++) {\n        outer: for (var y = sy; y <= ch; y++) {\n            for (var a = 0; a < checklength; a++) {\n                var i1 = (x + checkList[a].x) * 4 + (y + checkList[a].y) * heystackstride;\n                var i2 = checkList[a].x * 4 + checkList[a].y * needlestride;\n                var d = 0;\n                d = d + Math.abs(haystack.data[i1 + 0] - needle.data[i2 + 0]) | 0;\n                d = d + Math.abs(haystack.data[i1 + 1] - needle.data[i2 + 1]) | 0;\n                d = d + Math.abs(haystack.data[i1 + 2] - needle.data[i2 + 2]) | 0;\n                d *= 255 / needle.data[i2 + 3];\n                if (d > maxdif) {\n                    continue outer;\n                }\n            }\n            if (simpleCompare(haystack, needle, x, y, maxdif) != Infinity) {\n                r.push({ x, y });\n                if (r.length > maxresults) {\n                    return r;\n                }\n            }\n        }\n    }\n    return r;\n}\n/**\n* Compares two images and returns the average color difference per pixel between them\n* @param max The max color difference at any point in the image before short circuiting the function and returning Infinity. set to -1 to always continue.\n* @returns The average color difference per pixel or Infinity if the difference is more than max at any point in the image\n*/\nfunction simpleCompare(bigbuf, checkbuf, x, y, max = 30) {\n    if (x < 0 || y < 0) {\n        throw new RangeError();\n    }\n    if (x + checkbuf.width > bigbuf.width || y + checkbuf.height > bigbuf.height) {\n        throw new RangeError();\n    }\n    if (max == -1) {\n        max = 255 * 4;\n    }\n    var dif = 0;\n    for (var step = 8; step >= 1; step /= 2) {\n        for (var cx = 0; cx < checkbuf.width; cx += step) {\n            for (var cy = 0; cy < checkbuf.height; cy += step) {\n                var i1 = (x + cx) * 4 + (y + cy) * bigbuf.width * 4;\n                var i2 = cx * 4 + cy * checkbuf.width * 4;\n                var d = 0;\n                d = d + Math.abs(bigbuf.data[i1 + 0] - checkbuf.data[i2 + 0]) | 0;\n                d = d + Math.abs(bigbuf.data[i1 + 1] - checkbuf.data[i2 + 1]) | 0;\n                d = d + Math.abs(bigbuf.data[i1 + 2] - checkbuf.data[i2 + 2]) | 0;\n                d *= checkbuf.data[i2 + 3] / 255;\n                if (step == 1) {\n                    dif += d;\n                }\n                if (d > max) {\n                    return Infinity;\n                }\n            }\n        }\n    }\n    return dif / checkbuf.width / checkbuf.height;\n}\n/**\n* Returns the difference between two colors (scaled to the alpha of the second color)\n*/\nfunction coldif(r1, g1, b1, r2, g2, b2, a2) {\n    return (Math.abs(r1 - r2) + Math.abs(g1 - g2) + Math.abs(b1 - b2)) * a2 / 255; //only applies alpha for 2nd buffer!\n}\n/**\n * Turns map of promises into a map that contains the resolved values after loading.\n * @param input\n */\nfunction asyncMap(input) {\n    var raw = {};\n    var promises = [];\n    for (var a in input) {\n        if (input.hasOwnProperty(a)) {\n            raw[a] = null;\n            promises.push(input[a].then(function (a, i) { raw[a] = i; r[a] = i; }.bind(null, a)));\n        }\n    }\n    var r = {};\n    var promise = Promise.all(promises).then(() => { r.loaded = true; return r; });\n    Object.defineProperty(r, \"loaded\", { enumerable: false, value: false, writable: true });\n    Object.defineProperty(r, \"promise\", { enumerable: false, value: promise });\n    Object.defineProperty(r, \"raw\", { enumerable: false, value: raw });\n    return Object.assign(r, raw);\n}\n/**\n* Same as asyncMap, but casts the properties to ImageData in typescript\n*/\nfunction webpackImages(input) {\n    return asyncMap(input);\n}\nclass ImageDataSet {\n    constructor() {\n        this.buffers = [];\n    }\n    matchBest(img, x, y, max) {\n        let best = null;\n        let bestscore = max;\n        for (let a = 0; a < this.buffers.length; a++) {\n            let score = img.pixelCompare(this.buffers[a], x, y, bestscore);\n            if (isFinite(score) && (bestscore == undefined || score < bestscore)) {\n                bestscore = score;\n                best = a;\n            }\n        }\n        if (best == null) {\n            return null;\n        }\n        return { index: best, score: bestscore };\n    }\n    static fromFilmStrip(baseimg, width) {\n        if ((baseimg.width % width) != 0) {\n            throw new Error(\"slice size does not fit in base img\");\n        }\n        let r = new ImageDataSet();\n        for (let x = 0; x < baseimg.width; x += width) {\n            r.buffers.push(baseimg.clone(new ___WEBPACK_IMPORTED_MODULE_3__[\"Rect\"](x, 0, width, baseimg.height)));\n        }\n        return r;\n    }\n    static fromFilmStripUneven(baseimg, widths) {\n        let r = new ImageDataSet();\n        let x = 0;\n        for (let w of widths) {\n            r.buffers.push(baseimg.clone(new ___WEBPACK_IMPORTED_MODULE_3__[\"Rect\"](x, 0, w, baseimg.height)));\n            x += w;\n            if (x > baseimg.width) {\n                throw new Error(\"sampling filmstrip outside bounds\");\n            }\n        }\n        if (x != baseimg.width) {\n            throw new Error(\"unconsumed pixels left in film strip imagedata\");\n        }\n        return r;\n    }\n    static fromAtlas(baseimg, slices) {\n        let r = new ImageDataSet();\n        for (let slice of slices) {\n            r.buffers.push(baseimg.clone(slice));\n        }\n        return r;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/imagedetect.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/imgref.ts":
/*!********************************************!*\
  !*** ../node_modules/@alt1/base/imgref.ts ***!
  \********************************************/
/*! exports provided: ImgRef, ImgRefCtx, ImgRefBind, ImgRefData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRef\", function() { return ImgRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRefCtx\", function() { return ImgRefCtx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRefBind\", function() { return ImgRefBind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImgRefData\", function() { return ImgRefData; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"../node_modules/@alt1/base/index.ts\");\n\n/**\n * Represents an image that might be in different types of memory\n * This is mostly used to represent images still in Alt1 memory that have\n * not been transfered to js yet. Various a1lib api's use this type and\n * choose the most efficient approach based on the memory type\n */\nclass ImgRef {\n    constructor(x, y, w, h) {\n        this.t = \"none\";\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    read(x = 0, y = 0, w = this.width, h = this.height) {\n        throw new Error(\"This imgref (\" + this.t + \") does not support toData\");\n    }\n    findSubimage(needle, sx = 0, sy = 0, w = this.width, h = this.height) {\n        return _index__WEBPACK_IMPORTED_MODULE_0__[\"ImageDetect\"].findSubimage(this, needle, sx, sy, w, h);\n    }\n    toData(x = this.x, y = this.y, w = this.width, h = this.height) {\n        return this.read(x - this.x, y - this.y, w, h);\n    }\n    ;\n    containsArea(rect) {\n        return this.x <= rect.x && this.y <= rect.y && this.x + this.width >= rect.x + rect.width && this.y + this.height >= rect.y + rect.height;\n    }\n}\n/**\n * Represents an image in js render memory (canvas/image tag)\n */\nclass ImgRefCtx extends ImgRef {\n    constructor(img, x = 0, y = 0) {\n        if (img instanceof CanvasRenderingContext2D) {\n            super(x, y, img.canvas.width, img.canvas.height);\n            this.ctx = img;\n        }\n        else {\n            super(x, y, img.width, img.height);\n            var cnv = (img instanceof HTMLCanvasElement ? img : img.toCanvas());\n            this.ctx = cnv.getContext(\"2d\");\n        }\n        this.t = \"ctx\";\n    }\n    read(x = 0, y = 0, w = this.width, h = this.height) {\n        return this.ctx.getImageData(x, y, w, h);\n    }\n}\n/**\n * Represents in image in Alt1 memory, This type of image can be searched for subimages\n * very efficiently and transfering the full image to js can be avoided this way\n */\nclass ImgRefBind extends ImgRef {\n    constructor(handle, x = 0, y = 0, w = 0, h = 0) {\n        super(x, y, w, h);\n        this.handle = handle;\n        this.t = \"bind\";\n    }\n    read(x = 0, y = 0, w = this.width, h = this.height) {\n        return Object(_index__WEBPACK_IMPORTED_MODULE_0__[\"transferImageData\"])(this.handle, x, y, w, h);\n    }\n}\n/**\n * Represents an image in js memory\n */\nclass ImgRefData extends ImgRef {\n    constructor(buf, x = 0, y = 0) {\n        super(x, y, buf.width, buf.height);\n        this.buf = buf;\n        this.t = \"data\";\n    }\n    read(x = 0, y = 0, w = this.width, h = this.height) {\n        if (x == 0 && y == 0 && w == this.width && h == this.height) {\n            return this.buf;\n        }\n        var r = new ImageData(w, h);\n        for (var b = y; b < y + h; b++) {\n            for (var a = x; a < x + w; a++) {\n                var i1 = (a - x) * 4 + (b - y) * w * 4;\n                var i2 = a * 4 + b * 4 * this.buf.width;\n                r.data[i1] = this.buf.data[i2];\n                r.data[i1 + 1] = this.buf.data[i2 + 1];\n                r.data[i1 + 2] = this.buf.data[i2 + 2];\n                r.data[i1 + 3] = this.buf.data[i2 + 3];\n            }\n        }\n        return r;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2ltZ3JlZi50cz9mOWY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnRUFBaUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsV0FBVztBQUNsQywyQkFBMkIsV0FBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2ltZ3JlZi50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEltYWdlRGV0ZWN0LCB0cmFuc2ZlckltYWdlRGF0YSB9IGZyb20gXCIuL2luZGV4XCI7XG4vKipcbiAqIFJlcHJlc2VudHMgYW4gaW1hZ2UgdGhhdCBtaWdodCBiZSBpbiBkaWZmZXJlbnQgdHlwZXMgb2YgbWVtb3J5XG4gKiBUaGlzIGlzIG1vc3RseSB1c2VkIHRvIHJlcHJlc2VudCBpbWFnZXMgc3RpbGwgaW4gQWx0MSBtZW1vcnkgdGhhdCBoYXZlXG4gKiBub3QgYmVlbiB0cmFuc2ZlcmVkIHRvIGpzIHlldC4gVmFyaW91cyBhMWxpYiBhcGkncyB1c2UgdGhpcyB0eXBlIGFuZFxuICogY2hvb3NlIHRoZSBtb3N0IGVmZmljaWVudCBhcHByb2FjaCBiYXNlZCBvbiB0aGUgbWVtb3J5IHR5cGVcbiAqL1xuZXhwb3J0IGNsYXNzIEltZ1JlZiB7XG4gICAgY29uc3RydWN0b3IoeCwgeSwgdywgaCkge1xuICAgICAgICB0aGlzLnQgPSBcIm5vbmVcIjtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICAgICAgdGhpcy53aWR0aCA9IHc7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaDtcbiAgICB9XG4gICAgcmVhZCh4ID0gMCwgeSA9IDAsIHcgPSB0aGlzLndpZHRoLCBoID0gdGhpcy5oZWlnaHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBpbWdyZWYgKFwiICsgdGhpcy50ICsgXCIpIGRvZXMgbm90IHN1cHBvcnQgdG9EYXRhXCIpO1xuICAgIH1cbiAgICBmaW5kU3ViaW1hZ2UobmVlZGxlLCBzeCA9IDAsIHN5ID0gMCwgdyA9IHRoaXMud2lkdGgsIGggPSB0aGlzLmhlaWdodCkge1xuICAgICAgICByZXR1cm4gSW1hZ2VEZXRlY3QuZmluZFN1YmltYWdlKHRoaXMsIG5lZWRsZSwgc3gsIHN5LCB3LCBoKTtcbiAgICB9XG4gICAgdG9EYXRhKHggPSB0aGlzLngsIHkgPSB0aGlzLnksIHcgPSB0aGlzLndpZHRoLCBoID0gdGhpcy5oZWlnaHQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZCh4IC0gdGhpcy54LCB5IC0gdGhpcy55LCB3LCBoKTtcbiAgICB9XG4gICAgO1xuICAgIGNvbnRhaW5zQXJlYShyZWN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnggPD0gcmVjdC54ICYmIHRoaXMueSA8PSByZWN0LnkgJiYgdGhpcy54ICsgdGhpcy53aWR0aCA+PSByZWN0LnggKyByZWN0LndpZHRoICYmIHRoaXMueSArIHRoaXMuaGVpZ2h0ID49IHJlY3QueSArIHJlY3QuaGVpZ2h0O1xuICAgIH1cbn1cbi8qKlxuICogUmVwcmVzZW50cyBhbiBpbWFnZSBpbiBqcyByZW5kZXIgbWVtb3J5IChjYW52YXMvaW1hZ2UgdGFnKVxuICovXG5leHBvcnQgY2xhc3MgSW1nUmVmQ3R4IGV4dGVuZHMgSW1nUmVmIHtcbiAgICBjb25zdHJ1Y3RvcihpbWcsIHggPSAwLCB5ID0gMCkge1xuICAgICAgICBpZiAoaW1nIGluc3RhbmNlb2YgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKSB7XG4gICAgICAgICAgICBzdXBlcih4LCB5LCBpbWcuY2FudmFzLndpZHRoLCBpbWcuY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgICB0aGlzLmN0eCA9IGltZztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN1cGVyKHgsIHksIGltZy53aWR0aCwgaW1nLmhlaWdodCk7XG4gICAgICAgICAgICB2YXIgY252ID0gKGltZyBpbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50ID8gaW1nIDogaW1nLnRvQ2FudmFzKCkpO1xuICAgICAgICAgICAgdGhpcy5jdHggPSBjbnYuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudCA9IFwiY3R4XCI7XG4gICAgfVxuICAgIHJlYWQoeCA9IDAsIHkgPSAwLCB3ID0gdGhpcy53aWR0aCwgaCA9IHRoaXMuaGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmN0eC5nZXRJbWFnZURhdGEoeCwgeSwgdywgaCk7XG4gICAgfVxufVxuLyoqXG4gKiBSZXByZXNlbnRzIGluIGltYWdlIGluIEFsdDEgbWVtb3J5LCBUaGlzIHR5cGUgb2YgaW1hZ2UgY2FuIGJlIHNlYXJjaGVkIGZvciBzdWJpbWFnZXNcbiAqIHZlcnkgZWZmaWNpZW50bHkgYW5kIHRyYW5zZmVyaW5nIHRoZSBmdWxsIGltYWdlIHRvIGpzIGNhbiBiZSBhdm9pZGVkIHRoaXMgd2F5XG4gKi9cbmV4cG9ydCBjbGFzcyBJbWdSZWZCaW5kIGV4dGVuZHMgSW1nUmVmIHtcbiAgICBjb25zdHJ1Y3RvcihoYW5kbGUsIHggPSAwLCB5ID0gMCwgdyA9IDAsIGggPSAwKSB7XG4gICAgICAgIHN1cGVyKHgsIHksIHcsIGgpO1xuICAgICAgICB0aGlzLmhhbmRsZSA9IGhhbmRsZTtcbiAgICAgICAgdGhpcy50ID0gXCJiaW5kXCI7XG4gICAgfVxuICAgIHJlYWQoeCA9IDAsIHkgPSAwLCB3ID0gdGhpcy53aWR0aCwgaCA9IHRoaXMuaGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiB0cmFuc2ZlckltYWdlRGF0YSh0aGlzLmhhbmRsZSwgeCwgeSwgdywgaCk7XG4gICAgfVxufVxuLyoqXG4gKiBSZXByZXNlbnRzIGFuIGltYWdlIGluIGpzIG1lbW9yeVxuICovXG5leHBvcnQgY2xhc3MgSW1nUmVmRGF0YSBleHRlbmRzIEltZ1JlZiB7XG4gICAgY29uc3RydWN0b3IoYnVmLCB4ID0gMCwgeSA9IDApIHtcbiAgICAgICAgc3VwZXIoeCwgeSwgYnVmLndpZHRoLCBidWYuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5idWYgPSBidWY7XG4gICAgICAgIHRoaXMudCA9IFwiZGF0YVwiO1xuICAgIH1cbiAgICByZWFkKHggPSAwLCB5ID0gMCwgdyA9IHRoaXMud2lkdGgsIGggPSB0aGlzLmhlaWdodCkge1xuICAgICAgICBpZiAoeCA9PSAwICYmIHkgPT0gMCAmJiB3ID09IHRoaXMud2lkdGggJiYgaCA9PSB0aGlzLmhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnVmO1xuICAgICAgICB9XG4gICAgICAgIHZhciByID0gbmV3IEltYWdlRGF0YSh3LCBoKTtcbiAgICAgICAgZm9yICh2YXIgYiA9IHk7IGIgPCB5ICsgaDsgYisrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBhID0geDsgYSA8IHggKyB3OyBhKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgaTEgPSAoYSAtIHgpICogNCArIChiIC0geSkgKiB3ICogNDtcbiAgICAgICAgICAgICAgICB2YXIgaTIgPSBhICogNCArIGIgKiA0ICogdGhpcy5idWYud2lkdGg7XG4gICAgICAgICAgICAgICAgci5kYXRhW2kxXSA9IHRoaXMuYnVmLmRhdGFbaTJdO1xuICAgICAgICAgICAgICAgIHIuZGF0YVtpMSArIDFdID0gdGhpcy5idWYuZGF0YVtpMiArIDFdO1xuICAgICAgICAgICAgICAgIHIuZGF0YVtpMSArIDJdID0gdGhpcy5idWYuZGF0YVtpMiArIDJdO1xuICAgICAgICAgICAgICAgIHIuZGF0YVtpMSArIDNdID0gdGhpcy5idWYuZGF0YVtpMiArIDNdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByO1xuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/imgref.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/index.ts":
/*!*******************************************!*\
  !*** ../node_modules/@alt1/base/index.ts ***!
  \*******************************************/
/*! exports provided: PasteInput, ImageDetect, Rect, ImageData, ImgRef, ImgRefCtx, ImgRefBind, ImgRefData, NoAlt1Error, Alt1Error, newestversion, hasAlt1, skinName, openbrowser, requireAlt1, getdisplaybounds, capture, captureHold, captureHoldScreen, captureHoldFullRs, transferImageData, decodeImageString, encodeImageString, mixColor, unmixColor, identifyApp, hasAlt1Version, getMousePosition, addResizeElement, on, removeListener, once, ImageStreamReader, captureAsync, captureMultiAsync, captureStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _declarations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./declarations */ \"../node_modules/@alt1/base/declarations.ts\");\n/* harmony import */ var _declarations__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_declarations__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _imagedetect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"ImageDetect\", function() { return _imagedetect__WEBPACK_IMPORTED_MODULE_1__; });\n/* harmony import */ var _pasteinput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pasteinput */ \"../node_modules/@alt1/base/pasteinput.ts\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"PasteInput\", function() { return _pasteinput__WEBPACK_IMPORTED_MODULE_2__; });\n/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rect */ \"../node_modules/@alt1/base/rect.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Rect\", function() { return _rect__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _imagedata_extensions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./imagedata-extensions */ \"../node_modules/@alt1/base/imagedata-extensions.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImageData\", function() { return _imagedata_extensions__WEBPACK_IMPORTED_MODULE_4__[\"ImageData\"]; });\n\n/* harmony import */ var _imgref__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./imgref */ \"../node_modules/@alt1/base/imgref.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRef\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRef\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRefCtx\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRefCtx\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRefBind\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRefBind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImgRefData\", function() { return _imgref__WEBPACK_IMPORTED_MODULE_5__[\"ImgRefData\"]; });\n\n/* harmony import */ var _wrapper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./wrapper */ \"../node_modules/@alt1/base/wrapper.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NoAlt1Error\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"NoAlt1Error\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Alt1Error\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"Alt1Error\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"newestversion\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"newestversion\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"hasAlt1\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"skinName\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"skinName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"openbrowser\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"openbrowser\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"requireAlt1\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"requireAlt1\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getdisplaybounds\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"getdisplaybounds\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"capture\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"capture\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureHold\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureHold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureHoldScreen\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureHoldScreen\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureHoldFullRs\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureHoldFullRs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"transferImageData\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"transferImageData\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"decodeImageString\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"decodeImageString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"encodeImageString\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"encodeImageString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mixColor\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"mixColor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unmixColor\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"unmixColor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"identifyApp\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"identifyApp\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1Version\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"hasAlt1Version\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getMousePosition\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"getMousePosition\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addResizeElement\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"addResizeElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"on\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"on\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeListener\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"removeListener\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"once\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImageStreamReader\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"ImageStreamReader\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureAsync\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureAsync\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureMultiAsync\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureMultiAsync\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"captureStream\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_6__[\"captureStream\"]; });\n\n\n\n\n\n\n\n\n\n// // syntax not yet supported in webpack\n// // this should improve tree shaking\n// import \"./declarations\";\n// export * as ImageDetect from \"./imagedetect\";\n// export * as PasteInput from \"./pasteinput\";\n// export { default as Rect, RectLike, PointLike } from \"./rect\";\n// export { ImageData } from \"./imagedata-extensions\";\n// export * from \"./imgref\";\n// export * from \"./wrapper\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2luZGV4LnRzPzU5Y2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBd0I7QUFDcUI7QUFDRjtBQUNqQjtBQUN5QjtBQUNDO0FBQzNCO0FBQ0M7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUNBQXVDO0FBQ2xELFdBQVcsWUFBWTtBQUN2QjtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9kZWNsYXJhdGlvbnNcIjtcbmltcG9ydCAqIGFzIEltYWdlRGV0ZWN0IGZyb20gXCIuL2ltYWdlZGV0ZWN0XCI7XG5pbXBvcnQgKiBhcyBQYXN0ZUlucHV0IGZyb20gXCIuL3Bhc3RlaW5wdXRcIjtcbmltcG9ydCBSZWN0IGZyb20gXCIuL3JlY3RcIjtcbmltcG9ydCB7IEltYWdlRGF0YSB9IGZyb20gXCIuL2ltYWdlZGF0YS1leHRlbnNpb25zXCI7XG5leHBvcnQgeyBQYXN0ZUlucHV0LCBJbWFnZURldGVjdCwgUmVjdCwgSW1hZ2VEYXRhIH07XG5leHBvcnQgKiBmcm9tIFwiLi9pbWdyZWZcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3dyYXBwZXJcIjtcbi8vIC8vIHN5bnRheCBub3QgeWV0IHN1cHBvcnRlZCBpbiB3ZWJwYWNrXG4vLyAvLyB0aGlzIHNob3VsZCBpbXByb3ZlIHRyZWUgc2hha2luZ1xuLy8gaW1wb3J0IFwiLi9kZWNsYXJhdGlvbnNcIjtcbi8vIGV4cG9ydCAqIGFzIEltYWdlRGV0ZWN0IGZyb20gXCIuL2ltYWdlZGV0ZWN0XCI7XG4vLyBleHBvcnQgKiBhcyBQYXN0ZUlucHV0IGZyb20gXCIuL3Bhc3RlaW5wdXRcIjtcbi8vIGV4cG9ydCB7IGRlZmF1bHQgYXMgUmVjdCwgUmVjdExpa2UsIFBvaW50TGlrZSB9IGZyb20gXCIuL3JlY3RcIjtcbi8vIGV4cG9ydCB7IEltYWdlRGF0YSB9IGZyb20gXCIuL2ltYWdlZGF0YS1leHRlbnNpb25zXCI7XG4vLyBleHBvcnQgKiBmcm9tIFwiLi9pbWdyZWZcIjtcbi8vIGV4cG9ydCAqIGZyb20gXCIuL3dyYXBwZXJcIjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/index.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/nodeimports.ts":
/*!*************************************************!*\
  !*** ../node_modules/@alt1/base/nodeimports.ts ***!
  \*************************************************/
/*! exports provided: requireNodeFetch, requireNodeCanvas, requireSharp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireNodeFetch\", function() { return requireNodeFetch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireNodeCanvas\", function() { return requireNodeCanvas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireSharp\", function() { return requireSharp; });\n//keep the nastyness in one file\n//TODO this used to be nastier, can probly inline it again\n//commented out type info as that breaks webpack with optional dependencies\nfunction requireNodeFetch() {\n    if (typeof require != \"undefined\") {\n        return require(\"node-fetch\");\n    }\n    throw new Error(\"couldn't find built-in 'fetch' or the module 'node-fetch'\");\n}\nfunction requireNodeCanvas() {\n    if (typeof require != \"undefined\") {\n        try {\n            requireSharp();\n        }\n        catch (e) { }\n        return require(\"canvas\"); // as typeof import(\"canvas\");\n    }\n    throw new Error(\"couldn't find built-in canvas or the module 'canvas'\");\n}\nfunction requireSharp() {\n    if (typeof require != \"undefined\") {\n        return require(\"sharp\"); // as typeof import(\"sharp\");\n    }\n    throw new Error(\"coulnd't find build-in image compression methods or the module 'sharp'\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL25vZGVpbXBvcnRzLnRzPzM3NTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsT0FBdUI7QUFDdEMsZUFBZSxPQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsT0FBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLGVBQWUsT0FBdUIsV0FBVztBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsT0FBdUI7QUFDdEMsZUFBZSxPQUF1QixVQUFVO0FBQ2hEO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvYmFzZS9ub2RlaW1wb3J0cy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8va2VlcCB0aGUgbmFzdHluZXNzIGluIG9uZSBmaWxlXG4vL1RPRE8gdGhpcyB1c2VkIHRvIGJlIG5hc3RpZXIsIGNhbiBwcm9ibHkgaW5saW5lIGl0IGFnYWluXG4vL2NvbW1lbnRlZCBvdXQgdHlwZSBpbmZvIGFzIHRoYXQgYnJlYWtzIHdlYnBhY2sgd2l0aCBvcHRpb25hbCBkZXBlbmRlbmNpZXNcbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlTm9kZUZldGNoKCkge1xuICAgIGlmICh0eXBlb2YgX19ub25fd2VicGFja19yZXF1aXJlX18gIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4gX19ub25fd2VicGFja19yZXF1aXJlX18oXCJub2RlLWZldGNoXCIpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb3VsZG4ndCBmaW5kIGJ1aWx0LWluICdmZXRjaCcgb3IgdGhlIG1vZHVsZSAnbm9kZS1mZXRjaCdcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVxdWlyZU5vZGVDYW52YXMoKSB7XG4gICAgaWYgKHR5cGVvZiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyAhPSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXF1aXJlU2hhcnAoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgICAgIHJldHVybiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyhcImNhbnZhc1wiKTsgLy8gYXMgdHlwZW9mIGltcG9ydChcImNhbnZhc1wiKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY291bGRuJ3QgZmluZCBidWlsdC1pbiBjYW52YXMgb3IgdGhlIG1vZHVsZSAnY2FudmFzJ1wiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlU2hhcnAoKSB7XG4gICAgaWYgKHR5cGVvZiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyAhPSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiBfX25vbl93ZWJwYWNrX3JlcXVpcmVfXyhcInNoYXJwXCIpOyAvLyBhcyB0eXBlb2YgaW1wb3J0KFwic2hhcnBcIik7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcImNvdWxuZCd0IGZpbmQgYnVpbGQtaW4gaW1hZ2UgY29tcHJlc3Npb24gbWV0aG9kcyBvciB0aGUgbW9kdWxlICdzaGFycCdcIik7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/nodeimports.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/pasteinput.ts":
/*!************************************************!*\
  !*** ../node_modules/@alt1/base/pasteinput.ts ***!
  \************************************************/
/*! exports provided: lastref, listen, unlisten, triggerPaste, startDragNDrop, start, fileDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastref\", function() { return lastref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listen\", function() { return listen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unlisten\", function() { return unlisten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"triggerPaste\", function() { return triggerPaste; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startDragNDrop\", function() { return startDragNDrop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"start\", function() { return start; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fileDialog\", function() { return fileDialog; });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _imagedetect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n\n\nvar listeners = [];\nvar started = false;\nvar dndStarted = false;\nvar pasting = false;\nvar lastref = null;\nfunction listen(func, errorfunc, dragndrop) {\n    listeners.push({ cb: func, error: errorfunc });\n    if (!started) {\n        start();\n    }\n    if (dragndrop && !dndStarted) {\n        startDragNDrop();\n    }\n}\nfunction unlisten(func) {\n    let i = listeners.findIndex(c => c.cb == func);\n    if (i != -1) {\n        listeners.splice(i, 1);\n    }\n}\n/**\n * currently used in multiple document situations (iframe), might be removed in the future\n */\nfunction triggerPaste(img) {\n    lastref = img;\n    for (var a in listeners) {\n        listeners[a].cb(lastref);\n    }\n}\nfunction pasted(img) {\n    pasting = false;\n    let cnv = img instanceof HTMLCanvasElement ? img : img.toCanvas();\n    triggerPaste(new _index__WEBPACK_IMPORTED_MODULE_0__[\"ImgRefCtx\"](cnv));\n}\nfunction error(mes, error) {\n    var _a, _b;\n    pasting = false;\n    for (var a in listeners) {\n        (_b = (_a = listeners[a]).error) === null || _b === void 0 ? void 0 : _b.call(_a, mes, error);\n    }\n}\nfunction startDragNDrop() {\n    var getitem = function (items) {\n        var foundimage = \"\";\n        for (var a = 0; a < items.length; a++) {\n            var item = items[a];\n            var m = item.type.match(/^image\\/(\\w+)$/);\n            if (m) {\n                if (m[1] == \"png\") {\n                    return item;\n                }\n                else {\n                    foundimage = m[1];\n                }\n            }\n        }\n        if (foundimage) {\n            error(\"The image you uploaded is not a .png image. Other image type have compression noise and can't be used for image detection.\", \"notpng\");\n        }\n        return null;\n    };\n    window.addEventListener(\"dragover\", function (e) {\n        e.preventDefault();\n    });\n    window.addEventListener(\"drop\", function (e) {\n        if (!e.dataTransfer) {\n            return;\n        }\n        var item = getitem(e.dataTransfer.items);\n        e.preventDefault();\n        if (!item) {\n            return;\n        }\n        fromFile(item.getAsFile());\n    });\n}\nfunction start() {\n    if (started) {\n        return;\n    }\n    started = true;\n    //determine if we have a clipboard api\n    //try{a=new Event(\"clipboard\"); a=\"clipboardData\" in a;}\n    //catch(e){a=false;}\n    var ischrome = !!navigator.userAgent.match(/Chrome/) && !navigator.userAgent.match(/Edge/);\n    //old method breaks after chrome 41, revert to good old user agent sniffing\n    //nvm, internet explorer (edge) decided that it wants to be chrome, however fails at delivering\n    //turns out this one is interesting, edge is a hybrid between the paste api's\n    var apipasted = function (e) {\n        if (!e.clipboardData) {\n            return;\n        }\n        for (var a = 0; a < e.clipboardData.items.length; a++) { //loop all data types\n            if (e.clipboardData.items[a].type.indexOf(\"image\") != -1) {\n                var file = e.clipboardData.items[a].getAsFile();\n                var img = new Image();\n                img.src = (window.URL || window.webkitURL).createObjectURL(file);\n                if (img.width > 0) {\n                    pasted(img);\n                }\n                else {\n                    img.onload = function () { pasted(img); };\n                }\n            }\n        }\n    };\n    if (ischrome) {\n        document.addEventListener(\"paste\", apipasted);\n    }\n    else {\n        var catcher = document.createElement(\"div\");\n        catcher.setAttribute(\"contenteditable\", \"\");\n        catcher.className = \"forcehidden\"; //retarded ie safety/bug, cant apply styles using js//TODO i don't even know what's going on\n        catcher.onpaste = function (e) {\n            if (e.clipboardData && e.clipboardData.items) {\n                apipasted(e);\n                return;\n            }\n            setTimeout(function () {\n                var b = catcher.children[0];\n                if (!b || b.tagName != \"IMG\") {\n                    return;\n                }\n                var img = new Image();\n                img.src = b.src;\n                var a = img.src.match(/^data:([\\w\\/]+);/);\n                if (img.width > 0) {\n                    pasted(img);\n                }\n                else {\n                    img.onload = function () { pasted(img); };\n                }\n                catcher.innerHTML = \"\";\n            }, 1);\n        };\n        document.body.appendChild(catcher);\n    }\n    //detect if ctrl-v is pressed and focus catcher if needed\n    document.addEventListener(\"keydown\", function (e) {\n        if (e.target.tagName == \"INPUT\") {\n            return;\n        }\n        if (e.keyCode != \"V\".charCodeAt(0) || !e.ctrlKey) {\n            return;\n        }\n        pasting = true;\n        setTimeout(function () {\n            if (pasting) {\n                error(\"You pressed Ctrl+V, but no image was pasted by your browser, make sure your clipboard contains an image, and not a link to an image.\", \"noimg\");\n            }\n        }, 1000);\n        if (catcher) {\n            catcher.focus();\n        }\n    });\n}\nfunction fileDialog() {\n    var fileinput = document.createElement(\"input\");\n    fileinput.type = \"file\";\n    fileinput.accept = \"image/png\";\n    fileinput.onchange = function () { if (fileinput.files && fileinput.files[0]) {\n        fromFile(fileinput.files[0]);\n    } };\n    fileinput.click();\n    return fileinput;\n}\nfunction fromFile(file) {\n    if (!file) {\n        return;\n    }\n    var reader = new FileReader();\n    reader.onload = function () {\n        var bytearray = new Uint8Array(reader.result);\n        if (_imagedetect__WEBPACK_IMPORTED_MODULE_1__[\"isPngBuffer\"](bytearray)) {\n            _imagedetect__WEBPACK_IMPORTED_MODULE_1__[\"clearPngColorspace\"](bytearray);\n        }\n        var blob = new Blob([bytearray], { type: \"image/png\" });\n        var img = new Image();\n        img.onerror = () => error(\"The file you uploaded could not be opened as an image.\", \"invalidfile\");\n        var bloburl = URL.createObjectURL(blob);\n        img.src = bloburl;\n        if (img.width > 0) {\n            pasted(img);\n            URL.revokeObjectURL(bloburl);\n        }\n        else {\n            img.onload = function () { pasted(img); URL.revokeObjectURL(bloburl); };\n        }\n    };\n    reader.readAsArrayBuffer(file);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/pasteinput.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/rect.ts":
/*!******************************************!*\
  !*** ../node_modules/@alt1/base/rect.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Rect; });\n//util class for rectangle maths\n//TODO shit this sucks can we remove it again?\n//more of a shorthand to get {x,y,width,height} than a class\n//kinda starting to like it again\n//TODO remove rant\n;\n/**\n * Simple rectangle class with some util functions\n */\nclass Rect {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    static fromArgs(...args) {\n        if (typeof args[0] == \"object\") {\n            if (typeof args[0][0] == \"number\") {\n                return new Rect(args[0], args[1], args[2], args[3]);\n            }\n            else {\n                return new Rect(args[0].x, args[0].y, args[0].width, args[0].height);\n            }\n        }\n        else {\n            return new Rect(args[0], args[1], args[2], args[3]);\n        }\n    }\n    /**\n     * Resizes this Rect to include the full size of a given second rectangle\n     */\n    union(r2) {\n        var x = Math.min(this.x, r2.x);\n        var y = Math.min(this.y, r2.y);\n        this.width = Math.max(this.x + this.width, r2.x + r2.width) - x;\n        this.height = Math.max(this.y + this.height, r2.y + r2.height) - y;\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    /**\n     * Resizes this Rect to include a given point\n     */\n    includePoint(x, y) {\n        this.union(new Rect(x, y, 0, 0));\n    }\n    /**\n     * Grows the rectangle with the given dimensions\n     */\n    inflate(w, h) {\n        this.x -= w;\n        this.y -= h;\n        this.width += 2 * w;\n        this.height += 2 * h;\n    }\n    /**\n     * Resizes this Rect to the area that overlaps a given Rect\n     * width and height will be set to 0 if the intersection does not exist\n     */\n    intersect(r2) {\n        if (this.x < r2.x) {\n            this.width -= r2.x - this.x;\n            this.x = r2.x;\n        }\n        if (this.y < r2.y) {\n            this.height -= r2.y - this.y;\n            this.y = r2.y;\n        }\n        this.width = Math.min(this.x + this.width, r2.x + r2.width) - this.x;\n        this.height = Math.min(this.y + this.height, r2.y + r2.height) - this.y;\n        if (this.width <= 0 || this.height <= 0) {\n            this.width = 0;\n            this.height = 0;\n        }\n    }\n    /**\n     * Returns wether this Rect has at least one pixel overlap with a given Rect\n     */\n    overlaps(r2) {\n        return this.x < r2.x + r2.width && this.x + this.width > r2.x && this.y < r2.y + r2.height && this.y + this.height > r2.y;\n    }\n    /**\n     * Returns wether a given Rect fits completely inside this Rect\n     * @param r2\n     */\n    contains(r2) {\n        return this.x <= r2.x && this.x + this.width >= r2.x + r2.width && this.y <= r2.y && this.y + this.height >= r2.y + r2.height;\n    }\n    /**\n     * Returns wether a given point lies inside this Rect\n     */\n    containsPoint(x, y) {\n        return this.x <= x && this.x + this.width > x && this.y <= y && this.y + this.height > y;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL3JlY3QudHM/ZWY4MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBLDhCQUE4QixpQkFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AYWx0MS9iYXNlL3JlY3QudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL3V0aWwgY2xhc3MgZm9yIHJlY3RhbmdsZSBtYXRoc1xuLy9UT0RPIHNoaXQgdGhpcyBzdWNrcyBjYW4gd2UgcmVtb3ZlIGl0IGFnYWluP1xuLy9tb3JlIG9mIGEgc2hvcnRoYW5kIHRvIGdldCB7eCx5LHdpZHRoLGhlaWdodH0gdGhhbiBhIGNsYXNzXG4vL2tpbmRhIHN0YXJ0aW5nIHRvIGxpa2UgaXQgYWdhaW5cbi8vVE9ETyByZW1vdmUgcmFudFxuO1xuLyoqXG4gKiBTaW1wbGUgcmVjdGFuZ2xlIGNsYXNzIHdpdGggc29tZSB1dGlsIGZ1bmN0aW9uc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWN0IHtcbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCB3LCBoKSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMud2lkdGggPSB3O1xuICAgICAgICB0aGlzLmhlaWdodCA9IGg7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQXJncyguLi5hcmdzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF1bMF0gPT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVjdChhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVjdChhcmdzWzBdLngsIGFyZ3NbMF0ueSwgYXJnc1swXS53aWR0aCwgYXJnc1swXS5oZWlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWN0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc2l6ZXMgdGhpcyBSZWN0IHRvIGluY2x1ZGUgdGhlIGZ1bGwgc2l6ZSBvZiBhIGdpdmVuIHNlY29uZCByZWN0YW5nbGVcbiAgICAgKi9cbiAgICB1bmlvbihyMikge1xuICAgICAgICB2YXIgeCA9IE1hdGgubWluKHRoaXMueCwgcjIueCk7XG4gICAgICAgIHZhciB5ID0gTWF0aC5taW4odGhpcy55LCByMi55KTtcbiAgICAgICAgdGhpcy53aWR0aCA9IE1hdGgubWF4KHRoaXMueCArIHRoaXMud2lkdGgsIHIyLnggKyByMi53aWR0aCkgLSB4O1xuICAgICAgICB0aGlzLmhlaWdodCA9IE1hdGgubWF4KHRoaXMueSArIHRoaXMuaGVpZ2h0LCByMi55ICsgcjIuaGVpZ2h0KSAtIHk7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXNpemVzIHRoaXMgUmVjdCB0byBpbmNsdWRlIGEgZ2l2ZW4gcG9pbnRcbiAgICAgKi9cbiAgICBpbmNsdWRlUG9pbnQoeCwgeSkge1xuICAgICAgICB0aGlzLnVuaW9uKG5ldyBSZWN0KHgsIHksIDAsIDApKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR3Jvd3MgdGhlIHJlY3RhbmdsZSB3aXRoIHRoZSBnaXZlbiBkaW1lbnNpb25zXG4gICAgICovXG4gICAgaW5mbGF0ZSh3LCBoKSB7XG4gICAgICAgIHRoaXMueCAtPSB3O1xuICAgICAgICB0aGlzLnkgLT0gaDtcbiAgICAgICAgdGhpcy53aWR0aCArPSAyICogdztcbiAgICAgICAgdGhpcy5oZWlnaHQgKz0gMiAqIGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc2l6ZXMgdGhpcyBSZWN0IHRvIHRoZSBhcmVhIHRoYXQgb3ZlcmxhcHMgYSBnaXZlbiBSZWN0XG4gICAgICogd2lkdGggYW5kIGhlaWdodCB3aWxsIGJlIHNldCB0byAwIGlmIHRoZSBpbnRlcnNlY3Rpb24gZG9lcyBub3QgZXhpc3RcbiAgICAgKi9cbiAgICBpbnRlcnNlY3QocjIpIHtcbiAgICAgICAgaWYgKHRoaXMueCA8IHIyLngpIHtcbiAgICAgICAgICAgIHRoaXMud2lkdGggLT0gcjIueCAtIHRoaXMueDtcbiAgICAgICAgICAgIHRoaXMueCA9IHIyLng7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMueSA8IHIyLnkpIHtcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0IC09IHIyLnkgLSB0aGlzLnk7XG4gICAgICAgICAgICB0aGlzLnkgPSByMi55O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMud2lkdGggPSBNYXRoLm1pbih0aGlzLnggKyB0aGlzLndpZHRoLCByMi54ICsgcjIud2lkdGgpIC0gdGhpcy54O1xuICAgICAgICB0aGlzLmhlaWdodCA9IE1hdGgubWluKHRoaXMueSArIHRoaXMuaGVpZ2h0LCByMi55ICsgcjIuaGVpZ2h0KSAtIHRoaXMueTtcbiAgICAgICAgaWYgKHRoaXMud2lkdGggPD0gMCB8fCB0aGlzLmhlaWdodCA8PSAwKSB7XG4gICAgICAgICAgICB0aGlzLndpZHRoID0gMDtcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0ID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHdldGhlciB0aGlzIFJlY3QgaGFzIGF0IGxlYXN0IG9uZSBwaXhlbCBvdmVybGFwIHdpdGggYSBnaXZlbiBSZWN0XG4gICAgICovXG4gICAgb3ZlcmxhcHMocjIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMueCA8IHIyLnggKyByMi53aWR0aCAmJiB0aGlzLnggKyB0aGlzLndpZHRoID4gcjIueCAmJiB0aGlzLnkgPCByMi55ICsgcjIuaGVpZ2h0ICYmIHRoaXMueSArIHRoaXMuaGVpZ2h0ID4gcjIueTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB3ZXRoZXIgYSBnaXZlbiBSZWN0IGZpdHMgY29tcGxldGVseSBpbnNpZGUgdGhpcyBSZWN0XG4gICAgICogQHBhcmFtIHIyXG4gICAgICovXG4gICAgY29udGFpbnMocjIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMueCA8PSByMi54ICYmIHRoaXMueCArIHRoaXMud2lkdGggPj0gcjIueCArIHIyLndpZHRoICYmIHRoaXMueSA8PSByMi55ICYmIHRoaXMueSArIHRoaXMuaGVpZ2h0ID49IHIyLnkgKyByMi5oZWlnaHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2V0aGVyIGEgZ2l2ZW4gcG9pbnQgbGllcyBpbnNpZGUgdGhpcyBSZWN0XG4gICAgICovXG4gICAgY29udGFpbnNQb2ludCh4LCB5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnggPD0geCAmJiB0aGlzLnggKyB0aGlzLndpZHRoID4geCAmJiB0aGlzLnkgPD0geSAmJiB0aGlzLnkgKyB0aGlzLmhlaWdodCA+IHk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/rect.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/base/wrapper.ts":
/*!*********************************************!*\
  !*** ../node_modules/@alt1/base/wrapper.ts ***!
  \*********************************************/
/*! exports provided: NoAlt1Error, Alt1Error, newestversion, hasAlt1, skinName, openbrowser, requireAlt1, getdisplaybounds, capture, captureHold, captureHoldScreen, captureHoldFullRs, transferImageData, decodeImageString, encodeImageString, mixColor, unmixColor, identifyApp, hasAlt1Version, getMousePosition, addResizeElement, on, removeListener, once, ImageStreamReader, captureAsync, captureMultiAsync, captureStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoAlt1Error\", function() { return NoAlt1Error; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Alt1Error\", function() { return Alt1Error; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newestversion\", function() { return newestversion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1\", function() { return hasAlt1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"skinName\", function() { return skinName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"openbrowser\", function() { return openbrowser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"requireAlt1\", function() { return requireAlt1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getdisplaybounds\", function() { return getdisplaybounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capture\", function() { return capture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureHold\", function() { return captureHold; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureHoldScreen\", function() { return captureHoldScreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureHoldFullRs\", function() { return captureHoldFullRs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transferImageData\", function() { return transferImageData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeImageString\", function() { return decodeImageString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeImageString\", function() { return encodeImageString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mixColor\", function() { return mixColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unmixColor\", function() { return unmixColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identifyApp\", function() { return identifyApp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasAlt1Version\", function() { return hasAlt1Version; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMousePosition\", function() { return getMousePosition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addResizeElement\", function() { return addResizeElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"on\", function() { return on; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeListener\", function() { return removeListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return once; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageStreamReader\", function() { return ImageStreamReader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureAsync\", function() { return captureAsync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureMultiAsync\", function() { return captureMultiAsync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"captureStream\", function() { return captureStream; });\n/* harmony import */ var _imagedetect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./imagedetect */ \"../node_modules/@alt1/base/imagedetect.ts\");\n/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rect */ \"../node_modules/@alt1/base/rect.ts\");\n/* harmony import */ var _imgref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./imgref */ \"../node_modules/@alt1/base/imgref.ts\");\n/* harmony import */ var _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./imagedata-extensions */ \"../node_modules/@alt1/base/imagedata-extensions.ts\");\n/* harmony import */ var _alt1api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./alt1api */ \"../node_modules/@alt1/base/alt1api.ts\");\n/* harmony import */ var _alt1api__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_alt1api__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\n * Thrown when a method is called that can not be used outside of Alt1\n */\nclass NoAlt1Error extends Error {\n    constructor() {\n        super();\n        this.message = \"This method can not be ran outside of Alt1\";\n    }\n}\n;\n/**\n * Thrown when the Alt1 API returns an invalid result\n * Errors of a different type are throw when internal Alt1 errors occur\n */\nclass Alt1Error extends Error {\n}\n/**\n * The latest Alt1 version\n */\nvar newestversion = \"1.5.5\";\n/**\n * Whether the Alt1 API is available\n */\nvar hasAlt1 = (typeof alt1 != \"undefined\");\n/**\n * The name of the Alt1 interface skin. (Always \"default\" if running in a browser)\n */\nvar skinName = hasAlt1 ? alt1.skinName : \"default\";\n/**\n * Max number of bytes that can be sent by alt1 in one function\n * Not completely sure why this number is different than window.alt1.maxtranfer\n */\nvar maxtransfer = 4000000;\n/**\n * Open a link in the default browser\n * @deprecated use window.open instead\n */\nfunction openbrowser(url) {\n    if (hasAlt1) {\n        alt1.openBrowser(url);\n    }\n    else {\n        window.open(url, '_blank');\n    }\n}\n/**\n * Throw if Alt1 API is not available\n */\nfunction requireAlt1() {\n    if (!hasAlt1) {\n        throw new NoAlt1Error();\n    }\n}\n/**\n * Returns an object with a rectangle that spans all screens\n */\nfunction getdisplaybounds() {\n    if (!hasAlt1) {\n        return false;\n    }\n    return new _rect__WEBPACK_IMPORTED_MODULE_1__[\"default\"](alt1.screenX, alt1.screenY, alt1.screenWidth, alt1.screenHeight);\n}\nfunction capture(...args) {\n    if (!hasAlt1) {\n        throw new NoAlt1Error();\n    }\n    var i = 0;\n    var rect = _rect__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromArgs(...args);\n    var buf = new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](rect.width, rect.height);\n    if (rect.width * rect.height * 4 <= maxtransfer) {\n        var data = alt1.getRegion(rect.x, rect.y, rect.width, rect.height);\n        if (!data) {\n            return null;\n        }\n        decodeImageString(data, buf, 0, 0, rect.width, rect.height);\n    }\n    else {\n        //split up the request to to exceed the single transfer limit (for now)\n        var x1 = rect.x;\n        var ref = alt1.bindRegion(rect.x, rect.y, rect.width, rect.height);\n        if (ref <= 0) {\n            return null;\n        }\n        while (x1 < rect.x + rect.width) {\n            var x2 = Math.min(rect.x + rect.width, Math.floor(x1 + (maxtransfer / 4 / rect.height)));\n            var data = alt1.bindGetRegion(ref, x1, rect.y, x2 - x1, rect.height);\n            if (!data) {\n                return null;\n            }\n            decodeImageString(data, buf, x1 - rect.x, 0, x2 - x1, rect.height);\n            x1 = x2;\n        }\n    }\n    return buf;\n}\n/**\n * Makes alt1 bind an area of the rs client in memory without sending it to the js client\n * returns an imgref object which can be used to get pixel data using the imgreftobuf function\n * currently only one bind can exist per app and the ref in (v) will always be 1\n */\nfunction captureHold(x, y, w, h) {\n    x = Math.round(x);\n    y = Math.round(y);\n    w = Math.round(w);\n    h = Math.round(h);\n    requireAlt1();\n    var r = alt1.bindRegion(x, y, w, h);\n    if (r <= 0) {\n        throw new Alt1Error(\"capturehold failed\");\n    }\n    return new _imgref__WEBPACK_IMPORTED_MODULE_2__[\"ImgRefBind\"](r, x, y, w, h);\n}\n/**\n * Same as captureHoldRegion, but captures the screen instead of the rs client. it also uses screen coordinates instead and can capture outside of the rs client\n */\nfunction captureHoldScreen(x, y, w, h) {\n    x = Math.round(x);\n    y = Math.round(y);\n    w = Math.round(w);\n    h = Math.round(h);\n    requireAlt1();\n    var r = alt1.bindScreenRegion(x, y, w, h);\n    if (r <= 0) {\n        return false;\n    }\n    return new _imgref__WEBPACK_IMPORTED_MODULE_2__[\"ImgRefBind\"](r, x, y, w, h);\n}\n/**\n * bind the full rs window if the rs window can be detected by alt1, otherwise return the full screen\n */\nfunction captureHoldFullRs() {\n    return captureHold(0, 0, alt1.rsWidth, alt1.rsHeight);\n}\n/**\n * returns a subregion from a bound image\n * used internally in imgreftobuf if imgref is a bound image\n * @deprecated This should be handled internall by the imgrefbind.toData method\n */\nfunction transferImageData(handle, x, y, w, h) {\n    x = Math.round(x);\n    y = Math.round(y);\n    w = Math.round(w);\n    h = Math.round(h);\n    requireAlt1();\n    var r = new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](w, h);\n    var x1 = x;\n    while (true) { //split up the request to to exceed the single transfer limit (for now)\n        var x2 = Math.min(x + w, Math.floor(x1 + (maxtransfer / 4 / h)));\n        var a = alt1.bindGetRegion(handle, x1, y, x2 - x1, h);\n        if (!a) {\n            throw new Alt1Error();\n        }\n        decodeImageString(a, r, x1 - x, 0, x2 - x1, h);\n        x1 = x2;\n        if (x1 == x + w) {\n            break;\n        }\n        ;\n    }\n    return r;\n}\n/**\n * decodes a returned string from alt1 to an imagebuffer\n */\nfunction decodeImageString(imagestring, target, x, y, w, h) {\n    var bin = atob(imagestring);\n    var bytes = target.data;\n    w |= 0;\n    h |= 0;\n    var offset = 4 * x + 4 * y * target.width;\n    var target_width = target.width | 0;\n    for (var a = 0; a < w; a++) {\n        for (var b = 0; b < h; b++) {\n            var i1 = (offset + (a * 4 | 0) + (b * target_width * 4 | 0)) | 0;\n            var i2 = ((a * 4 | 0) + (b * 4 * w | 0)) | 0;\n            bytes[i1 + 0 | 0] = bin.charCodeAt(i2 + 2 | 0); //fix weird red/blue swap in c#\n            bytes[i1 + 1 | 0] = bin.charCodeAt(i2 + 1 | 0);\n            bytes[i1 + 2 | 0] = bin.charCodeAt(i2 + 0 | 0);\n            bytes[i1 + 3 | 0] = bin.charCodeAt(i2 + 3 | 0);\n        }\n    }\n    return target;\n}\n/**\n * encodes an imagebuffer to a string\n */\nfunction encodeImageString(buf, sx = 0, sy = 0, sw = buf.width, sh = buf.height) {\n    var raw = \"\";\n    for (var y = sy; y < sy + sh; y++) {\n        for (var x = sx; x < sx + sw; x++) {\n            var i = 4 * x + 4 * buf.width * y | 0;\n            raw += String.fromCharCode(buf.data[i + 2 | 0]);\n            raw += String.fromCharCode(buf.data[i + 1 | 0]);\n            raw += String.fromCharCode(buf.data[i + 0 | 0]);\n            raw += String.fromCharCode(buf.data[i + 3 | 0]);\n        }\n    }\n    return btoa(raw);\n}\n/**\n * mixes the given color into a single int. This format is used by alt1\n */\nfunction mixColor(r, g, b, a = 255) {\n    return (b << 0) + (g << 8) + (r << 16) + (a << 24);\n}\nfunction unmixColor(col) {\n    var r = (col >> 16) & 0xff;\n    var g = (col >> 8) & 0xff;\n    var b = (col >> 0) & 0xff;\n    return [r, g, b];\n}\nfunction identifyApp(url) {\n    if (hasAlt1) {\n        alt1.identifyAppUrl(url);\n    }\n}\nfunction convertAlt1Version(str) {\n    var a = str.match(/^(\\d+)\\.(\\d+)\\.(\\d+)$/);\n    if (!a) {\n        throw new RangeError(\"Invalid version string\");\n    }\n    return (+a[1]) * 1000 * 1000 + (+a[2]) * 1000 + (+a[3]) * 1;\n}\nvar cachedVersionInt = -1;\n/**\n * checks if alt1 is running and at least the given version. versionstr should be a string with the version eg: 1.3.2\n * @param versionstr\n */\nfunction hasAlt1Version(versionstr) {\n    if (!hasAlt1) {\n        return false;\n    }\n    if (cachedVersionInt == -1) {\n        cachedVersionInt = alt1.versionint;\n    }\n    return cachedVersionInt >= convertAlt1Version(versionstr);\n}\n/**\n * Gets the current cursor position in the game, returns null if the rs window is not active (alt1.rsActive)\n */\nfunction getMousePosition() {\n    var pos = alt1.mousePosition;\n    if (pos == -1) {\n        return null;\n    }\n    return { x: pos >>> 16, y: pos & 0xFFFF };\n}\n/**\n * Registers a given HTML element as a frame border, when this element is dragged by the user the Alt1 frame will resize accordingly\n * Use the direction arguements to make a given direction stick to the mouse. eg. Only set left to true to make the element behave as the left border\n * Or set all to true to move the whole window. Not all combinations are permitted\n */\nfunction addResizeElement(el, left, top, right, bot) {\n    if (!hasAlt1 || !alt1.userResize) {\n        return;\n    }\n    el.addEventListener(\"mousedown\", function (e) {\n        alt1.userResize(left, top, right, bot);\n        e.preventDefault();\n    });\n}\n/**\n * Add an event listener\n */\nfunction on(type, listener) {\n    requireAlt1();\n    if (!alt1.events) {\n        alt1.events = {};\n    }\n    if (!alt1.events[type]) {\n        alt1.events[type] = [];\n    }\n    alt1.events[type].push(listener);\n}\n/**\n * Removes an event listener\n */\nfunction removeListener(type, listener) {\n    var elist = alt1.events && alt1.events[type];\n    if (!elist) {\n        return;\n    }\n    var i = elist.indexOf(listener);\n    if (i == -1) {\n        return;\n    }\n    elist.splice(i, 1);\n}\n/**\n * Listens for the event to fire once and then stops listening\n * @param event\n * @param cb\n */\nfunction once(type, listener) {\n    requireAlt1();\n    var fn = (e) => {\n        removeListener(type, fn);\n        listener(e);\n    };\n    on(type, fn);\n}\n;\n/**\n * Used to read a set of images from a binary stream returned by the Alt1 API\n */\nclass ImageStreamReader {\n    constructor(reader, ...args) {\n        this.framebuffer = null;\n        this.pos = 0;\n        this.reading = false;\n        this.closed = false;\n        //paused state\n        this.pausedindex = -1;\n        this.pausedbuffer = null;\n        this.streamreader = reader;\n        if (args[0] instanceof _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"]) {\n            this.setFrameBuffer(args[0]);\n        }\n        else if (typeof args[0] == \"number\") {\n            this.setFrameBuffer(new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](args[0], args[1]));\n        }\n    }\n    /**\n     *\n     */\n    setFrameBuffer(buffer) {\n        if (this.reading) {\n            throw new Error(\"can't change framebuffer while reading\");\n        }\n        this.framebuffer = buffer;\n    }\n    /**\n     * Closes the underlying stream and ends reading\n     */\n    close() {\n        this.streamreader.cancel();\n    }\n    /**\n     * Reads a single image from the stream\n     */\n    async nextImage() {\n        if (this.reading) {\n            throw new Error(\"already reading from this stream\");\n        }\n        if (!this.framebuffer) {\n            throw new Error(\"framebuffer not set\");\n        }\n        this.reading = true;\n        var synctime = -Date.now();\n        var starttime = Date.now();\n        var r = false;\n        while (!r) {\n            if (this.pausedindex != -1 && this.pausedbuffer) {\n                r = this.readChunk(this.pausedindex, this.framebuffer.data, this.pausedbuffer);\n            }\n            else {\n                synctime += Date.now();\n                var res = await this.streamreader.read();\n                synctime -= Date.now();\n                if (res.done) {\n                    throw new Error(\"Stream closed while reading\");\n                }\n                var data = res.value;\n                r = this.readChunk(0, this.framebuffer.data, data);\n            }\n        }\n        synctime += Date.now();\n        //console.log(\"Decoded async image, \" + this.framebuffer.width + \"x\" + this.framebuffer.height + \" time: \" + (Date.now() - starttime) + \"ms (\" + synctime + \"ms main thread)\");\n        this.reading = false;\n        return this.framebuffer;\n    }\n    readChunk(i, framedata, buffer) {\n        //very hot code, explicit int32 casting with |0 speeds it up by ~ x2\n        i = i | 0;\n        var framesize = framedata.length | 0;\n        var pos = this.pos;\n        var datalen = buffer.length | 0;\n        //var data32 = new Float64Array(buffer.buffer);\n        //var framedata32 = new Float64Array(framedata.buffer);\n        //fix possible buffer misalignment\n        //align to 16 for extra loop unrolling\n        while (i < datalen) {\n            //slow loop, fix alignment and other issues\n            while (i < datalen && pos < framesize && (pos % 16 != 0 || !((i + 16 | 0) <= datalen && (pos + 16 | 0) <= framesize))) {\n                var rel = pos;\n                if (pos % 4 == 0) {\n                    rel = rel + 2 | 0;\n                }\n                if (pos % 4 == 2) {\n                    rel = rel - 2 | 0;\n                }\n                framedata[rel | 0] = buffer[i | 0];\n                i = i + 1 | 0;\n                pos = pos + 1 | 0;\n            }\n            //fast unrolled loop for large chunks i wish js had some sort of memcpy\n            if (pos % 16 == 0) {\n                while ((i + 16 | 0) <= datalen && (pos + 16 | 0) <= framesize) {\n                    framedata[pos + 0 | 0] = buffer[i + 2 | 0];\n                    framedata[pos + 1 | 0] = buffer[i + 1 | 0];\n                    framedata[pos + 2 | 0] = buffer[i + 0 | 0];\n                    framedata[pos + 3 | 0] = buffer[i + 3 | 0];\n                    framedata[pos + 4 | 0] = buffer[i + 6 | 0];\n                    framedata[pos + 5 | 0] = buffer[i + 5 | 0];\n                    framedata[pos + 6 | 0] = buffer[i + 4 | 0];\n                    framedata[pos + 7 | 0] = buffer[i + 7 | 0];\n                    framedata[pos + 8 | 0] = buffer[i + 10 | 0];\n                    framedata[pos + 9 | 0] = buffer[i + 9 | 0];\n                    framedata[pos + 10 | 0] = buffer[i + 8 | 0];\n                    framedata[pos + 11 | 0] = buffer[i + 11 | 0];\n                    framedata[pos + 12 | 0] = buffer[i + 14 | 0];\n                    framedata[pos + 13 | 0] = buffer[i + 13 | 0];\n                    framedata[pos + 14 | 0] = buffer[i + 12 | 0];\n                    framedata[pos + 15 | 0] = buffer[i + 15 | 0];\n                    //could speed it up another x2 but wouldn't be able to swap r/b swap and possible alignment issues\n                    //framedata32[pos / 8 + 0 | 0] = data32[i / 8 + 0 | 0];\n                    //framedata32[pos / 8 + 1 | 0] = data32[i / 8 + 1 | 0];\n                    //framedata32[pos / 4 + 2 | 0] = data32[i / 4 + 2 | 0];\n                    //framedata32[pos / 4 + 3 | 0] = data32[i / 4 + 3 | 0];\n                    pos = pos + 16 | 0;\n                    i = i + 16 | 0;\n                }\n            }\n            if (pos >= framesize) {\n                this.pausedbuffer = null;\n                this.pausedindex = -1;\n                this.pos = 0;\n                if (i != buffer.length - 1) {\n                    this.pausedbuffer = buffer;\n                    this.pausedindex = i;\n                }\n                return true;\n            }\n        }\n        this.pos = pos;\n        this.pausedbuffer = null;\n        this.pausedindex = -1;\n        return false;\n    }\n}\nasync function captureAsync(...args) {\n    requireAlt1();\n    var i = 0;\n    var rect = (typeof args[i] == \"object\" ? args[i++] : { x: args[i++], y: args[i++], width: args[i++], height: args[i++] });\n    var format = args[i++] || \"raw\";\n    var quality = args[i++] || 0.6;\n    if (!hasAlt1Version(\"1.4.6\")) {\n        return capture(rect.x, rect.y, rect.width, rect.height);\n    }\n    var url = \"https://alt1api/pixel/getregion/\" + encodeURIComponent(JSON.stringify({ ...rect, format, quality }));\n    if (format == \"raw\") {\n        var res = await fetch(url);\n        var imgreader = new ImageStreamReader(res.body.getReader(), rect.width, rect.height);\n        return imgreader.nextImage();\n    }\n    else {\n        return _imagedetect__WEBPACK_IMPORTED_MODULE_0__[\"imageDataFromUrl\"](url);\n    }\n}\n/**\n * Asynchronously captures multple area's. This method captures the images in the same render frame if possible\n * @param areas\n */\nasync function captureMultiAsync(areas) {\n    requireAlt1();\n    var format = \"raw\";\n    var quality = 0.6;\n    var r = {};\n    var capts = [];\n    var captids = [];\n    for (var id in areas) {\n        if (areas[id]) {\n            capts.push(areas[id]);\n            captids.push(id);\n        }\n        else {\n            r[id] = null;\n        }\n    }\n    if (capts.length == 0) {\n        return r;\n    }\n    if (!hasAlt1Version(\"1.5.1\")) {\n        var proms = [];\n        for (var a = 0; a < capts.length; a++) {\n            proms.push(captureAsync(capts[a], format, quality));\n        }\n        var results = await Promise.all(proms);\n        for (var a = 0; a < capts.length; a++) {\n            r[captids[a]] = results[a];\n        }\n    }\n    else {\n        var res = await fetch(\"https://alt1api/pixel/getregionmulti/\" + encodeURIComponent(JSON.stringify({ areas: capts, format, quality })));\n        var imgreader = new ImageStreamReader(res.body.getReader());\n        for (var a = 0; a < capts.length; a++) {\n            var capt = capts[a];\n            imgreader.setFrameBuffer(new _imagedata_extensions__WEBPACK_IMPORTED_MODULE_3__[\"ImageData\"](capt.width, capt.height));\n            r[captids[a]] = await imgreader.nextImage();\n        }\n    }\n    return r;\n}\n/**\n * Starts capturing a realtime stream of the game. Make sure you keep reading the stream and close it when you're done or Alt1 WILL crash\n * @param framecb Called whenever a new frame is decoded\n * @param errorcb Called whenever an error occurs, the error is rethrown if not defined\n * @param fps Maximum fps of the stream\n */\nfunction captureStream(x, y, width, height, fps, framecb, errorcb) {\n    requireAlt1();\n    if (!hasAlt1Version(\"1.4.6\")) {\n        throw new Alt1Error(\"This function is not supported in this version of Alt1\");\n    }\n    var url = \"https://alt1api/pixel/streamregion/\" + encodeURIComponent(JSON.stringify({ x, y, width, height, fps, format: \"raw\" }));\n    var res = fetch(url).then(async (res) => {\n        var reader = new ImageStreamReader(res.body.getReader(), width, height);\n        try {\n            while (!reader.closed && !state.closed) {\n                var img = await reader.nextImage();\n                if (!state.closed) {\n                    framecb(img);\n                    state.framenr++;\n                }\n            }\n        }\n        catch (e) {\n            if (!state.closed) {\n                reader.close();\n                if (errorcb) {\n                    errorcb(e);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        if (!reader.closed && state.closed) {\n            reader.close();\n        }\n    });\n    var state = {\n        x, y, width, height,\n        framenr: 0,\n        close: () => { state.closed = true; },\n        closed: false,\n    };\n    return state;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/base/wrapper.ts\n");

/***/ }),

/***/ "../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json":
/*!****************************************************************!*\
  !*** ../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\"chars\":[{\"width\":7,\"chr\":\"a\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,7,187,255,1,3,221,255,1,6,169,255,1,7,164,132,1,8,255,255,2,3,255,255,2,4,221,0,2,5,196,243,2,7,170,0,2,8,255,255,2,9,255,0,3,3,255,255,3,4,255,0,3,5,255,255,3,6,187,0,3,8,221,255,3,9,255,0,4,4,254,239,4,5,255,255,4,6,254,204,4,7,255,255,4,8,240,253,4,9,221,0,5,5,240,36,5,6,255,34,5,7,211,41,5,8,255,34,5,9,238,0]},{\"width\":7,\"chr\":\"b\",\"bonus\":175,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,248,209,1,4,243,178,1,5,230,75,1,6,230,75,1,7,243,178,1,8,246,194,1,9,204,0,2,3,255,255,2,4,204,0,2,5,170,0,2,8,255,255,2,9,187,0,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,4,3,169,255,4,4,254,171,4,7,169,255,4,9,255,0,5,4,204,128,5,5,232,205,5,6,205,233,5,8,170,0,6,6,187,0,6,7,187,0]},{\"width\":7,\"chr\":\"c\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,5,169,255,0,6,187,255,1,4,187,255,1,6,193,90,1,7,237,201,1,8,164,185,2,3,255,255,2,5,187,0,2,8,255,255,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,4,3,221,255,4,4,255,34,4,8,221,255,4,9,255,0,5,4,226,39,5,9,221,0]},{\"width\":7,\"chr\":\"d\",\"bonus\":180,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,187,255,1,4,169,255,1,6,205,85,1,7,232,187,1,8,203,213,2,3,255,255,2,5,170,0,2,8,255,255,2,9,170,0,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,4,3,203,255,4,4,254,171,4,7,169,255,4,8,187,255,4,9,255,0,5,1,203,255,5,2,225,251,5,3,225,251,5,4,248,227,5,5,244,231,5,6,230,245,5,7,230,245,5,8,237,219,5,9,187,0,6,2,204,0,6,3,221,0,6,4,221,0,6,5,221,0,6,6,221,0,6,7,221,0,6,8,221,0,6,9,204,0]},{\"width\":7,\"chr\":\"e\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,169,255,1,4,187,255,1,5,255,255,1,6,209,104,1,7,237,219,2,3,255,255,2,5,255,255,2,6,255,0,2,8,255,255,3,3,255,255,3,4,255,0,3,5,255,255,3,6,255,0,3,8,255,255,3,9,255,0,4,3,187,255,4,4,255,119,4,5,255,255,4,6,255,0,4,8,221,255,4,9,255,0,5,4,224,155,5,5,227,229,5,6,255,0,5,9,221,0,6,6,204,0]},{\"width\":4,\"chr\":\"f\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,3,203,255,1,2,221,255,1,3,255,255,1,4,248,227,1,5,225,251,1,6,225,251,1,7,225,251,1,8,210,247,2,1,255,255,2,3,255,255,2,4,255,0,2,5,221,0,2,6,221,0,2,7,221,0,2,8,221,0,2,9,204,0,3,2,255,0,3,4,255,0]},{\"width\":7,\"chr\":\"g\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,187,255,1,3,169,255,1,4,153,255,1,5,155,112,1,6,205,85,1,7,232,187,1,8,184,189,1,11,153,255,2,3,255,255,2,4,170,0,2,5,153,0,2,8,255,255,2,11,245,247,3,3,255,255,3,4,255,0,3,8,255,255,3,9,255,0,3,11,221,255,4,3,221,255,4,4,255,136,4,7,153,255,4,8,221,255,4,9,255,85,4,10,203,255,5,3,203,255,5,4,250,226,5,5,239,236,5,6,230,245,5,7,230,245,5,8,241,234,5,9,243,178,5,11,204,0,6,4,204,0,6,5,221,0,6,6,221,0,6,7,221,0,6,8,221,0,6,9,221,0,6,10,170,0]},{\"width\":7,\"chr\":\"h\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,243,178,1,4,248,209,1,5,230,75,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,255,255,2,4,170,0,2,5,204,0,3,3,255,255,3,4,255,0,4,3,169,255,4,4,255,221,4,5,221,255,4,6,221,255,4,7,221,255,4,8,203,255,5,4,175,25,5,5,226,39,5,6,226,39,5,7,226,39,5,8,226,39,5,9,204,0]},{\"width\":3,\"chr\":\"i\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,1,237,255,0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,238,0,1,4,211,41,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0]},{\"width\":4,\"chr\":\"j\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,11,153,255,1,11,169,255,2,1,203,255,2,3,203,255,2,4,225,251,2,5,225,251,2,6,225,251,2,7,225,251,2,8,225,251,2,9,225,251,3,2,204,0,3,4,204,0,3,5,221,0,3,6,221,0,3,7,221,0,3,8,221,0,3,9,221,0,3,10,221,0]},{\"width\":6,\"chr\":\"k\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,4,166,235,2,5,255,255,2,6,255,221,3,3,203,255,3,5,153,0,3,6,255,51,3,7,250,226,3,8,160,217,4,4,204,0,4,8,239,145]},{\"width\":3,\"chr\":\"l\",\"bonus\":75,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,2,9,255,0]},{\"width\":10,\"chr\":\"m\",\"bonus\":210,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,4,248,227,1,5,230,75,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,237,255,2,5,221,0,3,3,255,255,3,4,238,0,4,3,153,255,4,4,255,255,4,5,221,255,4,6,221,255,4,7,221,255,4,8,203,255,5,4,228,209,5,5,255,68,5,6,226,39,5,7,226,39,5,8,226,39,5,9,204,0,6,3,255,255,6,5,187,0,7,3,237,255,7,4,255,85,8,4,249,174,8,5,232,243,8,6,225,251,8,7,225,251,8,8,210,247,9,5,170,0,9,6,221,0,9,7,221,0,9,8,221,0,9,9,204,0]},{\"width\":7,\"chr\":\"n\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,4,248,227,1,5,232,93,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,237,255,2,5,221,0,3,3,255,255,3,4,238,0,4,3,237,255,4,4,255,85,5,4,249,174,5,5,232,243,5,6,225,251,5,7,225,251,5,8,210,247,6,5,170,0,6,6,221,0,6,7,221,0,6,8,221,0,6,9,204,0]},{\"width\":8,\"chr\":\"o\",\"bonus\":120,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,169,255,1,4,203,255,1,6,209,104,1,7,244,231,2,3,237,255,2,5,204,0,2,8,252,241,3,3,255,255,3,4,238,0,3,8,255,255,3,9,238,0,4,3,237,255,4,4,255,0,4,8,255,255,4,9,255,0,5,4,251,207,5,7,221,255,5,9,255,0,6,5,237,183,6,6,192,225,6,8,221,0,7,6,170,0,7,7,170,0]},{\"width\":6,\"chr\":\"p\",\"bonus\":170,\"secondary\":false,\"pixels\":[0,3,237,255,0,4,255,255,0,5,187,255,0,6,203,255,0,7,255,255,0,8,221,255,0,9,221,255,0,10,221,255,1,3,255,255,1,4,240,36,1,5,255,0,1,6,187,0,1,7,211,41,1,8,254,239,1,9,221,0,1,10,221,0,1,11,221,0,2,3,255,255,2,4,255,0,2,8,255,255,2,9,238,0,3,3,237,255,3,4,255,34,3,8,237,255,3,9,255,0,4,4,253,240,4,5,255,255,4,6,255,255,4,7,237,255,4,9,238,0,5,5,239,18,5,6,255,17,5,7,255,0,5,8,238,0]},{\"width\":7,\"chr\":\"q\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,5,187,255,0,6,187,255,1,3,169,255,1,4,153,255,1,5,155,112,1,6,205,85,1,7,228,171,1,8,209,207,2,3,255,255,2,4,170,0,2,5,153,0,2,8,255,255,2,9,170,0,3,3,237,255,3,4,255,17,3,8,237,255,3,9,255,0,4,3,255,255,4,4,255,255,4,5,191,250,4,6,187,255,4,7,255,255,4,8,239,254,4,9,253,223,4,10,221,255,5,4,255,34,5,5,255,34,5,6,196,45,5,7,196,45,5,8,255,34,5,9,240,36,5,10,226,39,5,11,221,0]},{\"width\":4,\"chr\":\"r\",\"bonus\":85,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,3,187,255,1,4,244,213,1,5,232,93,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,255,255,2,4,187,0,2,5,204,0,3,4,255,0]},{\"width\":6,\"chr\":\"s\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,4,187,255,1,3,255,255,1,5,250,243,1,8,255,255,2,3,255,255,2,4,255,0,2,5,155,196,2,6,246,123,2,8,255,255,2,9,255,0,3,3,255,255,3,4,255,0,3,6,245,247,3,7,164,132,3,8,255,255,3,9,255,0,4,4,255,17,4,7,250,191,4,9,255,0,5,8,187,0]},{\"width\":5,\"chr\":\"t\",\"bonus\":80,\"secondary\":false,\"pixels\":[1,2,221,255,1,3,255,255,1,4,235,240,1,5,221,255,1,6,221,255,1,7,169,255,2,3,255,255,2,4,255,34,2,5,226,39,2,6,226,39,2,7,232,93,2,8,249,243,3,4,255,0,3,8,187,209,3,9,238,0,4,9,153,0]},{\"width\":6,\"chr\":\"u\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,3,203,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,169,255,1,4,211,41,1,5,226,39,1,6,226,39,1,7,232,93,1,8,249,243,2,8,255,255,2,9,238,0,3,8,203,255,3,9,255,0,4,3,203,255,4,4,221,255,4,5,221,255,4,6,203,255,4,7,255,255,4,8,228,247,4,9,204,0,5,4,211,41,5,5,226,39,5,6,226,39,5,7,211,41,5,8,255,34,5,9,221,0]},{\"width\":6,\"chr\":\"v\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,3,237,255,1,4,247,141,1,5,245,247,1,6,203,255,2,6,241,54,2,7,255,255,2,8,255,255,3,5,153,255,3,6,255,255,3,7,173,226,3,8,255,51,3,9,255,0,4,3,237,255,4,4,203,255,4,6,153,0,4,7,255,0,4,8,153,0,5,4,238,0,5,5,204,0]},{\"width\":10,\"chr\":\"w\",\"bonus\":170,\"secondary\":false,\"pixels\":[1,3,153,255,1,4,243,249,1,5,187,255,2,4,153,0,2,5,243,71,2,6,228,171,2,7,243,249,2,8,187,255,3,6,217,239,3,7,248,244,3,8,248,157,3,9,187,0,4,3,169,255,4,4,255,255,4,7,204,0,4,8,238,0,4,9,153,0,5,4,244,231,5,5,255,221,5,6,191,159,6,5,223,19,6,6,237,128,6,7,255,255,6,8,223,253,7,6,239,254,7,7,227,229,7,8,255,119,7,9,221,0,8,3,237,255,8,4,203,255,8,7,238,0,8,8,204,0,9,4,238,0,9,5,204,0]},{\"width\":6,\"chr\":\"x\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,8,169,255,1,3,169,255,1,4,224,232,1,7,221,255,1,9,170,0,2,4,193,90,2,5,255,255,2,6,240,253,2,8,221,0,3,4,255,255,3,5,155,196,3,6,255,187,3,7,250,191,4,3,221,255,4,5,255,0,4,7,209,104,4,8,255,255,5,4,221,0,5,9,255,0]},{\"width\":6,\"chr\":\"y\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,3,255,255,0,4,153,255,0,11,221,255,1,4,255,85,1,5,234,222,1,6,228,247,1,11,196,243,2,6,207,21,2,7,246,194,2,8,255,255,2,9,237,255,3,6,237,255,3,7,191,250,3,8,205,85,3,9,255,0,3,10,238,0,4,3,203,255,4,4,221,255,4,7,238,0,4,8,187,0,5,4,204,0,5,5,221,0]},{\"width\":6,\"chr\":\"z\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,3,153,255,0,8,203,255,1,3,255,255,1,4,153,0,1,7,221,255,1,8,255,255,1,9,204,0,2,3,255,255,2,4,255,0,2,6,255,255,2,8,255,255,2,9,255,0,3,3,255,255,3,4,254,171,3,5,169,255,3,7,255,0,3,8,255,255,3,9,255,0,4,3,255,255,4,4,255,119,4,5,170,0,4,6,170,0,4,8,255,255,4,9,255,0,5,4,255,0,5,9,255,0]},{\"width\":8,\"chr\":\"A\",\"bonus\":155,\"secondary\":false,\"pixels\":[0,8,153,255,1,6,221,255,1,7,237,255,1,9,153,0,2,3,169,255,2,4,255,255,2,5,187,255,2,6,255,255,2,7,221,0,2,8,238,0,3,1,255,255,3,2,255,255,3,4,170,0,3,5,255,0,3,6,255,255,3,7,255,0,4,2,255,255,4,3,254,239,4,4,184,189,4,6,255,255,4,7,255,0,5,3,255,34,5,4,247,141,5,5,255,255,5,6,255,255,5,7,255,102,6,6,255,85,6,7,255,187,6,8,255,255,7,8,187,0,7,9,255,0]},{\"width\":7,\"chr\":\"B\",\"bonus\":225,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,255,255,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,1,255,255,2,2,255,0,2,4,255,255,2,5,255,0,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,4,255,255,3,5,255,0,3,8,255,255,3,9,255,0,4,1,221,255,4,2,255,85,4,4,255,255,4,5,254,171,4,8,203,255,4,9,255,0,5,2,243,178,5,3,198,219,5,5,255,102,5,6,232,205,5,7,180,217,5,9,204,0,6,3,170,0,6,4,170,0,6,7,187,0,6,8,153,0]},{\"width\":9,\"chr\":\"C\",\"bonus\":155,\"secondary\":false,\"pixels\":[0,4,187,255,0,5,187,255,1,2,221,255,1,3,153,255,1,4,155,112,1,5,205,85,1,6,228,171,1,7,224,232,2,1,169,255,2,3,221,0,2,4,153,0,2,7,194,135,2,8,237,183,3,1,255,255,3,2,170,0,3,8,255,255,3,9,170,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,255,255,5,2,255,0,5,8,255,255,5,9,255,0,6,1,169,255,6,2,255,102,6,8,169,255,6,9,255,0,7,2,181,48,7,9,170,0]},{\"width\":8,\"chr\":\"D\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,1,255,255,2,2,255,0,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,8,255,255,3,9,255,0,4,1,203,255,4,2,255,68,4,8,203,255,4,9,255,0,5,2,248,227,5,3,168,207,5,7,221,255,5,9,204,0,6,3,237,128,6,4,223,214,6,5,205,233,6,6,155,196,6,8,221,0,7,5,187,0,7,6,187,0]},{\"width\":6,\"chr\":\"E\",\"bonus\":180,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,0,3,8,255,255,3,9,255,0,4,1,153,255,4,2,255,0,4,6,255,0,4,8,221,255,4,9,255,0,5,2,153,0,5,9,221,0]},{\"width\":6,\"chr\":\"F\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,0,4,2,255,0,4,6,255,0]},{\"width\":9,\"chr\":\"G\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,4,169,255,0,5,187,255,1,2,203,255,1,3,153,255,1,5,193,90,1,6,224,155,1,7,237,238,2,1,169,255,2,3,204,0,2,4,153,0,2,7,175,124,2,8,246,194,3,1,255,255,3,2,170,0,3,8,255,255,3,9,187,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,255,255,5,2,255,0,5,8,237,255,5,9,255,0,6,1,169,255,6,2,255,85,6,5,255,255,6,7,153,255,6,8,169,255,6,9,238,0,7,2,175,25,7,5,153,255,7,6,255,221,7,7,225,251,7,8,234,222,7,9,170,0,8,6,153,0,8,7,221,0,8,8,221,0,8,9,204,0]},{\"width\":8,\"chr\":\"H\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,5,255,255,2,6,255,0,3,5,255,255,3,6,255,0,4,5,255,255,4,6,255,0,5,5,255,255,5,6,255,34,6,1,203,255,6,2,225,251,6,3,225,251,6,4,225,251,6,5,225,251,6,6,255,221,6,7,225,251,6,8,210,247,7,2,204,0,7,3,221,0,7,4,221,0,7,5,221,0,7,6,221,0,7,7,221,0,7,8,221,0,7,9,204,0]},{\"width\":4,\"chr\":\"I\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,1,191,255,0,8,191,255,1,1,255,255,1,2,255,255,1,3,255,255,1,4,255,255,1,5,255,255,1,6,255,255,1,7,255,255,1,8,255,255,1,9,191,0,2,1,191,255,2,2,255,0,2,3,255,0,2,4,255,0,2,5,255,0,2,6,255,0,2,7,255,0,2,8,255,191,2,9,255,0,3,2,192,0,3,9,191,0]},{\"width\":6,\"chr\":\"J\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,6,153,255,0,7,153,255,1,7,194,135,1,8,234,222,2,1,221,255,2,8,255,255,2,9,204,0,3,1,255,255,3,2,226,39,3,8,203,255,3,9,255,0,4,1,203,255,4,2,255,221,4,3,225,251,4,4,225,251,4,5,225,251,4,6,225,251,4,7,166,235,4,9,204,0,5,2,204,0,5,3,221,0,5,4,221,0,5,5,221,0,5,6,221,0,5,7,221,0,5,8,153,0]},{\"width\":7,\"chr\":\"K\",\"bonus\":155,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,255,255,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,4,255,255,2,5,255,102,3,3,221,255,3,5,254,171,3,6,224,232,4,1,203,255,4,2,153,255,4,4,221,0,4,6,193,90,4,7,251,242,4,8,173,226,5,2,204,0,5,3,153,0,5,8,247,141,5,9,153,0]},{\"width\":6,\"chr\":\"L\",\"bonus\":115,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,255,255,1,9,204,0,2,8,255,255,2,9,255,0,3,8,255,255,3,9,255,0,4,8,255,255,4,9,255,0,5,9,255,0]},{\"width\":9,\"chr\":\"M\",\"bonus\":240,\"secondary\":false,\"pixels\":[0,1,245,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,0,8,255,255,1,2,251,173,1,3,255,225,1,4,255,85,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,0,1,9,255,0,2,3,191,83,2,4,249,212,2,5,212,229,3,5,226,119,3,6,249,237,3,7,165,227,4,6,241,245,4,7,245,155,4,8,155,32,5,4,207,255,5,5,191,254,5,7,232,0,6,2,169,255,6,3,223,255,6,5,207,0,6,6,190,0,7,1,245,255,7,2,255,255,7,3,255,255,7,4,255,255,7,5,255,255,7,6,255,255,7,7,255,255,7,8,255,255,8,2,245,0,8,3,255,0,8,4,255,0,8,5,255,0,8,6,255,0,8,7,255,0,8,8,255,0,8,9,255,0]},{\"width\":8,\"chr\":\"N\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,2,255,255,1,3,235,111,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,3,255,221,2,4,163,160,3,4,246,194,3,5,214,223,4,5,214,122,4,6,246,229,5,6,163,160,5,7,255,255,6,1,203,255,6,2,225,251,6,3,225,251,6,4,225,251,6,5,225,251,6,6,225,251,6,7,235,240,6,8,254,204,7,2,204,0,7,3,221,0,7,4,221,0,7,5,221,0,7,6,221,0,7,7,221,0,7,8,221,0,7,9,204,0]},{\"width\":10,\"chr\":\"O\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,4,187,255,0,5,169,255,1,2,203,255,1,3,153,255,1,5,205,85,1,6,226,192,1,7,224,232,2,1,153,255,2,3,204,0,2,4,153,0,2,7,209,145,2,8,234,167,3,1,255,255,3,2,153,0,3,8,255,255,3,9,153,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,255,255,5,2,255,0,5,8,255,255,5,9,255,0,6,1,153,255,6,2,255,102,6,8,153,255,6,9,255,0,7,2,234,222,7,3,194,201,7,6,169,255,7,7,203,255,7,9,153,0,8,3,225,116,8,4,228,209,8,5,192,225,8,7,170,0,8,8,204,0,9,5,187,0,9,6,170,0]},{\"width\":7,\"chr\":\"P\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,0,4,1,187,255,4,2,255,136,4,5,187,255,4,6,255,0,5,2,224,155,5,3,239,236,5,6,187,0,6,4,221,0]},{\"width\":9,\"chr\":\"Q\",\"bonus\":185,\"secondary\":false,\"pixels\":[0,4,187,255,0,5,187,255,1,2,221,255,1,4,155,112,1,5,205,85,1,6,228,171,1,7,235,240,2,1,187,255,2,3,221,0,2,7,187,116,2,8,243,178,3,1,255,255,3,2,187,0,3,8,255,255,3,9,170,0,4,1,255,255,4,2,255,0,4,8,255,255,4,9,255,0,5,1,237,255,5,2,255,0,5,8,237,255,5,9,255,0,6,2,251,207,6,7,255,255,6,9,238,0,7,3,255,255,7,4,203,255,7,5,221,255,7,6,255,255,7,7,155,196,7,8,254,204,8,4,255,17,8,5,207,21,8,6,221,0,8,7,255,0,8,9,204,0]},{\"width\":7,\"chr\":\"R\",\"bonus\":180,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,1,255,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,255,255,1,6,226,39,1,7,226,39,1,8,226,39,1,9,204,0,2,1,255,255,2,2,255,0,2,5,255,255,2,6,255,0,3,1,255,255,3,2,255,0,3,5,255,255,3,6,255,187,4,2,254,239,4,3,203,255,4,4,255,255,4,6,255,68,4,7,250,243,4,8,181,239,5,3,239,18,5,4,204,0,5,5,255,0,5,8,245,107,5,9,170,0]},{\"width\":6,\"chr\":\"S\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,2,153,255,0,3,169,255,1,1,203,255,1,3,187,116,1,4,244,231,1,8,243,249,2,1,255,255,2,2,204,0,2,4,198,219,2,5,232,93,2,8,255,255,2,9,238,0,3,1,255,255,3,2,255,0,3,5,255,255,3,8,255,255,3,9,255,0,4,1,169,255,4,2,255,68,4,5,160,217,4,6,255,221,4,7,237,255,4,9,255,0,5,2,170,0,5,7,223,19,5,8,238,0]},{\"width\":8,\"chr\":\"T\",\"bonus\":125,\"secondary\":false,\"pixels\":[0,1,255,255,1,1,255,255,1,2,255,0,2,1,255,255,2,2,255,34,3,1,255,255,3,2,255,221,3,3,225,251,3,4,225,251,3,5,225,251,3,6,225,251,3,7,225,251,3,8,210,247,4,1,255,255,4,2,255,0,4,3,221,0,4,4,221,0,4,5,221,0,4,6,221,0,4,7,221,0,4,8,221,0,4,9,204,0,5,1,255,255,5,2,255,0,6,2,255,0]},{\"width\":8,\"chr\":\"U\",\"bonus\":165,\"secondary\":false,\"pixels\":[0,1,203,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,187,255,1,2,211,41,1,3,226,39,1,4,226,39,1,5,226,39,1,6,230,75,1,7,232,187,1,8,184,189,2,8,255,255,3,8,255,255,3,9,255,0,4,8,221,255,4,9,255,0,5,1,203,255,5,2,221,255,5,3,221,255,5,4,221,255,5,5,221,255,5,6,255,255,5,7,237,255,5,9,221,0,6,2,211,41,6,3,226,39,6,4,226,39,6,5,226,39,6,6,223,19,6,7,255,0,6,8,238,0]},{\"width\":7,\"chr\":\"V\",\"bonus\":125,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,187,255,1,2,255,68,1,3,228,171,1,4,255,255,1,5,153,255,2,4,153,0,2,5,255,85,2,6,228,209,2,7,242,251,3,6,164,185,3,7,255,255,3,8,251,207,4,4,203,255,4,5,237,255,4,8,255,0,4,9,204,0,5,1,169,255,5,2,255,255,5,3,153,255,5,5,204,0,5,6,238,0,6,2,170,0,6,3,255,0,6,4,153,0]},{\"width\":10,\"chr\":\"W\",\"bonus\":245,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,221,255,1,2,255,17,1,3,237,128,1,4,223,214,1,5,255,255,1,6,203,255,2,5,191,23,2,6,255,136,2,7,255,255,2,8,255,255,3,3,153,255,3,4,237,255,3,5,221,255,3,7,168,103,3,8,255,0,3,9,255,0,4,1,255,255,4,2,255,255,4,3,187,209,4,4,153,0,4,5,238,0,4,6,221,0,5,2,255,102,5,3,254,171,5,4,248,244,5,5,203,255,6,4,170,0,6,5,241,54,6,6,231,150,6,7,255,255,6,8,255,255,7,4,153,255,7,5,237,255,7,6,241,252,7,7,207,188,7,8,255,85,7,9,255,0,8,1,237,255,8,2,237,255,8,3,153,255,8,4,153,171,8,5,153,0,8,6,238,0,8,7,238,0,8,8,153,0,9,2,238,0,9,3,238,0,9,4,153,0]},{\"width\":7,\"chr\":\"X\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,8,169,255,1,1,187,255,1,2,220,236,1,7,237,255,1,9,170,0,2,2,205,85,2,3,248,227,2,4,166,235,2,5,255,255,2,6,153,255,2,8,238,0,3,3,155,196,3,4,255,255,3,5,248,244,3,6,255,51,3,7,153,0,4,2,237,255,4,5,255,51,4,6,251,207,4,7,186,233,5,1,203,255,5,3,238,0,5,7,225,116,5,8,255,255,6,2,204,0,6,9,255,0]},{\"width\":7,\"chr\":\"Y\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,1,169,255,1,2,249,243,2,3,248,157,2,4,255,255,3,4,241,234,3,5,254,204,3,6,232,243,3,7,225,251,3,8,210,247,4,3,255,255,4,5,221,0,4,6,204,0,4,7,221,0,4,8,221,0,4,9,204,0,5,1,237,255,5,4,255,0,6,2,238,0]},{\"width\":7,\"chr\":\"Z\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,8,187,255,1,1,255,255,1,7,221,255,1,8,255,255,1,9,187,0,2,1,255,255,2,2,255,0,2,5,203,255,2,8,255,255,2,9,255,0,3,1,255,255,3,2,255,0,3,4,203,255,3,6,204,0,3,8,255,255,3,9,255,0,4,1,255,255,4,2,255,221,4,5,204,0,4,8,255,255,4,9,255,0,5,1,187,255,5,2,255,34,5,3,221,0,5,8,153,255,5,9,255,0,6,2,187,0,6,9,153,0]},{\"width\":7,\"chr\":\"0\",\"bonus\":170,\"secondary\":false,\"pixels\":[0,2,153,255,0,3,221,255,0,4,255,255,0,5,255,255,0,6,237,255,0,7,169,255,1,1,187,255,1,3,153,0,1,4,221,0,1,5,255,0,1,6,255,0,1,7,243,71,1,8,237,219,2,1,187,255,2,2,187,0,2,8,205,233,2,9,211,41,3,1,221,255,3,2,205,85,3,8,203,255,3,9,187,0,4,2,243,178,4,3,255,255,4,4,187,255,4,5,187,255,4,6,237,255,4,7,169,255,4,9,204,0,5,3,170,0,5,4,255,0,5,5,187,0,5,6,187,0,5,7,238,0,5,8,170,0]},{\"width\":7,\"chr\":\"1\",\"bonus\":100,\"secondary\":false,\"pixels\":[1,8,187,255,2,1,203,255,2,2,224,232,2,3,219,218,2,4,187,255,2,5,187,255,2,6,187,255,2,7,187,255,2,8,237,255,2,9,187,0,3,2,218,80,3,3,218,80,3,4,205,85,3,5,205,85,3,6,205,85,3,7,205,85,3,8,241,215,3,9,238,0,4,8,168,207,4,9,204,0]},{\"width\":7,\"chr\":\"2\",\"bonus\":105,\"secondary\":false,\"pixels\":[1,8,255,255,2,1,187,255,2,6,153,255,2,8,223,214,2,9,255,0,3,1,203,255,3,2,187,0,3,5,153,255,3,7,153,0,3,8,219,218,3,9,187,0,4,1,187,255,4,2,234,167,4,4,203,255,4,6,153,0,4,8,187,255,4,9,187,0,5,2,214,122,5,3,200,152,5,5,204,0,5,9,187,0]},{\"width\":7,\"chr\":\"3\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,8,203,255,1,1,187,255,1,8,191,250,1,9,204,0,2,1,187,255,2,2,196,45,2,4,187,255,2,5,174,150,2,8,203,255,2,9,187,0,3,2,246,229,3,3,210,247,3,5,241,215,3,6,173,175,3,7,169,255,3,9,204,0,4,3,227,57,4,4,204,0,4,6,228,133,4,7,174,150,4,8,170,0]},{\"width\":7,\"chr\":\"4\",\"bonus\":150,\"secondary\":false,\"pixels\":[0,6,237,255,1,4,187,255,1,6,219,218,1,7,238,0,2,3,169,255,2,5,187,0,2,6,219,218,2,7,187,0,3,1,187,255,3,2,153,255,3,3,155,112,3,4,193,90,3,6,203,255,3,7,205,85,4,1,187,255,4,2,237,201,4,3,228,209,4,4,205,233,4,5,205,233,4,6,242,251,4,7,241,198,4,8,205,233,5,2,187,0,5,3,187,0,5,4,187,0,5,5,187,0,5,6,224,155,5,7,238,0,5,8,187,0,5,9,187,0]},{\"width\":7,\"chr\":\"5\",\"bonus\":130,\"secondary\":false,\"pixels\":[1,1,237,255,1,2,187,255,1,3,187,255,1,4,187,255,1,8,207,251,2,1,187,255,2,2,238,0,2,3,187,0,2,4,237,201,2,5,187,0,2,8,187,255,2,9,204,0,3,1,187,255,3,2,187,0,3,4,203,255,3,5,191,23,3,8,203,255,3,9,187,0,4,2,187,0,4,5,251,242,4,6,191,250,4,7,221,255,4,9,204,0,5,6,243,71,5,7,191,23,5,8,221,0]},{\"width\":7,\"chr\":\"6\",\"bonus\":150,\"secondary\":false,\"pixels\":[0,3,169,255,0,4,255,255,0,5,255,255,0,6,237,255,0,7,153,255,1,2,187,255,1,4,209,145,1,5,255,68,1,6,255,0,1,7,246,123,1,8,228,209,2,1,203,255,2,3,187,0,2,4,200,238,2,8,219,218,2,9,187,0,3,1,187,255,3,2,204,0,3,4,203,255,3,5,205,85,3,8,187,255,3,9,187,0,4,2,187,0,4,5,248,227,4,6,255,255,4,7,187,255,4,9,187,0,5,6,221,0,5,7,255,0,5,8,187,0]},{\"width\":7,\"chr\":\"7\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,1,187,255,1,1,187,255,1,2,187,0,1,8,203,255,2,1,187,255,2,2,187,0,2,6,237,255,2,7,153,255,2,9,204,0,3,1,187,255,3,2,205,85,3,3,153,255,3,4,221,255,3,7,238,0,3,8,153,0,4,1,255,255,4,2,237,201,4,4,153,0,4,5,221,0,5,2,255,0,5,3,187,0]},{\"width\":7,\"chr\":\"8\",\"bonus\":165,\"secondary\":false,\"pixels\":[1,2,237,255,1,3,221,255,1,6,203,255,1,7,228,247,2,1,203,255,2,3,241,54,2,4,248,209,2,5,186,233,2,7,207,21,2,8,250,226,3,1,187,255,3,2,204,0,3,4,186,233,3,5,221,98,3,6,170,0,3,8,191,250,3,9,221,0,4,1,221,255,4,2,209,104,4,4,169,255,4,5,237,219,4,8,187,255,4,9,187,0,5,2,243,178,5,3,187,209,5,5,204,128,5,6,251,242,5,7,240,253,5,9,187,0,6,3,170,0,6,4,153,0,6,7,238,0,6,8,238,0]},{\"width\":7,\"chr\":\"9\",\"bonus\":160,\"secondary\":false,\"pixels\":[1,2,221,255,1,3,191,250,1,4,242,251,1,8,153,255,2,1,203,255,2,3,221,0,2,4,191,23,2,5,253,223,2,8,191,250,2,9,153,0,3,1,187,255,3,2,204,0,3,5,191,250,3,6,221,0,3,8,203,255,3,9,187,0,4,1,187,255,4,2,218,139,4,6,200,65,4,7,169,255,4,9,204,0,5,2,228,171,5,3,245,247,5,4,255,255,5,5,255,255,5,6,223,214,5,8,170,0,6,3,153,0,6,4,238,0,6,5,255,0,6,6,255,0,6,7,187,0]},{\"width\":8,\"chr\":\"%\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,3,255,255,0,8,255,255,1,2,255,255,1,4,255,255,1,7,255,255,1,9,255,0,2,3,255,255,2,5,255,41,2,6,255,255,2,8,255,0,3,4,255,41,3,5,255,255,3,7,255,0,4,4,255,255,4,6,255,92,4,7,255,255,5,3,255,255,5,5,255,0,5,6,255,255,5,8,255,255,6,2,255,255,6,4,255,0,6,7,255,255,6,9,255,0,7,3,255,0,7,8,255,0]},{\"width\":4,\"chr\":\"/\",\"bonus\":80,\"secondary\":false,\"pixels\":[0,7,153,255,0,8,237,255,0,9,221,255,1,4,187,255,1,5,237,255,1,6,169,255,1,8,153,0,1,9,238,0,1,10,221,0,2,1,221,255,2,2,221,255,2,5,187,0,2,6,238,0,2,7,170,0,3,2,221,0,3,3,221,0]},{\"width\":7,\"chr\":\"+\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,5,221,255,1,5,255,255,1,6,221,0,2,5,255,255,2,6,255,34,3,2,153,255,3,3,223,253,3,4,225,251,3,5,255,255,3,6,255,221,3,7,225,251,3,8,210,247,4,3,153,0,4,4,221,0,4,5,255,255,4,6,255,0,4,7,221,0,4,8,221,0,4,9,204,0,5,5,255,255,5,6,255,0,6,6,255,0]},{\"width\":5,\"chr\":\"?\",\"bonus\":75,\"secondary\":false,\"pixels\":[0,1,169,255,1,1,255,255,1,2,170,0,1,6,221,255,1,8,255,255,2,1,255,255,2,2,255,0,2,5,169,255,2,7,221,0,2,9,255,0,3,2,255,255,3,3,221,255,3,6,170,0,4,3,255,17,4,4,221,0]},{\"width\":2,\"chr\":\"!\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,1,169,255,0,2,187,255,0,3,187,255,0,4,187,255,0,5,187,255,0,6,169,255,0,8,255,255,1,2,181,48,1,3,196,45,1,4,196,45,1,5,196,45,1,6,196,45,1,7,170,0,1,9,255,0]},{\"width\":8,\"chr\":\"@\",\"bonus\":230,\"secondary\":false,\"pixels\":[0,4,255,255,0,5,255,255,0,6,221,255,0,7,255,255,0,8,187,255,1,3,221,255,1,5,255,0,1,6,255,34,1,7,221,0,1,8,255,68,1,9,250,243,2,2,221,255,2,4,232,93,2,5,255,255,2,6,237,255,2,7,255,255,2,10,248,157,3,2,255,255,3,3,221,0,3,4,255,255,3,6,255,0,3,7,241,54,3,8,254,204,3,10,214,223,3,11,153,0,4,2,237,255,4,3,255,0,4,4,255,255,4,5,255,0,4,8,255,255,4,9,204,0,4,11,187,0,5,3,253,240,5,4,255,255,5,5,255,221,5,6,221,255,5,7,221,255,5,8,237,255,5,9,255,0,6,4,240,36,6,5,255,34,6,6,226,39,6,7,226,39,6,8,250,226,6,9,238,0,7,9,221,0]},{\"width\":8,\"chr\":\"#\",\"bonus\":200,\"secondary\":false,\"pixels\":[0,6,255,255,1,3,255,255,1,6,255,255,1,7,254,171,1,8,237,255,2,1,169,255,2,2,237,255,2,3,255,255,2,4,255,221,2,5,175,247,2,6,255,255,2,7,255,85,2,8,170,0,2,9,238,0,3,2,170,0,3,3,255,255,3,4,255,0,3,5,221,0,3,6,255,255,3,7,255,0,4,3,255,255,4,4,255,153,4,5,203,255,4,6,255,255,4,7,254,239,4,8,187,255,5,1,255,255,5,2,187,255,5,3,255,255,5,4,255,85,5,5,159,27,5,6,255,255,5,7,255,0,5,8,238,0,5,9,187,0,6,2,255,0,6,3,255,255,6,4,255,0,6,7,255,0,7,4,255,0]},{\"width\":6,\"chr\":\"$\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,2,153,255,0,3,169,255,1,1,203,255,1,3,187,116,1,4,244,231,1,8,243,249,2,0,203,255,2,1,237,255,2,2,204,0,2,4,176,197,2,5,237,128,2,8,240,253,2,9,251,207,3,1,251,242,3,2,239,18,3,5,247,245,3,6,164,132,3,8,255,255,3,9,240,36,3,10,204,0,4,2,240,36,4,6,249,174,4,7,198,219,4,9,255,0,5,7,170,0,5,8,170,0]},{\"width\":6,\"chr\":\"^\",\"bonus\":75,\"secondary\":false,\"pixels\":[0,4,153,255,0,5,237,255,1,2,203,255,1,3,221,255,1,5,153,0,1,6,238,0,2,1,221,255,2,2,230,245,2,3,218,80,2,4,221,0,3,2,227,57,3,3,246,194,3,4,230,245,4,4,187,0,4,5,239,145]},{\"width\":6,\"chr\":\"~\",\"bonus\":35,\"secondary\":false,\"pixels\":[1,5,255,255,2,5,221,255,2,6,255,51,3,6,250,226,4,5,203,255,4,7,221,0,5,6,204,0]},{\"width\":7,\"chr\":\"&\",\"bonus\":175,\"secondary\":false,\"pixels\":[0,6,187,255,1,2,237,255,1,3,255,255,1,4,191,250,1,5,187,255,1,7,224,155,1,8,223,214,2,1,255,255,2,3,238,0,2,4,255,255,2,5,191,23,2,6,187,0,2,8,255,255,2,9,187,0,3,1,255,255,3,2,255,0,3,4,255,255,3,5,255,0,3,8,255,255,3,9,255,0,4,2,255,0,4,4,255,255,4,5,255,34,4,8,187,255,4,9,255,0,5,3,203,255,5,4,255,255,5,5,255,221,5,6,196,243,5,7,155,196,5,9,187,0,6,4,234,167,6,5,255,0,6,6,221,0,6,7,187,0]},{\"width\":6,\"chr\":\"*\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,2,169,255,1,2,169,255,1,3,237,219,1,4,255,255,2,1,203,255,2,2,240,253,2,3,255,255,2,4,228,133,2,5,255,0,3,2,237,183,3,3,245,107,3,4,255,153,4,3,170,0,4,5,153,0]},{\"width\":4,\"chr\":\"(\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,3,173,255,0,4,239,255,0,5,253,255,0,6,229,255,0,7,171,255,1,1,193,255,1,2,203,255,1,4,188,64,1,5,241,25,1,6,252,46,1,7,240,112,1,8,238,218,1,9,210,232,2,0,209,255,2,2,194,2,2,3,204,0,2,9,223,111,2,10,245,224,3,1,210,0,3,11,216,0]},{\"width\":4,\"chr\":\")\",\"bonus\":75,\"secondary\":false,\"pixels\":[1,0,211,255,1,10,215,255,2,1,244,203,2,2,222,234,2,8,203,255,2,9,191,255,2,11,216,0,3,2,213,94,3,3,238,186,3,4,246,248,3,5,253,255,3,6,231,253,3,7,186,234,3,9,203,1,3,10,191,0]},{\"width\":7,\"chr\":\"_\",\"bonus\":60,\"secondary\":false,\"pixels\":[0,9,153,255,1,9,255,255,1,10,153,0,2,9,255,255,2,10,255,0,3,9,255,255,3,10,255,0,4,9,255,255,4,10,255,0,5,9,255,255,5,10,255,0,6,10,255,0]},{\"width\":4,\"chr\":\"-\",\"bonus\":30,\"secondary\":true,\"pixels\":[0,5,255,255,1,5,255,255,1,6,255,0,2,5,255,255,2,6,255,0,3,6,255,0]},{\"width\":8,\"chr\":\"=\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,4,255,255,0,6,255,255,1,4,255,255,1,5,255,0,1,6,255,255,1,7,255,0,2,4,255,255,2,5,255,0,2,6,255,255,2,7,255,0,3,4,255,255,3,5,255,0,3,6,255,255,3,7,255,0,4,4,255,255,4,5,255,0,4,6,255,255,4,7,255,0,5,5,255,0,5,7,255,0]},{\"width\":3,\"chr\":\"[\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,0,203,255,0,1,221,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,203,255,1,0,237,255,1,1,211,41,1,2,226,39,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,252,241,1,9,204,0,2,1,238,0,2,9,238,0]},{\"width\":3,\"chr\":\"]\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,0,237,255,0,8,237,255,1,0,203,255,1,1,253,223,1,2,225,251,1,3,225,251,1,4,225,251,1,5,225,251,1,6,225,251,1,7,225,251,1,8,210,247,1,9,238,0,2,1,204,0,2,2,221,0,2,3,221,0,2,4,221,0,2,5,221,0,2,6,221,0,2,7,221,0,2,8,221,0,2,9,204,0]},{\"width\":5,\"chr\":\"{\",\"bonus\":90,\"secondary\":false,\"pixels\":[0,5,153,255,1,2,169,255,1,3,221,255,1,4,221,255,1,5,203,255,1,6,255,255,1,7,221,255,1,8,169,255,2,1,237,255,2,3,181,48,2,4,223,19,2,5,221,0,2,6,207,21,2,7,255,34,2,8,232,93,2,9,249,243,3,2,238,0,3,10,238,0]},{\"width\":5,\"chr\":\"}\",\"bonus\":90,\"secondary\":false,\"pixels\":[1,1,237,255,1,9,237,255,2,2,249,174,2,3,232,243,2,4,225,251,2,5,207,251,2,6,255,255,2,7,223,253,2,8,181,239,2,10,238,0,3,3,170,0,3,4,221,0,3,5,241,162,3,6,204,0,3,7,255,0,3,8,221,0,3,9,170,0,4,6,153,0]},{\"width\":3,\"chr\":\":\",\"bonus\":20,\"secondary\":true,\"pixels\":[1,3,255,255,1,7,255,255,2,4,255,0,2,8,255,0]},{\"width\":3,\"chr\":\";\",\"bonus\":40,\"secondary\":true,\"pixels\":[0,9,201,255,1,3,255,255,1,7,241,255,1,8,255,255,1,10,201,0,2,4,255,0,2,8,241,0,2,9,255,0]},{\"width\":3,\"chr\":\"\\\"\",\"bonus\":30,\"secondary\":true,\"pixels\":[0,1,255,255,0,2,255,255,1,2,255,0,1,3,255,0,2,1,255,255,2,2,255,255]},{\"width\":2,\"chr\":\"'\",\"bonus\":20,\"secondary\":true,\"pixels\":[0,1,255,255,0,2,177,255,1,2,255,30,1,3,177,0]},{\"width\":7,\"chr\":\"<\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,5,203,255,1,5,255,255,1,6,228,133,2,4,237,255,2,6,254,239,3,4,169,255,3,5,238,0,3,6,175,247,3,7,243,89,4,3,221,255,4,5,170,0,4,7,244,231,5,4,221,0,5,8,221,0]},{\"width\":7,\"chr\":\">\",\"bonus\":80,\"secondary\":false,\"pixels\":[0,3,203,255,0,7,203,255,1,4,228,133,1,7,187,255,1,8,204,0,2,4,247,245,2,6,255,255,2,8,187,0,3,4,175,247,3,5,248,157,3,6,203,255,3,7,255,0,4,5,255,255,4,6,173,75,4,7,204,0,5,6,255,0]},{\"width\":5,\"chr\":\"\\\\\",\"bonus\":70,\"secondary\":false,\"pixels\":[1,1,153,255,1,2,255,255,1,3,203,255,2,2,153,0,2,3,255,51,2,4,231,150,2,5,255,255,2,6,203,255,3,6,255,34,3,7,231,150,3,8,255,255,3,9,207,251,4,9,255,0,4,10,204,0]},{\"width\":2,\"chr\":\".\",\"bonus\":10,\"secondary\":true,\"pixels\":[0,8,255,255,1,9,255,0]},{\"width\":3,\"chr\":\",\",\"bonus\":30,\"secondary\":true,\"pixels\":[0,9,205,255,1,7,205,255,1,8,255,255,1,10,205,0,2,8,205,0,2,9,255,0]},{\"width\":3,\"chr\":\"|\",\"bonus\":100,\"secondary\":false,\"pixels\":[0,1,221,255,0,2,221,255,0,3,221,255,0,4,221,255,0,5,221,255,0,6,221,255,0,7,221,255,0,8,221,255,0,9,221,255,0,10,203,255,1,2,226,39,1,3,226,39,1,4,226,39,1,5,226,39,1,6,226,39,1,7,226,39,1,8,226,39,1,9,226,39,1,10,226,39,1,11,204,0]}],\"width\":10,\"spacewidth\":3,\"shadow\":true,\"height\":12,\"basey\":8}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ocr/fonts/aa_8px_new.fontmeta.json\n");

/***/ }),

/***/ "../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json":
/*!*****************************************************************************!*\
  !*** ../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\"chars\":[{\"width\":7,\"chr\":\"0\",\"bonus\":120,\"secondary\":false,\"pixels\":[0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,1,1,255,255,1,3,255,0,1,4,255,0,1,5,255,0,1,6,255,255,2,0,255,255,2,2,255,0,2,7,255,255,3,1,255,255,3,6,255,255,3,8,255,0,4,2,255,255,4,3,255,255,4,4,255,255,4,5,255,255,4,7,255,0,5,3,255,0,5,4,255,0,5,5,255,0,5,6,255,0]},{\"width\":4,\"chr\":\"1\",\"bonus\":95,\"secondary\":false,\"pixels\":[0,1,255,255,0,7,255,255,1,0,255,255,1,1,255,255,1,2,255,255,1,3,255,255,1,4,255,255,1,5,255,255,1,6,255,255,1,7,255,255,1,8,255,0,2,1,255,0,2,2,255,0,2,3,255,0,2,4,255,0,2,5,255,0,2,6,255,0,2,7,255,255,2,8,255,0]},{\"width\":7,\"chr\":\"2\",\"bonus\":140,\"secondary\":false,\"pixels\":[0,1,255,255,0,6,255,255,0,7,255,255,1,0,255,255,1,2,255,0,1,5,255,255,1,7,255,255,1,8,255,0,2,0,255,255,2,1,255,0,2,4,255,255,2,6,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,3,255,255,3,5,255,0,3,7,255,255,3,8,255,0,4,1,255,255,4,2,255,255,4,4,255,0,4,7,255,255,4,8,255,0,5,2,255,0,5,3,255,0,5,8,255,0]},{\"width\":6,\"chr\":\"3\",\"bonus\":115,\"secondary\":false,\"pixels\":[0,1,255,255,0,6,255,255,1,0,255,255,1,2,255,0,1,3,255,255,1,7,255,255,2,0,255,255,2,1,255,0,2,3,255,255,2,4,255,0,2,7,255,255,2,8,255,0,3,1,255,255,3,2,255,255,3,4,255,255,3,5,255,255,3,6,255,255,3,8,255,0,4,2,255,0,4,3,255,0,4,5,255,0,4,6,255,0,4,7,255,0]},{\"width\":5,\"chr\":\"4\",\"bonus\":110,\"secondary\":false,\"pixels\":[0,0,255,255,0,1,255,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,1,1,255,0,1,2,255,0,1,3,255,0,1,4,255,0,1,5,255,255,1,6,255,0,2,3,255,255,2,4,255,255,2,5,255,255,2,6,255,255,2,7,255,255,3,4,255,0,3,5,255,255,3,6,255,0,3,7,255,0,3,8,255,0]},{\"width\":6,\"chr\":\"5\",\"bonus\":135,\"secondary\":false,\"pixels\":[0,0,255,255,0,1,255,255,0,2,255,255,0,3,255,255,0,6,255,255,1,0,255,255,1,1,255,0,1,2,255,0,1,3,255,255,1,4,255,0,1,7,255,255,2,0,255,255,2,1,255,0,2,3,255,255,2,4,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,4,255,255,3,5,255,255,3,6,255,255,3,8,255,0,4,1,255,0,4,5,255,0,4,6,255,0,4,7,255,0]},{\"width\":7,\"chr\":\"6\",\"bonus\":160,\"secondary\":false,\"pixels\":[0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,1,1,255,255,1,3,255,0,1,4,255,255,1,5,255,0,1,6,255,0,1,7,255,255,2,0,255,255,2,2,255,0,2,3,255,255,2,5,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,3,255,255,3,4,255,0,3,7,255,255,3,8,255,0,4,1,255,255,4,4,255,255,4,5,255,255,4,6,255,255,4,8,255,0,5,2,255,0,5,5,255,0,5,6,255,0,5,7,255,0]},{\"width\":6,\"chr\":\"7\",\"bonus\":105,\"secondary\":false,\"pixels\":[0,0,255,255,0,6,255,255,0,7,255,255,1,0,255,255,1,1,255,0,1,4,255,255,1,5,255,255,1,7,255,0,1,8,255,0,2,0,255,255,2,1,255,0,2,2,255,255,2,3,255,255,2,5,255,0,2,6,255,0,3,0,255,255,3,1,255,255,3,3,255,0,3,4,255,0,4,1,255,0,4,2,255,0]},{\"width\":7,\"chr\":\"8\",\"bonus\":170,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,0,4,255,255,0,5,255,255,0,6,255,255,1,0,255,255,1,2,255,0,1,3,255,255,1,5,255,0,1,6,255,0,1,7,255,255,2,0,255,255,2,1,255,0,2,3,255,255,2,4,255,0,2,7,255,255,2,8,255,0,3,0,255,255,3,1,255,0,3,3,255,255,3,4,255,0,3,7,255,255,3,8,255,0,4,1,255,255,4,2,255,255,4,4,255,255,4,5,255,255,4,6,255,255,4,8,255,0,5,2,255,0,5,3,255,0,5,5,255,0,5,6,255,0,5,7,255,0]},{\"width\":7,\"chr\":\"9\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,1,0,255,255,1,2,255,0,1,3,255,255,2,0,255,255,2,1,255,0,2,4,255,255,3,0,255,255,3,1,255,0,3,4,255,255,3,5,255,0,4,1,255,255,4,2,255,255,4,3,255,255,4,4,255,255,4,5,255,255,4,6,255,255,4,7,255,255,5,2,255,0,5,3,255,0,5,4,255,0,5,5,255,0,5,6,255,0,5,7,255,0,5,8,255,0]},{\"width\":7,\"chr\":\"m\",\"bonus\":130,\"secondary\":false,\"pixels\":[0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,1,3,255,255,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,0,2,4,255,255,2,5,255,255,2,6,255,255,2,7,255,255,3,3,255,255,3,5,255,0,3,6,255,0,3,7,255,0,3,8,255,0,4,4,255,255,4,5,255,255,4,6,255,255,4,7,255,255,5,5,255,0,5,6,255,0,5,7,255,0,5,8,255,0]},{\"width\":3,\"chr\":\"(\",\"bonus\":85,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,0,8,255,25,1,0,255,255,1,2,255,0,1,3,255,0,1,4,255,0,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,255,2,1,255,0]},{\"width\":2,\"chr\":\")\",\"bonus\":70,\"secondary\":false,\"pixels\":[0,1,255,255,0,2,255,255,0,3,255,255,0,4,255,255,0,5,255,255,0,6,255,255,0,7,255,255,1,2,255,0,1,3,255,0,1,4,255,0,1,5,255,0,1,6,255,0,1,7,255,0,1,8,255,0]}],\"width\":7,\"spacewidth\":4,\"shadow\":true,\"height\":9,\"basey\":7}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4uL25vZGVfbW9kdWxlcy9AYWx0MS9vY3IvZm9udHMvcGl4ZWxfZGlnaXRzXzhweF9zaGFkb3cuZm9udG1ldGEuanNvbj8yNTNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixVQUFVLHlVQUF5VSxFQUFFLGdSQUFnUixFQUFFLG1YQUFtWCxFQUFFLDZUQUE2VCxFQUFFLG1UQUFtVCxFQUFFLHlXQUF5VyxFQUFFLGlhQUFpYSxFQUFFLHFTQUFxUyxFQUFFLHViQUF1YixFQUFFLCtWQUErVixFQUFFLDZWQUE2VixFQUFFLHlQQUF5UCxFQUFFLHNOQUFzTiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGFsdDEvb2NyL2ZvbnRzL3BpeGVsX2RpZ2l0c184cHhfc2hhZG93LmZvbnRtZXRhLmpzb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcImNoYXJzXCI6W3tcIndpZHRoXCI6NyxcImNoclwiOlwiMFwiLFwiYm9udXNcIjoxMjAsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDIsMjU1LDI1NSwwLDMsMjU1LDI1NSwwLDQsMjU1LDI1NSwwLDUsMjU1LDI1NSwxLDEsMjU1LDI1NSwxLDMsMjU1LDAsMSw0LDI1NSwwLDEsNSwyNTUsMCwxLDYsMjU1LDI1NSwyLDAsMjU1LDI1NSwyLDIsMjU1LDAsMiw3LDI1NSwyNTUsMywxLDI1NSwyNTUsMyw2LDI1NSwyNTUsMyw4LDI1NSwwLDQsMiwyNTUsMjU1LDQsMywyNTUsMjU1LDQsNCwyNTUsMjU1LDQsNSwyNTUsMjU1LDQsNywyNTUsMCw1LDMsMjU1LDAsNSw0LDI1NSwwLDUsNSwyNTUsMCw1LDYsMjU1LDBdfSx7XCJ3aWR0aFwiOjQsXCJjaHJcIjpcIjFcIixcImJvbnVzXCI6OTUsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDEsMjU1LDI1NSwwLDcsMjU1LDI1NSwxLDAsMjU1LDI1NSwxLDEsMjU1LDI1NSwxLDIsMjU1LDI1NSwxLDMsMjU1LDI1NSwxLDQsMjU1LDI1NSwxLDUsMjU1LDI1NSwxLDYsMjU1LDI1NSwxLDcsMjU1LDI1NSwxLDgsMjU1LDAsMiwxLDI1NSwwLDIsMiwyNTUsMCwyLDMsMjU1LDAsMiw0LDI1NSwwLDIsNSwyNTUsMCwyLDYsMjU1LDAsMiw3LDI1NSwyNTUsMiw4LDI1NSwwXX0se1wid2lkdGhcIjo3LFwiY2hyXCI6XCIyXCIsXCJib251c1wiOjE0MCxcInNlY29uZGFyeVwiOmZhbHNlLFwicGl4ZWxzXCI6WzAsMSwyNTUsMjU1LDAsNiwyNTUsMjU1LDAsNywyNTUsMjU1LDEsMCwyNTUsMjU1LDEsMiwyNTUsMCwxLDUsMjU1LDI1NSwxLDcsMjU1LDI1NSwxLDgsMjU1LDAsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsNCwyNTUsMjU1LDIsNiwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsMywyNTUsMjU1LDMsNSwyNTUsMCwzLDcsMjU1LDI1NSwzLDgsMjU1LDAsNCwxLDI1NSwyNTUsNCwyLDI1NSwyNTUsNCw0LDI1NSwwLDQsNywyNTUsMjU1LDQsOCwyNTUsMCw1LDIsMjU1LDAsNSwzLDI1NSwwLDUsOCwyNTUsMF19LHtcIndpZHRoXCI6NixcImNoclwiOlwiM1wiLFwiYm9udXNcIjoxMTUsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDEsMjU1LDI1NSwwLDYsMjU1LDI1NSwxLDAsMjU1LDI1NSwxLDIsMjU1LDAsMSwzLDI1NSwyNTUsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsMywyNTUsMjU1LDIsNCwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywxLDI1NSwyNTUsMywyLDI1NSwyNTUsMyw0LDI1NSwyNTUsMyw1LDI1NSwyNTUsMyw2LDI1NSwyNTUsMyw4LDI1NSwwLDQsMiwyNTUsMCw0LDMsMjU1LDAsNCw1LDI1NSwwLDQsNiwyNTUsMCw0LDcsMjU1LDBdfSx7XCJ3aWR0aFwiOjUsXCJjaHJcIjpcIjRcIixcImJvbnVzXCI6MTEwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwwLDI1NSwyNTUsMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMSwxLDI1NSwwLDEsMiwyNTUsMCwxLDMsMjU1LDAsMSw0LDI1NSwwLDEsNSwyNTUsMjU1LDEsNiwyNTUsMCwyLDMsMjU1LDI1NSwyLDQsMjU1LDI1NSwyLDUsMjU1LDI1NSwyLDYsMjU1LDI1NSwyLDcsMjU1LDI1NSwzLDQsMjU1LDAsMyw1LDI1NSwyNTUsMyw2LDI1NSwwLDMsNywyNTUsMCwzLDgsMjU1LDBdfSx7XCJ3aWR0aFwiOjYsXCJjaHJcIjpcIjVcIixcImJvbnVzXCI6MTM1LFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwwLDI1NSwyNTUsMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw2LDI1NSwyNTUsMSwwLDI1NSwyNTUsMSwxLDI1NSwwLDEsMiwyNTUsMCwxLDMsMjU1LDI1NSwxLDQsMjU1LDAsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsMywyNTUsMjU1LDIsNCwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsNCwyNTUsMjU1LDMsNSwyNTUsMjU1LDMsNiwyNTUsMjU1LDMsOCwyNTUsMCw0LDEsMjU1LDAsNCw1LDI1NSwwLDQsNiwyNTUsMCw0LDcsMjU1LDBdfSx7XCJ3aWR0aFwiOjcsXCJjaHJcIjpcIjZcIixcImJvbnVzXCI6MTYwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMCw2LDI1NSwyNTUsMSwxLDI1NSwyNTUsMSwzLDI1NSwwLDEsNCwyNTUsMjU1LDEsNSwyNTUsMCwxLDYsMjU1LDAsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwyLDI1NSwwLDIsMywyNTUsMjU1LDIsNSwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsMywyNTUsMjU1LDMsNCwyNTUsMCwzLDcsMjU1LDI1NSwzLDgsMjU1LDAsNCwxLDI1NSwyNTUsNCw0LDI1NSwyNTUsNCw1LDI1NSwyNTUsNCw2LDI1NSwyNTUsNCw4LDI1NSwwLDUsMiwyNTUsMCw1LDUsMjU1LDAsNSw2LDI1NSwwLDUsNywyNTUsMF19LHtcIndpZHRoXCI6NixcImNoclwiOlwiN1wiLFwiYm9udXNcIjoxMDUsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDAsMjU1LDI1NSwwLDYsMjU1LDI1NSwwLDcsMjU1LDI1NSwxLDAsMjU1LDI1NSwxLDEsMjU1LDAsMSw0LDI1NSwyNTUsMSw1LDI1NSwyNTUsMSw3LDI1NSwwLDEsOCwyNTUsMCwyLDAsMjU1LDI1NSwyLDEsMjU1LDAsMiwyLDI1NSwyNTUsMiwzLDI1NSwyNTUsMiw1LDI1NSwwLDIsNiwyNTUsMCwzLDAsMjU1LDI1NSwzLDEsMjU1LDI1NSwzLDMsMjU1LDAsMyw0LDI1NSwwLDQsMSwyNTUsMCw0LDIsMjU1LDBdfSx7XCJ3aWR0aFwiOjcsXCJjaHJcIjpcIjhcIixcImJvbnVzXCI6MTcwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMCw2LDI1NSwyNTUsMSwwLDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMjU1LDEsNSwyNTUsMCwxLDYsMjU1LDAsMSw3LDI1NSwyNTUsMiwwLDI1NSwyNTUsMiwxLDI1NSwwLDIsMywyNTUsMjU1LDIsNCwyNTUsMCwyLDcsMjU1LDI1NSwyLDgsMjU1LDAsMywwLDI1NSwyNTUsMywxLDI1NSwwLDMsMywyNTUsMjU1LDMsNCwyNTUsMCwzLDcsMjU1LDI1NSwzLDgsMjU1LDAsNCwxLDI1NSwyNTUsNCwyLDI1NSwyNTUsNCw0LDI1NSwyNTUsNCw1LDI1NSwyNTUsNCw2LDI1NSwyNTUsNCw4LDI1NSwwLDUsMiwyNTUsMCw1LDMsMjU1LDAsNSw1LDI1NSwwLDUsNiwyNTUsMCw1LDcsMjU1LDBdfSx7XCJ3aWR0aFwiOjcsXCJjaHJcIjpcIjlcIixcImJvbnVzXCI6MTMwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMSwwLDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMjU1LDIsMCwyNTUsMjU1LDIsMSwyNTUsMCwyLDQsMjU1LDI1NSwzLDAsMjU1LDI1NSwzLDEsMjU1LDAsMyw0LDI1NSwyNTUsMyw1LDI1NSwwLDQsMSwyNTUsMjU1LDQsMiwyNTUsMjU1LDQsMywyNTUsMjU1LDQsNCwyNTUsMjU1LDQsNSwyNTUsMjU1LDQsNiwyNTUsMjU1LDQsNywyNTUsMjU1LDUsMiwyNTUsMCw1LDMsMjU1LDAsNSw0LDI1NSwwLDUsNSwyNTUsMCw1LDYsMjU1LDAsNSw3LDI1NSwwLDUsOCwyNTUsMF19LHtcIndpZHRoXCI6NyxcImNoclwiOlwibVwiLFwiYm9udXNcIjoxMzAsXCJzZWNvbmRhcnlcIjpmYWxzZSxcInBpeGVsc1wiOlswLDQsMjU1LDI1NSwwLDUsMjU1LDI1NSwwLDYsMjU1LDI1NSwwLDcsMjU1LDI1NSwxLDMsMjU1LDI1NSwxLDUsMjU1LDAsMSw2LDI1NSwwLDEsNywyNTUsMCwxLDgsMjU1LDAsMiw0LDI1NSwyNTUsMiw1LDI1NSwyNTUsMiw2LDI1NSwyNTUsMiw3LDI1NSwyNTUsMywzLDI1NSwyNTUsMyw1LDI1NSwwLDMsNiwyNTUsMCwzLDcsMjU1LDAsMyw4LDI1NSwwLDQsNCwyNTUsMjU1LDQsNSwyNTUsMjU1LDQsNiwyNTUsMjU1LDQsNywyNTUsMjU1LDUsNSwyNTUsMCw1LDYsMjU1LDAsNSw3LDI1NSwwLDUsOCwyNTUsMF19LHtcIndpZHRoXCI6MyxcImNoclwiOlwiKFwiLFwiYm9udXNcIjo4NSxcInNlY29uZGFyeVwiOmZhbHNlLFwicGl4ZWxzXCI6WzAsMSwyNTUsMjU1LDAsMiwyNTUsMjU1LDAsMywyNTUsMjU1LDAsNCwyNTUsMjU1LDAsNSwyNTUsMjU1LDAsNiwyNTUsMjU1LDAsNywyNTUsMjU1LDAsOCwyNTUsMjUsMSwwLDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMCwxLDQsMjU1LDAsMSw1LDI1NSwwLDEsNiwyNTUsMCwxLDcsMjU1LDAsMSw4LDI1NSwyNTUsMiwxLDI1NSwwXX0se1wid2lkdGhcIjoyLFwiY2hyXCI6XCIpXCIsXCJib251c1wiOjcwLFwic2Vjb25kYXJ5XCI6ZmFsc2UsXCJwaXhlbHNcIjpbMCwxLDI1NSwyNTUsMCwyLDI1NSwyNTUsMCwzLDI1NSwyNTUsMCw0LDI1NSwyNTUsMCw1LDI1NSwyNTUsMCw2LDI1NSwyNTUsMCw3LDI1NSwyNTUsMSwyLDI1NSwwLDEsMywyNTUsMCwxLDQsMjU1LDAsMSw1LDI1NSwwLDEsNiwyNTUsMCwxLDcsMjU1LDAsMSw4LDI1NSwwXX1dLFwid2lkdGhcIjo3LFwic3BhY2V3aWR0aFwiOjQsXCJzaGFkb3dcIjp0cnVlLFwiaGVpZ2h0XCI6OSxcImJhc2V5XCI6N30iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ocr/fonts/pixel_digits_8px_shadow.fontmeta.json\n");

/***/ }),

/***/ "../node_modules/@alt1/ocr/index.ts":
/*!******************************************!*\
  !*** ../node_modules/@alt1/ocr/index.ts ***!
  \******************************************/
/*! exports provided: debug, debugout, debugFont, unblendBlackBackground, unblendKnownBg, unblendTrans, canblend, decompose2col, decomposeblack, decompose3col, findChar, findReadLine, GetChatColorMono, getChatColor, readLine, readSmallCapsBackwards, readChar, generatefont */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debug\", function() { return debug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debugout\", function() { return debugout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debugFont\", function() { return debugFont; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unblendBlackBackground\", function() { return unblendBlackBackground; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unblendKnownBg\", function() { return unblendKnownBg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unblendTrans\", function() { return unblendTrans; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canblend\", function() { return canblend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decompose2col\", function() { return decompose2col; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decomposeblack\", function() { return decomposeblack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decompose3col\", function() { return decompose3col; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findChar\", function() { return findChar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findReadLine\", function() { return findReadLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetChatColorMono\", function() { return GetChatColorMono; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChatColor\", function() { return getChatColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readLine\", function() { return readLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readSmallCapsBackwards\", function() { return readSmallCapsBackwards; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readChar\", function() { return readChar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generatefont\", function() { return generatefont; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n\nvar debug = {\n    printcharscores: false,\n    trackread: false\n};\nvar debugout = {};\n/**\n * draws the font definition to a buffer and displays it in the dom for debugging purposes\n * @param font\n */\nfunction debugFont(font) {\n    var spacing = font.width + 2;\n    var buf = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](spacing * font.chars.length, font.height + 1);\n    for (var a = 0; a < buf.data.length; a += 4) {\n        buf.data[a] = buf.data[a + 1] = buf.data[a + 2] = 0;\n        buf.data[a + 3] = 255;\n    }\n    for (var a = 0; a < font.chars.length; a++) {\n        var bx = a * spacing;\n        var chr = font.chars[a];\n        for (var b = 0; b < chr.pixels.length; b += (font.shadow ? 4 : 3)) {\n            buf.setPixel(bx + chr.pixels[b], chr.pixels[b + 1], [chr.pixels[b + 2], chr.pixels[b + 2], chr.pixels[b + 2], 255]);\n            if (font.shadow) {\n                buf.setPixel(bx + chr.pixels[b], chr.pixels[b + 1], [chr.pixels[b + 3], 0, 0, 255]);\n            }\n        }\n    }\n    buf.show();\n}\nfunction unblendBlackBackground(img, r, g, b) {\n    var rimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](img.width, img.height);\n    for (var i = 0; i < img.data.length; i += 4) {\n        var col = decomposeblack(img.data[i], img.data[i + 1], img.data[i + 2], r, g, b);\n        rimg.data[i + 0] = col[0] * 255;\n        rimg.data[i + 1] = rimg.data[i + 0];\n        rimg.data[i + 2] = rimg.data[i + 0];\n        rimg.data[i + 3] = 255;\n    }\n    return rimg;\n}\n/**\n * unblends a imagebuffer into match strength with given color\n * the bgimg argument should contain a second image with pixel occluded by the font visible.\n * @param img\n * @param shadow detect black as second color\n * @param bgimg optional second image to\n */\nfunction unblendKnownBg(img, bgimg, shadow, r, g, b) {\n    if (bgimg && (img.width != bgimg.width || img.height != bgimg.height)) {\n        throw \"bgimg size doesn't match\";\n    }\n    var rimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](img.width, img.height);\n    var totalerror = 0;\n    for (var i = 0; i < img.data.length; i += 4) {\n        var col = decompose2col(img.data[i], img.data[i + 1], img.data[i + 2], r, g, b, bgimg.data[i + 0], bgimg.data[i + 1], bgimg.data[i + 2]);\n        if (shadow) {\n            if (col[2] > 0.01) {\n                console.log(\"high error component: \" + (col[2] * 100).toFixed(1) + \"%\");\n            }\n            totalerror += col[2];\n            var m = 1 - col[1] - Math.abs(col[2]); //main color+black=100%-bg-error\n            rimg.data[i + 0] = m * 255;\n            rimg.data[i + 1] = col[0] / m * 255;\n            rimg.data[i + 2] = rimg.data[i + 0];\n        }\n        else {\n            rimg.data[i + 0] = col[0] * 255;\n            rimg.data[i + 1] = rimg.data[i + 0];\n            rimg.data[i + 2] = rimg.data[i + 0];\n        }\n        rimg.data[i + 3] = 255;\n    }\n    return rimg;\n}\n/**\n * Unblends a font image that is already conpletely isolated to the raw image used ingame. This is the easiest mode for pixel fonts where alpha is 0 or 255, or for extracted font files.\n * @param img\n * @param r\n * @param g\n * @param b\n * @param shadow whether the font has a black shadow\n */\nfunction unblendTrans(img, shadow, r, g, b) {\n    var rimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](img.width, img.height);\n    var pxlum = r + g + b;\n    for (var i = 0; i < img.data.length; i += 4) {\n        if (shadow) {\n            var lum = img.data[i + 0] + img.data[i + 1] + img.data[i + 2];\n            rimg.data[i + 0] = img.data[i + 3];\n            rimg.data[i + 1] = lum / pxlum * 255;\n            rimg.data[i + 2] = rimg.data[i + 0];\n        }\n        else {\n            rimg.data[i + 0] = img.data[i + 3];\n            rimg.data[i + 1] = rimg.data[i + 0];\n            rimg.data[i + 2] = rimg.data[i + 0];\n        }\n        rimg.data[i + 3] = 255;\n    }\n    return rimg;\n}\n/**\n * Determised wether color [rgb]m can be a result of a blend with color [rgb]1 that is p (0-1) of the mix\n * It returns the number that the second color has to lie outside of the possible color ranges\n * @param rm resulting color\n * @param r1 first color of the mix (the other color is unknown)\n * @param p the portion of the [rgb]1 in the mix (0-1)\n */\nfunction canblend(rm, gm, bm, r1, g1, b1, p) {\n    var m = Math.min(50, p / (1 - p));\n    var r = rm + (rm - r1) * m;\n    var g = gm + (gm - g1) * m;\n    var b = bm + (bm - b1) * m;\n    return Math.max(-r, -g, -b, r - 255, g - 255, b - 255);\n}\n/**\n * decomposes a color in 2 given component colors and returns the amount of each color present\n * also return a third (noise) component which is the the amount leftover orthagonal from the 2 given colors\n */\nfunction decompose2col(rp, gp, bp, r1, g1, b1, r2, g2, b2) {\n    //get the normal of the error (cross-product of both colors)\n    var r3 = g1 * b2 - g2 * b1;\n    var g3 = b1 * r2 - b2 * r1;\n    var b3 = r1 * g2 - r2 * g1;\n    //normalize to length 255\n    var norm = 255 / Math.sqrt(r3 * r3 + g3 * g3 + b3 * b3);\n    r3 *= norm;\n    g3 *= norm;\n    b3 *= norm;\n    return decompose3col(rp, gp, bp, r1, g1, b1, r2, g2, b2, r3, g3, b3);\n}\n/**\n * decomposes a pixel in a given color component and black and returns what proportion of the second color it contains\n * this is not as formal as decompose 2/3 and only give a \"good enough\" number\n */\nfunction decomposeblack(rp, gp, bp, r1, g1, b1) {\n    var dr = Math.abs(rp - r1);\n    var dg = Math.abs(gp - g1);\n    var db = Math.abs(bp - b1);\n    var maxdif = Math.max(dr, dg, db);\n    return [1 - maxdif / 255];\n}\n/**\n * decomposes a color in 3 given component colors and returns the amount of each color present\n */\nfunction decompose3col(rp, gp, bp, r1, g1, b1, r2, g2, b2, r3, g3, b3) {\n    //P=x*C1+y*C2+z*C3\n    //assemble as matrix \n    //M*w=p\n    //get inverse of M\n    //dirty written out version of cramer's rule\n    var A = g2 * b3 - b2 * g3;\n    var B = g3 * b1 - b3 * g1;\n    var C = g1 * b2 - b1 * g2;\n    var D = b2 * r3 - r2 * b3;\n    var E = b3 * r1 - r3 * b1;\n    var F = b1 * r2 - r1 * b2;\n    var G = r2 * g3 - g2 * r3;\n    var H = r3 * g1 - g3 * r1;\n    var I = r1 * g2 - g1 * r2;\n    var det = r1 * A + g1 * D + b1 * G;\n    //M^-1*p=w\n    var x = (A * rp + D * gp + G * bp) / det;\n    var y = (B * rp + E * gp + H * bp) / det;\n    var z = (C * rp + F * gp + I * bp) / det;\n    return [x, y, z];\n}\n/**\n * brute force to the exact position of the text\n */\nfunction findChar(buffer, font, col, x, y, w, h) {\n    if (x < 0) {\n        return null;\n    }\n    if (y - font.basey < 0) {\n        return null;\n    }\n    if (x + w + font.width > buffer.width) {\n        return null;\n    }\n    if (y + h - font.basey + font.height > buffer.height) {\n        return null;\n    }\n    var best = 1000; //TODO finetune score constants\n    var bestchar = null;\n    for (var cx = x; cx < x + w; cx++) {\n        for (var cy = y; cy < y + h; cy++) {\n            var chr = readChar(buffer, font, col, cx, cy, false, false);\n            if (chr != null && chr.sizescore < best) {\n                best = chr.sizescore;\n                bestchar = chr;\n            }\n        }\n    }\n    return bestchar;\n}\n/**\n * reads text with unknown exact coord or color. The given coord should be inside the text\n * color selection not implemented yet\n */\nfunction findReadLine(buffer, font, cols, x, y, w = -1, h = -1) {\n    if (w == -1) {\n        w = font.width + font.spacewidth;\n        x -= Math.ceil(w / 2);\n    }\n    if (h == -1) {\n        h = 7;\n        y -= 1;\n    }\n    var chr = null;\n    if (cols.length > 1) {\n        var sorted = GetChatColorMono(buffer, new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](x, y - font.basey, w, h), cols);\n        //loop until we have a match (max 2 cols)\n        for (var a = 0; a < 2 && a < sorted.length && chr == null; a++) {\n            chr = findChar(buffer, font, sorted[a].col, x, y, w, h);\n        }\n    }\n    else {\n        chr = findChar(buffer, font, cols[0], x, y, w, h);\n    }\n    if (chr == null) {\n        return { text: \"\", debugArea: { x, y, w, h } };\n    }\n    return readLine(buffer, font, cols, chr.x, chr.y, true, true);\n}\nfunction GetChatColorMono(buf, rect, colors) {\n    var colormap = colors.map(c => ({ col: c, score: 0 }));\n    if (rect.x < 0 || rect.y < 0 || rect.x + rect.width > buf.width || rect.y + rect.height > buf.height) {\n        return colormap;\n    }\n    var data = buf.data;\n    var maxd = 50;\n    for (var colobj of colormap) {\n        var score = 0;\n        var col = colobj.col;\n        for (var y = rect.y; y < rect.y + rect.height; y++) {\n            for (var x = rect.x; x < rect.x + rect.width; x++) {\n                var i = x * 4 + y * 4 * buf.width;\n                var d = Math.abs(data[i] - col[0]) + Math.abs(data[i + 1] - col[1]) + Math.abs(data[i + 2] - col[2]);\n                if (d < maxd) {\n                    score += maxd - d;\n                }\n            }\n        }\n        colobj.score = score;\n    }\n    return colormap;\n}\nfunction unblend(r, g, b, R, G, B) {\n    var m = Math.sqrt(r * r + g * g + b * b);\n    var n = Math.sqrt(R * R + G * G + B * B);\n    var x = (r * R + g * G + b * B) / n;\n    var y = Math.sqrt(Math.max(0, m * m - x * x));\n    var r1 = Math.max(0, (63.75 - y) * 4);\n    var r2 = x / n * 255;\n    if (r2 > 255) //brighter than refcol\n     {\n        r1 = Math.max(0, r1 - r2 + 255);\n        r2 = 255;\n    }\n    return [r1, r2];\n}\nfunction getChatColor(buf, rect, colors) {\n    var bestscore = -1.0;\n    var best = null;\n    var b2 = 0.0;\n    var data = buf.data;\n    for (let col of colors) {\n        var score = 0.0;\n        for (var y = rect.y; y < rect.y + rect.height; y++) {\n            for (var x = rect.x; x < rect.x + rect.width; x++) {\n                if (x < 0 || x + 1 >= buf.width) {\n                    continue;\n                }\n                if (y < 0 || y + 1 >= buf.width) {\n                    continue;\n                }\n                let i1 = buf.pixelOffset(x, y);\n                let i2 = buf.pixelOffset(x + 1, y + 1);\n                var pixel1 = unblend(data[i1 + 0], data[i1 + 1], data[i1 + 2], col[0], col[1], col[2]);\n                var pixel2 = unblend(data[i2 + 0], data[i2 + 1], data[i2 + 2], col[0], col[1], col[2]);\n                //TODO this is from c# can simplify a bit\n                var s = (pixel1[0] / 255 * pixel1[1] / 255) * (pixel2[0] / 255 * (255.0 - pixel2[1]) / 255);\n                score += s;\n            }\n        }\n        if (score > bestscore) {\n            b2 = bestscore;\n            bestscore = score;\n            best = col;\n        }\n        else if (score > b2) {\n            b2 = score;\n        }\n    }\n    //Console.WriteLine(\"color: \" + bestcol + \" - \" + (bestscore - b2));\n    //bestscore /= rect.width * rect.height;\n    return best;\n}\n/**\n * reads a line of text with exactly known position and color. y should be the y coord of the text base line, x should be the first pixel of a new character\n */\nfunction readLine(buffer, font, colors, x, y, forward, backward = false) {\n    if (typeof colors[0] != \"number\" && colors.length == 1) {\n        colors = colors[0];\n    }\n    var multicol = typeof colors[0] != \"number\";\n    var allcolors = multicol ? colors : [colors];\n    var detectcolor = function (sx, sy, backward) {\n        var w = Math.floor(font.width * 1.5);\n        if (backward) {\n            sx -= w;\n        }\n        sy -= font.basey;\n        return getChatColor(buffer, { x: sx, y: sy, width: w, height: font.height }, allcolors);\n    };\n    var fragments = [];\n    var x1 = x;\n    var x2 = x;\n    var maxspaces = (typeof font.maxspaces == \"number\" ? font.maxspaces : 1);\n    let fragtext = \"\";\n    var lastcol = null;\n    let addfrag = (forward) => {\n        if (!fragtext) {\n            return;\n        }\n        let frag = {\n            text: fragtext,\n            color: lastcol,\n            index: 0,\n            xstart: x + (forward ? fragstartdx : fragenddx),\n            xend: x + (forward ? fragenddx : fragstartdx)\n        };\n        if (forward) {\n            fragments.push(frag);\n        }\n        else {\n            fragments.unshift(frag);\n        }\n        fragtext = \"\";\n        fragstartdx = dx;\n    };\n    for (var dirforward of [true, false]) {\n        //init vars\n        if (dirforward && !forward) {\n            continue;\n        }\n        if (!dirforward && !backward) {\n            continue;\n        }\n        var dx = 0;\n        var fragstartdx = dx;\n        var fragenddx = dx;\n        var triedspaces = 0;\n        var triedrecol = false;\n        var col = multicol ? null : colors;\n        while (true) {\n            col = col || detectcolor(x + dx, y, !dirforward);\n            var chr = (col ? readChar(buffer, font, col, x + dx, y, !dirforward, true) : null);\n            if (col == null || chr == null) {\n                if (triedspaces < maxspaces) {\n                    dx += (dirforward ? 1 : -1) * font.spacewidth;\n                    triedspaces++;\n                    continue;\n                }\n                if (multicol && !triedrecol) {\n                    dx -= (dirforward ? 1 : -1) * triedspaces * font.spacewidth;\n                    triedspaces = 0;\n                    col = null;\n                    triedrecol = true;\n                    continue;\n                }\n                if (dirforward) {\n                    x2 = x + dx - font.spacewidth;\n                }\n                else {\n                    x1 = x + dx + font.spacewidth;\n                }\n                break;\n            }\n            else {\n                if (lastcol && (col[0] != lastcol[0] || col[1] != lastcol[1] || col[2] != lastcol[2])) {\n                    addfrag(dirforward);\n                }\n                var spaces = \"\";\n                for (var a = 0; a < triedspaces; a++) {\n                    spaces += \" \";\n                }\n                if (dirforward) {\n                    fragtext += spaces + chr.chr;\n                }\n                else {\n                    fragtext = chr.chr + spaces + fragtext;\n                }\n                triedspaces = 0;\n                triedrecol = false;\n                dx += (dirforward ? 1 : -1) * chr.basechar.width;\n                fragenddx = dx;\n                lastcol = col;\n            }\n        }\n        if (lastcol) {\n            addfrag(dirforward);\n        }\n    }\n    fragments.forEach((f, i) => f.index = i);\n    return {\n        debugArea: { x: x1, y: y - 9, w: x2 - x1, h: 10 },\n        text: fragments.map(f => f.text).join(\"\"),\n        fragments\n    };\n}\n/**\n * Reads a line of text that uses a smallcaps font, these fonts can have duplicate chars that only have a different amount of\n * empty space after the char before the next char starts.\n * The coordinates should be near the end of the string, or a rectangle with high 1 containing all points where the string can end.\n */\nfunction readSmallCapsBackwards(buffer, font, cols, x, y, w = -1, h = -1) {\n    if (w == -1) {\n        w = font.width + font.spacewidth;\n        x -= Math.ceil(w / 2);\n    }\n    if (h == -1) {\n        h = 7;\n        y -= 1;\n    }\n    var matchedchar = null;\n    var sorted = (cols.length == 1 ? [{ col: cols[0], score: 1 }] : GetChatColorMono(buffer, new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"Rect\"](x, y - font.basey, w, h), cols));\n    //loop until we have a match (max 2 cols)\n    for (var a = 0; a < 2 && a < sorted.length && matchedchar == null; a++) {\n        for (var cx = x + w - 1; cx >= x; cx--) {\n            var best = 1000; //TODO finetune score constants\n            var bestchar = null;\n            for (var cy = y; cy < y + h; cy++) {\n                var chr = readChar(buffer, font, sorted[a].col, cx, cy, true, false);\n                if (chr != null && chr.sizescore < best) {\n                    best = chr.sizescore;\n                    bestchar = chr;\n                }\n            }\n            if (bestchar) {\n                matchedchar = bestchar;\n                break;\n            }\n        }\n    }\n    if (matchedchar == null) {\n        return { text: \"\", debugArea: { x, y, w, h } };\n    }\n    return readLine(buffer, font, cols, matchedchar.x, matchedchar.y, false, true);\n}\n/**\n * Reads a single character at the exact given location\n * @param x exact x location of the start of the character domain (includes part of the spacing between characters)\n * @param y exact y location of the baseline pixel of the character\n * @param backwards read in backwards direction, the x location should be the first pixel after the character domain in that case\n */\nfunction readChar(buffer, font, col, x, y, backwards, allowSecondary) {\n    y -= font.basey;\n    var shiftx = 0;\n    var shifty = font.basey;\n    var shadow = font.shadow;\n    var debugobj = null;\n    var debugimg = null;\n    if (debug.trackread) {\n        var name = x + \";\" + y + \" \" + JSON.stringify(col);\n        if (!debugout[name]) {\n            debugout[name] = [];\n        }\n        debugobj = debugout[name];\n    }\n    //===== make sure the full domain is inside the bitmap/buffer ======\n    if (y < 0 || y + font.height >= buffer.height) {\n        return null;\n    }\n    if (!backwards) {\n        if (x < 0 || x + font.width > buffer.width) {\n            return null;\n        }\n    }\n    else {\n        if (x - font.width < 0 || x > buffer.width) {\n            return null;\n        }\n    }\n    //====== start reading the char ======\n    var scores = [];\n    for (var chr = 0; chr < font.chars.length; chr++) {\n        var chrobj = font.chars[chr];\n        if (chrobj.secondary && !allowSecondary) {\n            continue;\n        }\n        scores[chr] = { score: 0, sizescore: 0, chr: chrobj };\n        var chrx = (backwards ? x - chrobj.width : x);\n        if (debug.trackread) {\n            debugimg = new _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"ImageData\"](font.width, font.height);\n        }\n        for (var a = 0; a < chrobj.pixels.length;) {\n            var i = (chrx + chrobj.pixels[a]) * 4 + (y + chrobj.pixels[a + 1]) * buffer.width * 4;\n            var penalty = 0;\n            if (!shadow) {\n                penalty = canblend(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], col[0], col[1], col[2], chrobj.pixels[a + 2] / 255);\n                a += 3;\n            }\n            else {\n                var lum = chrobj.pixels[a + 3] / 255;\n                penalty = canblend(buffer.data[i], buffer.data[i + 1], buffer.data[i + 2], col[0] * lum, col[1] * lum, col[2] * lum, chrobj.pixels[a + 2] / 255);\n                a += 4;\n            }\n            scores[chr].score += Math.max(0, penalty);\n            //TODO add compiler flag to this to remove it for performance\n            if (debugimg) {\n                debugimg.setPixel(chrobj.pixels[a], chrobj.pixels[a + 1], [penalty, penalty, penalty, 255]);\n            }\n        }\n        scores[chr].sizescore = scores[chr].score - chrobj.bonus;\n        if (debugobj) {\n            debugobj.push({ chr: chrobj.chr, score: scores[chr].sizescore, rawscore: scores[chr].score, img: debugimg });\n        }\n    }\n    scores.sort((a, b) => a.sizescore - b.sizescore);\n    if (debug.printcharscores) {\n        scores.slice(0, 5).forEach(q => console.log(q.chr.chr, q.score.toFixed(3), q.sizescore.toFixed(3)));\n    }\n    var winchr = scores[0];\n    if (!winchr || winchr.score > 400) {\n        return null;\n    }\n    return { chr: winchr.chr.chr, basechar: winchr.chr, x: x + shiftx, y: y + shifty, score: winchr.score, sizescore: winchr.sizescore };\n}\n/**\n * Generates a font json description to use in reader functions\n * @param unblended A source image with all characters lined up. The image should be unblended into components using the unblend functions\n * The lowest pixel line of this image is used to mark the location and size of the charecters if the red component is 255 it means there is a character on that pixel column\n * @param chars A string containing all the characters of the image in the same order\n * @param seconds A string with characters that are considered unlikely and should only be detected if no other character is possible.\n * For example the period (.) character matches positive inside many other characters and should be marked as secondary\n * @param bonusses An object that contains bonus scores for certain difficult characters to make the more likely to be red.\n * @param basey The y position of the baseline pixel of the font\n * @param spacewidth the number of pixels a space takes\n * @param treshold minimal color match proportion (0-1) before a pixel is used for the font\n * @param shadow whether this font also uses the black shadow some fonts have. The \"unblended\" image should be unblended correspondingly\n * @returns a javascript object describing the font which is used as input for the different read functions\n */\nfunction generatefont(unblended, chars, seconds, bonusses, basey, spacewidth, treshold, shadow) {\n    //settings vars\n    treshold *= 255;\n    //initial vars\n    var miny = unblended.height - 1;\n    var maxy = 0;\n    var font = { chars: [], width: 0, spacewidth: spacewidth, shadow: shadow, height: 0, basey: 0 };\n    var ds = false;\n    var chardata = [];\n    //index all chars\n    for (var dx = 0; dx < unblended.width; dx++) {\n        var i = 4 * dx + 4 * unblended.width * (unblended.height - 1);\n        if (unblended.data[i] == 255 && unblended.data[i + 3] == 255) {\n            if (ds === false) {\n                ds = dx;\n            }\n        }\n        else {\n            if (ds !== false) {\n                //char found, start detection\n                var de = dx;\n                var char = chars[chardata.length];\n                var chr = {\n                    ds: ds,\n                    de: de,\n                    width: de - ds,\n                    chr: char,\n                    bonus: (bonusses && bonusses[char]) || 0,\n                    secondary: seconds.indexOf(chars[chardata.length]) != -1,\n                    pixels: []\n                };\n                chardata.push(chr);\n                font.width = Math.max(font.width, chr.width);\n                for (x = 0; x < de - ds; x++) {\n                    for (y = 0; y < unblended.height - 1; y++) {\n                        var i = (x + ds) * 4 + y * unblended.width * 4;\n                        if (unblended.data[i] >= treshold) {\n                            miny = Math.min(miny, y);\n                            maxy = Math.max(maxy, y);\n                        }\n                    }\n                }\n                ds = false;\n            }\n        }\n    }\n    font.height = maxy + 1 - miny;\n    font.basey = basey - miny;\n    //detect all pixels\n    for (var a in chardata) {\n        var chr = chardata[a];\n        for (var x = 0; x < chr.width; x++) {\n            for (var y = 0; y < maxy + 1 - miny; y++) {\n                var i = (x + chr.ds) * 4 + (y + miny) * unblended.width * 4;\n                if (unblended.data[i] >= treshold) {\n                    chr.pixels.push(x, y);\n                    chr.pixels.push(unblended.data[i]);\n                    if (shadow) {\n                        chr.pixels.push(unblended.data[i + 1]);\n                    }\n                    chr.bonus += 5;\n                }\n            }\n        }\n        //remove process vars from final json obj\n        delete chr.ds;\n        delete chr.de;\n        //prevent js from doing the thing with unnecessary output precision\n        chr.bonus = +chr.bonus.toFixed(3);\n        font.chars.push(chr);\n    }\n    return font;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@alt1/ocr/index.ts\n");

/***/ }),

/***/ "../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png":
/*!******************************************************************************!*\
  !*** ../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"Prayer.png\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vUHJheWVyLnBuZz83OTc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLGVBQWUiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzP25hbWU9W25hbWVdLltleHRdIS4vUHJheWVyLnBuZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJQcmF5ZXIucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png\n");

/***/ }),

/***/ "../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json":
/*!**********************************************************************************!*\
  !*** ../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"appconfig.json\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vYXBwY29uZmlnLmpzb24/ZmIyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLG9GQUF1QixtQkFBbUIiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzP25hbWU9W25hbWVdLltleHRdIS4vYXBwY29uZmlnLmpzb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYXBwY29uZmlnLmpzb25cIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json\n");

/***/ }),

/***/ "../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html":
/*!******************************************************************************!*\
  !*** ../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"index.html\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vaW5kZXguaHRtbD8xMmRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsb0ZBQXVCLGVBQWUiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2ZpbGUtbG9hZGVyL2Rpc3QvY2pzLmpzP25hbWU9W25hbWVdLltleHRdIS4vaW5kZXguaHRtbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbmRleC5odG1sXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html\n");

/***/ }),

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/*! exports provided: capture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capture\", function() { return capture; });\n/* harmony import */ var _alt1_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @alt1/base */ \"../node_modules/@alt1/base/index.ts\");\n/* harmony import */ var _alt1_ability__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @alt1/ability */ \"../node_modules/@alt1/ability/index.ts\");\n\n\n__webpack_require__(/*! file-loader?name=[name].[ext]!./appconfig.json */ \"../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./appconfig.json\");\n__webpack_require__(/*! file-loader?name=[name].[ext]!./index.html */ \"../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./index.html\");\n__webpack_require__(/*! file-loader?name=[name].[ext]!./Prayer.png */ \"../node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./Prayer.png\");\nvar img = _alt1_base__WEBPACK_IMPORTED_MODULE_0__[\"captureHoldFullRs\"]();\nconst ability = new _alt1_ability__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([]);\nfunction capture() {\n    ability.actionbarReader.find(img);\n    return ability.actionbarReader.read();\n}\nif (window.alt1) {\n    alt1.identifyAppUrl(\"https://tengju.github.io/better-bars/release/appconfig.json\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BTFQxLy4vaW5kZXgudHM/NDZmNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvQztBQUNBO0FBQ3BDLG1CQUFPLENBQUMsa0lBQWlEO0FBQ3pELG1CQUFPLENBQUMsMEhBQTZDO0FBQ3JELG1CQUFPLENBQUMsMEhBQTZDO0FBQ3JELFVBQVUsNERBQXVCO0FBQ2pDLG9CQUFvQixxREFBTztBQUNwQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYTFsaWIgZnJvbSBcIkBhbHQxL2Jhc2VcIjtcbmltcG9ydCBBYmlsaXR5IGZyb20gXCJAYWx0MS9hYmlsaXR5XCI7XG5yZXF1aXJlKFwiIWZpbGUtbG9hZGVyP25hbWU9W25hbWVdLltleHRdIS4vYXBwY29uZmlnLmpzb25cIik7XG5yZXF1aXJlKFwiIWZpbGUtbG9hZGVyP25hbWU9W25hbWVdLltleHRdIS4vaW5kZXguaHRtbFwiKTtcbnJlcXVpcmUoXCIhZmlsZS1sb2FkZXI/bmFtZT1bbmFtZV0uW2V4dF0hLi9QcmF5ZXIucG5nXCIpO1xudmFyIGltZyA9IGExbGliLmNhcHR1cmVIb2xkRnVsbFJzKCk7XG5jb25zdCBhYmlsaXR5ID0gbmV3IEFiaWxpdHkoW10pO1xuZXhwb3J0IGZ1bmN0aW9uIGNhcHR1cmUoKSB7XG4gICAgYWJpbGl0eS5hY3Rpb25iYXJSZWFkZXIuZmluZChpbWcpO1xuICAgIHJldHVybiBhYmlsaXR5LmFjdGlvbmJhclJlYWRlci5yZWFkKCk7XG59XG5pZiAod2luZG93LmFsdDEpIHtcbiAgICBhbHQxLmlkZW50aWZ5QXBwVXJsKFwiaHR0cHM6Ly90ZW5nanUuZ2l0aHViLmlvL2JldHRlci1iYXJzL3JlbGVhc2UvYXBwY29uZmlnLmpzb25cIik7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./index.ts\n");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** multi ./index.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/proxyteng/game-dev/runescape/better-bars/src/index.ts */"./index.ts");


/***/ })

/******/ });
});